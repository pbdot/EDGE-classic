#pragma once
/*
    #version:1# (machine generated, don't edit!)

    Generated by sokol-shdc (https://github.com/floooh/sokol-tools)

    Cmdline:
        sokol-shdc -i world.glsl -o world.h -l glsl410:hlsl4:glsl300es -b

    Overview:
    =========
    Shader program: 'sgl':
        Get shader desc: sgl_shader_desc(sg_query_backend());
        Vertex Shader: vs
        Fragment Shader: fs
        Attributes:
            ATTR_sgl_position => 0
            ATTR_sgl_normal => 1
            ATTR_sgl_texcoords => 2
            ATTR_sgl_color0 => 3
            ATTR_sgl_psize => 4
    Bindings:
        Uniform block 'vs_params':
            C struct: vs_params_t
            Bind slot: UB_vs_params => 0
        Uniform block 'state':
            C struct: state_t
            Bind slot: UB_state => 1
        Image 'tex0':
            Image type: SG_IMAGETYPE_2D
            Sample type: SG_IMAGESAMPLETYPE_FLOAT
            Multisampled: false
            Bind slot: IMG_tex0 => 0
        Image 'tex1':
            Image type: SG_IMAGETYPE_2D
            Sample type: SG_IMAGESAMPLETYPE_FLOAT
            Multisampled: false
            Bind slot: IMG_tex1 => 1
        Sampler 'smp0':
            Type: SG_SAMPLERTYPE_FILTERING
            Bind slot: SMP_smp0 => 0
        Sampler 'smp1':
            Type: SG_SAMPLERTYPE_FILTERING
            Bind slot: SMP_smp1 => 1
*/
#if !defined(SOKOL_GFX_INCLUDED)
#error "Please include sokol_gfx.h before world.h"
#endif
#if !defined(SOKOL_SHDC_ALIGN)
#if defined(_MSC_VER)
#define SOKOL_SHDC_ALIGN(a) __declspec(align(a))
#else
#define SOKOL_SHDC_ALIGN(a) __attribute__((aligned(a)))
#endif
#endif
#define ATTR_sgl_position (0)
#define ATTR_sgl_normal (1)
#define ATTR_sgl_texcoords (2)
#define ATTR_sgl_color0 (3)
#define ATTR_sgl_psize (4)
#define UB_vs_params (0)
#define UB_state (1)
#define IMG_tex0 (0)
#define IMG_tex1 (1)
#define SMP_smp0 (0)
#define SMP_smp1 (1)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct vs_params_t {
    HMM_Mat4 mvp;
    HMM_Mat4 tm;
    HMM_Mat4 mv;
    float clipplane0[4];
    float clipplane1[4];
    float clipplane2[4];
    float clipplane3[4];
    float clipplane4[4];
    float clipplane5[4];
} vs_params_t;
#pragma pack(pop)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct state_t {
    int flags;
    float alpha_test;
    int clipplanes;
    int fog_mode;
    float fog_color[4];
    float fog_density;
    float fog_start;
    float fog_end;
    float fog_scale;
} state_t;
#pragma pack(pop)
/*
    #version 410

    uniform vec4 vs_params[18];
    layout(location = 0) in vec4 position;
    layout(location = 4) in float psize;
    layout(location = 0) out vec4 uv;
    layout(location = 2) in vec4 texcoords;
    layout(location = 1) out vec4 color;
    layout(location = 3) in vec4 color0;
    layout(location = 5) out float clipvertex0;
    layout(location = 6) out float clipvertex1;
    layout(location = 7) out float clipvertex2;
    layout(location = 8) out float clipvertex3;
    layout(location = 9) out float clipvertex4;
    layout(location = 10) out float clipvertex5;
    layout(location = 2) out vec3 vpos;
    layout(location = 3) out vec3 vnormal;
    layout(location = 1) in vec4 normal;
    layout(location = 4) out vec4 veye_normal;

    void main()
    {
        vec4 _22 = mat4(vs_params[8], vs_params[9], vs_params[10], vs_params[11]) * position;
        gl_Position = mat4(vs_params[0], vs_params[1], vs_params[2], vs_params[3]) * position;
        gl_PointSize = psize;
        uv = texcoords;
        color = color0;
        clipvertex0 = dot(_22, vs_params[12]);
        clipvertex1 = dot(_22, vs_params[13]);
        clipvertex2 = dot(_22, vs_params[14]);
        clipvertex3 = dot(_22, vs_params[15]);
        clipvertex4 = dot(_22, vs_params[16]);
        clipvertex5 = dot(_22, vs_params[17]);
        vpos = _22.xyz;
        vnormal = normalize(normal.xyz);
        veye_normal = mat4(vs_params[4], vs_params[5], vs_params[6], vs_params[7]) * vec4(vnormal, 1.0);
    }

*/
static const uint8_t vs_source_glsl410[1368] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x34,0x31,0x30,0x0a,0x0a,0x75,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x76,0x73,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x73,0x5b,0x31,0x38,0x5d,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,
    0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x69,
    0x6e,0x20,0x76,0x65,0x63,0x34,0x20,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,
    0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,
    0x20,0x3d,0x20,0x34,0x29,0x20,0x69,0x6e,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,
    0x73,0x69,0x7a,0x65,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,
    0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x6f,0x75,0x74,0x20,0x76,
    0x65,0x63,0x34,0x20,0x75,0x76,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,
    0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x32,0x29,0x20,0x69,0x6e,0x20,
    0x76,0x65,0x63,0x34,0x20,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x73,0x3b,0x0a,
    0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,
    0x3d,0x20,0x31,0x29,0x20,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x34,0x20,0x63,0x6f,
    0x6c,0x6f,0x72,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,
    0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x33,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,
    0x34,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x30,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,
    0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x35,0x29,0x20,0x6f,
    0x75,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x63,0x6c,0x69,0x70,0x76,0x65,0x72,
    0x74,0x65,0x78,0x30,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,
    0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x36,0x29,0x20,0x6f,0x75,0x74,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x20,0x63,0x6c,0x69,0x70,0x76,0x65,0x72,0x74,0x65,0x78,0x31,
    0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,
    0x6e,0x20,0x3d,0x20,0x37,0x29,0x20,0x6f,0x75,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x63,0x6c,0x69,0x70,0x76,0x65,0x72,0x74,0x65,0x78,0x32,0x3b,0x0a,0x6c,0x61,
    0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,
    0x38,0x29,0x20,0x6f,0x75,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x63,0x6c,0x69,
    0x70,0x76,0x65,0x72,0x74,0x65,0x78,0x33,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,
    0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x39,0x29,0x20,0x6f,
    0x75,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x63,0x6c,0x69,0x70,0x76,0x65,0x72,
    0x74,0x65,0x78,0x34,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,
    0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x31,0x30,0x29,0x20,0x6f,0x75,0x74,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x63,0x6c,0x69,0x70,0x76,0x65,0x72,0x74,0x65,0x78,
    0x35,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,
    0x6f,0x6e,0x20,0x3d,0x20,0x32,0x29,0x20,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x33,
    0x20,0x76,0x70,0x6f,0x73,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,
    0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x33,0x29,0x20,0x6f,0x75,0x74,0x20,
    0x76,0x65,0x63,0x33,0x20,0x76,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x6c,0x61,
    0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,
    0x31,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x34,0x20,0x6e,0x6f,0x72,0x6d,0x61,
    0x6c,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,
    0x6f,0x6e,0x20,0x3d,0x20,0x34,0x29,0x20,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x34,
    0x20,0x76,0x65,0x79,0x65,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x0a,0x76,
    0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x32,0x32,0x20,0x3d,0x20,0x6d,0x61,0x74,0x34,
    0x28,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x38,0x5d,0x2c,0x20,0x76,
    0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x39,0x5d,0x2c,0x20,0x76,0x73,0x5f,
    0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x30,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,
    0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x31,0x5d,0x29,0x20,0x2a,0x20,0x70,0x6f,0x73,
    0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,
    0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x6d,0x61,0x74,0x34,0x28,0x76,0x73,
    0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,
    0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,
    0x61,0x6d,0x73,0x5b,0x32,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x5b,0x33,0x5d,0x29,0x20,0x2a,0x20,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x69,0x6e,0x74,0x53,0x69,
    0x7a,0x65,0x20,0x3d,0x20,0x70,0x73,0x69,0x7a,0x65,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x75,0x76,0x20,0x3d,0x20,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x73,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x63,0x6f,0x6c,0x6f,
    0x72,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x63,0x6c,0x69,0x70,0x76,0x65,0x72,0x74,
    0x65,0x78,0x30,0x20,0x3d,0x20,0x64,0x6f,0x74,0x28,0x5f,0x32,0x32,0x2c,0x20,0x76,
    0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x32,0x5d,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x63,0x6c,0x69,0x70,0x76,0x65,0x72,0x74,0x65,0x78,0x31,0x20,0x3d,
    0x20,0x64,0x6f,0x74,0x28,0x5f,0x32,0x32,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,
    0x61,0x6d,0x73,0x5b,0x31,0x33,0x5d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x63,0x6c,
    0x69,0x70,0x76,0x65,0x72,0x74,0x65,0x78,0x32,0x20,0x3d,0x20,0x64,0x6f,0x74,0x28,
    0x5f,0x32,0x32,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,
    0x34,0x5d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x63,0x6c,0x69,0x70,0x76,0x65,0x72,
    0x74,0x65,0x78,0x33,0x20,0x3d,0x20,0x64,0x6f,0x74,0x28,0x5f,0x32,0x32,0x2c,0x20,
    0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x35,0x5d,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x63,0x6c,0x69,0x70,0x76,0x65,0x72,0x74,0x65,0x78,0x34,0x20,
    0x3d,0x20,0x64,0x6f,0x74,0x28,0x5f,0x32,0x32,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x73,0x5b,0x31,0x36,0x5d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x63,
    0x6c,0x69,0x70,0x76,0x65,0x72,0x74,0x65,0x78,0x35,0x20,0x3d,0x20,0x64,0x6f,0x74,
    0x28,0x5f,0x32,0x32,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,
    0x31,0x37,0x5d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x70,0x6f,0x73,0x20,0x3d,
    0x20,0x5f,0x32,0x32,0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x6e,
    0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,
    0x65,0x28,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x2e,0x78,0x79,0x7a,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x76,0x65,0x79,0x65,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3d,
    0x20,0x6d,0x61,0x74,0x34,0x28,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,
    0x34,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x35,0x5d,
    0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x36,0x5d,0x2c,0x20,
    0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x37,0x5d,0x29,0x20,0x2a,0x20,
    0x76,0x65,0x63,0x34,0x28,0x76,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,0x31,0x2e,
    0x30,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 410

    struct state
    {
        int flags;
        float alpha_test;
        int clipplanes;
        int fog_mode;
        vec4 fog_color;
        float fog_density;
        float fog_start;
        float fog_end;
        float fog_scale;
    };

    uniform state _14;

    uniform sampler2D tex0_smp0;
    uniform sampler2D tex1_smp1;

    layout(location = 5) in float clipvertex0;
    layout(location = 6) in float clipvertex1;
    layout(location = 7) in float clipvertex2;
    layout(location = 8) in float clipvertex3;
    layout(location = 9) in float clipvertex4;
    layout(location = 10) in float clipvertex5;
    layout(location = 0) in vec4 uv;
    layout(location = 0) out vec4 frag_color;
    layout(location = 1) in vec4 color;
    layout(location = 2) in vec3 vpos;
    layout(location = 1) out vec4 frag_normal;
    layout(location = 4) in vec4 veye_normal;
    layout(location = 3) in vec3 vnormal;

    void main()
    {
        float c = 0.0;
        if ((_14.clipplanes & 1) == 1)
        {
            c += min(0.0, clipvertex0);
        }
        if ((_14.clipplanes & 2) == 2)
        {
            c += min(0.0, clipvertex1);
        }
        if ((_14.clipplanes & 4) == 4)
        {
            c += min(0.0, clipvertex2);
        }
        if ((_14.clipplanes & 8) == 8)
        {
            c += min(0.0, clipvertex3);
        }
        if ((_14.clipplanes & 16) == 16)
        {
            c += min(0.0, clipvertex4);
        }
        if ((_14.clipplanes & 32) == 32)
        {
            c += min(0.0, clipvertex5);
        }
        if (c < 0.0)
        {
            discard;
        }
        if ((_14.flags & 2) == 2)
        {
            frag_color = color;
            frag_color.w *= min(1.0 - smoothstep(1.0 - (3.0 / uv.z), 1.0, abs(uv.x / uv.z)), 1.0 - smoothstep(1.0 - (3.0 / uv.w), 1.0, abs(uv.y / uv.w)));
            return;
        }
        vec4 _176 = texture(tex0_smp0, uv.xy);
        bool _180 = _14.alpha_test != 0.0;
        bool _188;
        if (_180)
        {
            _188 = _176.w < _14.alpha_test;
        }
        else
        {
            _188 = _180;
        }
        if (_188)
        {
            discard;
        }
        vec4 fcolor = color;
        float fogf = 0.0;
        if (_14.fog_mode != 0)
        {
            float _206 = length(vpos);
            if (_14.fog_mode == 1)
            {
                fogf = clamp(smoothstep(_14.fog_start, _14.fog_end, _206), 0.0, 1.0);
            }
            else
            {
                fogf = 1.0 - clamp(exp2(((((-_14.fog_density) * _14.fog_density) * _206) * _206) * 1.44269502162933349609375), 0.0, 1.0);
            }
        }
        if ((_14.flags & 1) == 1)
        {
            fcolor = (fcolor * _176) * texture(tex1_smp1, uv.zw);
            if (fogf > 0.0)
            {
                fcolor = mix(fcolor, _14.fog_color, vec4(fogf));
            }
        }
        else
        {
            fcolor *= _176;
            if (fogf > 0.0)
            {
                vec4 _276 = fcolor;
                vec4 _281 = mix(_276, _14.fog_color, vec4(fogf));
                vec4 _305 = _276;
                _305.x = _281.x;
                _305.y = _281.y;
                _305.z = _281.z;
                fcolor = _305;
            }
        }
        frag_color = fcolor;
        frag_normal = vec4((veye_normal.xyz * 0.5) + vec3(0.5), 1.0);
    }

*/
static const uint8_t fs_source_glsl410[2938] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x34,0x31,0x30,0x0a,0x0a,0x73,0x74,
    0x72,0x75,0x63,0x74,0x20,0x73,0x74,0x61,0x74,0x65,0x0a,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x69,0x6e,0x74,0x20,0x66,0x6c,0x61,0x67,0x73,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x61,0x6c,0x70,0x68,0x61,0x5f,0x74,0x65,0x73,0x74,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x63,0x6c,0x69,0x70,0x70,0x6c,
    0x61,0x6e,0x65,0x73,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x66,0x6f,
    0x67,0x5f,0x6d,0x6f,0x64,0x65,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,
    0x20,0x66,0x6f,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x66,0x6f,0x67,0x5f,0x64,0x65,0x6e,0x73,0x69,0x74,
    0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x66,0x6f,0x67,
    0x5f,0x73,0x74,0x61,0x72,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x66,0x6f,0x67,0x5f,0x65,0x6e,0x64,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x20,0x66,0x6f,0x67,0x5f,0x73,0x63,0x61,0x6c,0x65,0x3b,0x0a,
    0x7d,0x3b,0x0a,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x73,0x74,0x61,0x74,
    0x65,0x20,0x5f,0x31,0x34,0x3b,0x0a,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,
    0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,0x20,0x74,0x65,0x78,0x30,0x5f,0x73,
    0x6d,0x70,0x30,0x3b,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x73,0x61,0x6d,
    0x70,0x6c,0x65,0x72,0x32,0x44,0x20,0x74,0x65,0x78,0x31,0x5f,0x73,0x6d,0x70,0x31,
    0x3b,0x0a,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,
    0x6f,0x6e,0x20,0x3d,0x20,0x35,0x29,0x20,0x69,0x6e,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x63,0x6c,0x69,0x70,0x76,0x65,0x72,0x74,0x65,0x78,0x30,0x3b,0x0a,0x6c,0x61,
    0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,
    0x36,0x29,0x20,0x69,0x6e,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x63,0x6c,0x69,0x70,
    0x76,0x65,0x72,0x74,0x65,0x78,0x31,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,
    0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x37,0x29,0x20,0x69,0x6e,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x63,0x6c,0x69,0x70,0x76,0x65,0x72,0x74,0x65,
    0x78,0x32,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,
    0x69,0x6f,0x6e,0x20,0x3d,0x20,0x38,0x29,0x20,0x69,0x6e,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x63,0x6c,0x69,0x70,0x76,0x65,0x72,0x74,0x65,0x78,0x33,0x3b,0x0a,0x6c,
    0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,
    0x20,0x39,0x29,0x20,0x69,0x6e,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x63,0x6c,0x69,
    0x70,0x76,0x65,0x72,0x74,0x65,0x78,0x34,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,
    0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x31,0x30,0x29,0x20,
    0x69,0x6e,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x63,0x6c,0x69,0x70,0x76,0x65,0x72,
    0x74,0x65,0x78,0x35,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,
    0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,
    0x63,0x34,0x20,0x75,0x76,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,
    0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x6f,0x75,0x74,0x20,
    0x76,0x65,0x63,0x34,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,
    0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,
    0x20,0x3d,0x20,0x31,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x34,0x20,0x63,0x6f,
    0x6c,0x6f,0x72,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,
    0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x32,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,
    0x33,0x20,0x76,0x70,0x6f,0x73,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,
    0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x31,0x29,0x20,0x6f,0x75,0x74,
    0x20,0x76,0x65,0x63,0x34,0x20,0x66,0x72,0x61,0x67,0x5f,0x6e,0x6f,0x72,0x6d,0x61,
    0x6c,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,
    0x6f,0x6e,0x20,0x3d,0x20,0x34,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x34,0x20,
    0x76,0x65,0x79,0x65,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x6c,0x61,0x79,
    0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x33,
    0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x6e,0x6f,0x72,0x6d,0x61,
    0x6c,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x63,0x20,0x3d,0x20,
    0x30,0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x28,0x5f,0x31,
    0x34,0x2e,0x63,0x6c,0x69,0x70,0x70,0x6c,0x61,0x6e,0x65,0x73,0x20,0x26,0x20,0x31,
    0x29,0x20,0x3d,0x3d,0x20,0x31,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x63,0x20,0x2b,0x3d,0x20,0x6d,0x69,0x6e,0x28,0x30,
    0x2e,0x30,0x2c,0x20,0x63,0x6c,0x69,0x70,0x76,0x65,0x72,0x74,0x65,0x78,0x30,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,
    0x28,0x5f,0x31,0x34,0x2e,0x63,0x6c,0x69,0x70,0x70,0x6c,0x61,0x6e,0x65,0x73,0x20,
    0x26,0x20,0x32,0x29,0x20,0x3d,0x3d,0x20,0x32,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x63,0x20,0x2b,0x3d,0x20,0x6d,0x69,
    0x6e,0x28,0x30,0x2e,0x30,0x2c,0x20,0x63,0x6c,0x69,0x70,0x76,0x65,0x72,0x74,0x65,
    0x78,0x31,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x69,
    0x66,0x20,0x28,0x28,0x5f,0x31,0x34,0x2e,0x63,0x6c,0x69,0x70,0x70,0x6c,0x61,0x6e,
    0x65,0x73,0x20,0x26,0x20,0x34,0x29,0x20,0x3d,0x3d,0x20,0x34,0x29,0x0a,0x20,0x20,
    0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x63,0x20,0x2b,0x3d,
    0x20,0x6d,0x69,0x6e,0x28,0x30,0x2e,0x30,0x2c,0x20,0x63,0x6c,0x69,0x70,0x76,0x65,
    0x72,0x74,0x65,0x78,0x32,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,
    0x20,0x20,0x69,0x66,0x20,0x28,0x28,0x5f,0x31,0x34,0x2e,0x63,0x6c,0x69,0x70,0x70,
    0x6c,0x61,0x6e,0x65,0x73,0x20,0x26,0x20,0x38,0x29,0x20,0x3d,0x3d,0x20,0x38,0x29,
    0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x63,
    0x20,0x2b,0x3d,0x20,0x6d,0x69,0x6e,0x28,0x30,0x2e,0x30,0x2c,0x20,0x63,0x6c,0x69,
    0x70,0x76,0x65,0x72,0x74,0x65,0x78,0x33,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,
    0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x28,0x5f,0x31,0x34,0x2e,0x63,0x6c,
    0x69,0x70,0x70,0x6c,0x61,0x6e,0x65,0x73,0x20,0x26,0x20,0x31,0x36,0x29,0x20,0x3d,
    0x3d,0x20,0x31,0x36,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x63,0x20,0x2b,0x3d,0x20,0x6d,0x69,0x6e,0x28,0x30,0x2e,0x30,
    0x2c,0x20,0x63,0x6c,0x69,0x70,0x76,0x65,0x72,0x74,0x65,0x78,0x34,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x28,0x5f,
    0x31,0x34,0x2e,0x63,0x6c,0x69,0x70,0x70,0x6c,0x61,0x6e,0x65,0x73,0x20,0x26,0x20,
    0x33,0x32,0x29,0x20,0x3d,0x3d,0x20,0x33,0x32,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x63,0x20,0x2b,0x3d,0x20,0x6d,0x69,
    0x6e,0x28,0x30,0x2e,0x30,0x2c,0x20,0x63,0x6c,0x69,0x70,0x76,0x65,0x72,0x74,0x65,
    0x78,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x69,
    0x66,0x20,0x28,0x63,0x20,0x3c,0x20,0x30,0x2e,0x30,0x29,0x0a,0x20,0x20,0x20,0x20,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x64,0x69,0x73,0x63,0x61,0x72,
    0x64,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,
    0x28,0x28,0x5f,0x31,0x34,0x2e,0x66,0x6c,0x61,0x67,0x73,0x20,0x26,0x20,0x32,0x29,
    0x20,0x3d,0x3d,0x20,0x32,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,
    0x3d,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x2e,0x77,0x20,0x2a,0x3d,
    0x20,0x6d,0x69,0x6e,0x28,0x31,0x2e,0x30,0x20,0x2d,0x20,0x73,0x6d,0x6f,0x6f,0x74,
    0x68,0x73,0x74,0x65,0x70,0x28,0x31,0x2e,0x30,0x20,0x2d,0x20,0x28,0x33,0x2e,0x30,
    0x20,0x2f,0x20,0x75,0x76,0x2e,0x7a,0x29,0x2c,0x20,0x31,0x2e,0x30,0x2c,0x20,0x61,
    0x62,0x73,0x28,0x75,0x76,0x2e,0x78,0x20,0x2f,0x20,0x75,0x76,0x2e,0x7a,0x29,0x29,
    0x2c,0x20,0x31,0x2e,0x30,0x20,0x2d,0x20,0x73,0x6d,0x6f,0x6f,0x74,0x68,0x73,0x74,
    0x65,0x70,0x28,0x31,0x2e,0x30,0x20,0x2d,0x20,0x28,0x33,0x2e,0x30,0x20,0x2f,0x20,
    0x75,0x76,0x2e,0x77,0x29,0x2c,0x20,0x31,0x2e,0x30,0x2c,0x20,0x61,0x62,0x73,0x28,
    0x75,0x76,0x2e,0x79,0x20,0x2f,0x20,0x75,0x76,0x2e,0x77,0x29,0x29,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,
    0x31,0x37,0x36,0x20,0x3d,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x74,0x65,
    0x78,0x30,0x5f,0x73,0x6d,0x70,0x30,0x2c,0x20,0x75,0x76,0x2e,0x78,0x79,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x62,0x6f,0x6f,0x6c,0x20,0x5f,0x31,0x38,0x30,0x20,0x3d,
    0x20,0x5f,0x31,0x34,0x2e,0x61,0x6c,0x70,0x68,0x61,0x5f,0x74,0x65,0x73,0x74,0x20,
    0x21,0x3d,0x20,0x30,0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x62,0x6f,0x6f,0x6c,
    0x20,0x5f,0x31,0x38,0x38,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,
    0x31,0x38,0x30,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x5f,0x31,0x38,0x38,0x20,0x3d,0x20,0x5f,0x31,0x37,0x36,0x2e,0x77,
    0x20,0x3c,0x20,0x5f,0x31,0x34,0x2e,0x61,0x6c,0x70,0x68,0x61,0x5f,0x74,0x65,0x73,
    0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,
    0x65,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x5f,0x31,0x38,0x38,0x20,0x3d,0x20,0x5f,0x31,0x38,0x30,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x31,0x38,0x38,0x29,
    0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x64,
    0x69,0x73,0x63,0x61,0x72,0x64,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,
    0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x66,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,
    0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x66,0x6f,0x67,0x66,0x20,0x3d,0x20,0x30,0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x69,0x66,0x20,0x28,0x5f,0x31,0x34,0x2e,0x66,0x6f,0x67,0x5f,0x6d,0x6f,0x64,
    0x65,0x20,0x21,0x3d,0x20,0x30,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x32,0x30,0x36,
    0x20,0x3d,0x20,0x6c,0x65,0x6e,0x67,0x74,0x68,0x28,0x76,0x70,0x6f,0x73,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x31,0x34,
    0x2e,0x66,0x6f,0x67,0x5f,0x6d,0x6f,0x64,0x65,0x20,0x3d,0x3d,0x20,0x31,0x29,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6f,0x67,0x66,0x20,0x3d,0x20,0x63,0x6c,0x61,
    0x6d,0x70,0x28,0x73,0x6d,0x6f,0x6f,0x74,0x68,0x73,0x74,0x65,0x70,0x28,0x5f,0x31,
    0x34,0x2e,0x66,0x6f,0x67,0x5f,0x73,0x74,0x61,0x72,0x74,0x2c,0x20,0x5f,0x31,0x34,
    0x2e,0x66,0x6f,0x67,0x5f,0x65,0x6e,0x64,0x2c,0x20,0x5f,0x32,0x30,0x36,0x29,0x2c,
    0x20,0x30,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x65,0x6c,
    0x73,0x65,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6f,0x67,0x66,0x20,0x3d,0x20,
    0x31,0x2e,0x30,0x20,0x2d,0x20,0x63,0x6c,0x61,0x6d,0x70,0x28,0x65,0x78,0x70,0x32,
    0x28,0x28,0x28,0x28,0x28,0x2d,0x5f,0x31,0x34,0x2e,0x66,0x6f,0x67,0x5f,0x64,0x65,
    0x6e,0x73,0x69,0x74,0x79,0x29,0x20,0x2a,0x20,0x5f,0x31,0x34,0x2e,0x66,0x6f,0x67,
    0x5f,0x64,0x65,0x6e,0x73,0x69,0x74,0x79,0x29,0x20,0x2a,0x20,0x5f,0x32,0x30,0x36,
    0x29,0x20,0x2a,0x20,0x5f,0x32,0x30,0x36,0x29,0x20,0x2a,0x20,0x31,0x2e,0x34,0x34,
    0x32,0x36,0x39,0x35,0x30,0x32,0x31,0x36,0x32,0x39,0x33,0x33,0x33,0x34,0x39,0x36,
    0x30,0x39,0x33,0x37,0x35,0x29,0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,
    0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x28,0x5f,0x31,0x34,0x2e,
    0x66,0x6c,0x61,0x67,0x73,0x20,0x26,0x20,0x31,0x29,0x20,0x3d,0x3d,0x20,0x31,0x29,
    0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,
    0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x28,0x66,0x63,0x6f,0x6c,0x6f,0x72,0x20,
    0x2a,0x20,0x5f,0x31,0x37,0x36,0x29,0x20,0x2a,0x20,0x74,0x65,0x78,0x74,0x75,0x72,
    0x65,0x28,0x74,0x65,0x78,0x31,0x5f,0x73,0x6d,0x70,0x31,0x2c,0x20,0x75,0x76,0x2e,
    0x7a,0x77,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,
    0x28,0x66,0x6f,0x67,0x66,0x20,0x3e,0x20,0x30,0x2e,0x30,0x29,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x66,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x6d,0x69,0x78,0x28,
    0x66,0x63,0x6f,0x6c,0x6f,0x72,0x2c,0x20,0x5f,0x31,0x34,0x2e,0x66,0x6f,0x67,0x5f,
    0x63,0x6f,0x6c,0x6f,0x72,0x2c,0x20,0x76,0x65,0x63,0x34,0x28,0x66,0x6f,0x67,0x66,
    0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,
    0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,
    0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x63,0x6f,0x6c,0x6f,
    0x72,0x20,0x2a,0x3d,0x20,0x5f,0x31,0x37,0x36,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x66,0x6f,0x67,0x66,0x20,0x3e,0x20,0x30,0x2e,
    0x30,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x32,
    0x37,0x36,0x20,0x3d,0x20,0x66,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x32,
    0x38,0x31,0x20,0x3d,0x20,0x6d,0x69,0x78,0x28,0x5f,0x32,0x37,0x36,0x2c,0x20,0x5f,
    0x31,0x34,0x2e,0x66,0x6f,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x2c,0x20,0x76,0x65,
    0x63,0x34,0x28,0x66,0x6f,0x67,0x66,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x33,0x30,0x35,
    0x20,0x3d,0x20,0x5f,0x32,0x37,0x36,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x5f,0x33,0x30,0x35,0x2e,0x78,0x20,0x3d,0x20,0x5f,0x32,
    0x38,0x31,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x5f,0x33,0x30,0x35,0x2e,0x79,0x20,0x3d,0x20,0x5f,0x32,0x38,0x31,0x2e,
    0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,
    0x33,0x30,0x35,0x2e,0x7a,0x20,0x3d,0x20,0x5f,0x32,0x38,0x31,0x2e,0x7a,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x63,0x6f,0x6c,
    0x6f,0x72,0x20,0x3d,0x20,0x5f,0x33,0x30,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x66,0x63,0x6f,0x6c,
    0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,0x5f,0x6e,0x6f,0x72,
    0x6d,0x61,0x6c,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x28,0x76,0x65,0x79,0x65,
    0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x2e,0x78,0x79,0x7a,0x20,0x2a,0x20,0x30,0x2e,
    0x35,0x29,0x20,0x2b,0x20,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x35,0x29,0x2c,0x20,
    0x31,0x2e,0x30,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 300 es

    uniform vec4 vs_params[18];
    layout(location = 0) in vec4 position;
    layout(location = 4) in float psize;
    out vec4 uv;
    layout(location = 2) in vec4 texcoords;
    out vec4 color;
    layout(location = 3) in vec4 color0;
    out float clipvertex0;
    out float clipvertex1;
    out float clipvertex2;
    out float clipvertex3;
    out float clipvertex4;
    out float clipvertex5;
    out vec3 vpos;
    out vec3 vnormal;
    layout(location = 1) in vec4 normal;
    out vec4 veye_normal;

    void main()
    {
        vec4 _22 = mat4(vs_params[8], vs_params[9], vs_params[10], vs_params[11]) * position;
        gl_Position = mat4(vs_params[0], vs_params[1], vs_params[2], vs_params[3]) * position;
        gl_PointSize = psize;
        uv = texcoords;
        color = color0;
        clipvertex0 = dot(_22, vs_params[12]);
        clipvertex1 = dot(_22, vs_params[13]);
        clipvertex2 = dot(_22, vs_params[14]);
        clipvertex3 = dot(_22, vs_params[15]);
        clipvertex4 = dot(_22, vs_params[16]);
        clipvertex5 = dot(_22, vs_params[17]);
        vpos = _22.xyz;
        vnormal = normalize(normal.xyz);
        veye_normal = mat4(vs_params[4], vs_params[5], vs_params[6], vs_params[7]) * vec4(vnormal, 1.0);
    }

*/
static const uint8_t vs_source_glsl300es[1139] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x30,0x30,0x20,0x65,0x73,0x0a,
    0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x76,0x73,
    0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x38,0x5d,0x3b,0x0a,0x6c,0x61,0x79,
    0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,
    0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x34,0x20,0x70,0x6f,0x73,0x69,0x74,0x69,
    0x6f,0x6e,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,
    0x69,0x6f,0x6e,0x20,0x3d,0x20,0x34,0x29,0x20,0x69,0x6e,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x70,0x73,0x69,0x7a,0x65,0x3b,0x0a,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,
    0x34,0x20,0x75,0x76,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,
    0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x32,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,
    0x63,0x34,0x20,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x73,0x3b,0x0a,0x6f,0x75,
    0x74,0x20,0x76,0x65,0x63,0x34,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x6c,0x61,
    0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,
    0x33,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x34,0x20,0x63,0x6f,0x6c,0x6f,0x72,
    0x30,0x3b,0x0a,0x6f,0x75,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x63,0x6c,0x69,
    0x70,0x76,0x65,0x72,0x74,0x65,0x78,0x30,0x3b,0x0a,0x6f,0x75,0x74,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x20,0x63,0x6c,0x69,0x70,0x76,0x65,0x72,0x74,0x65,0x78,0x31,0x3b,
    0x0a,0x6f,0x75,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x63,0x6c,0x69,0x70,0x76,
    0x65,0x72,0x74,0x65,0x78,0x32,0x3b,0x0a,0x6f,0x75,0x74,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x63,0x6c,0x69,0x70,0x76,0x65,0x72,0x74,0x65,0x78,0x33,0x3b,0x0a,0x6f,
    0x75,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x63,0x6c,0x69,0x70,0x76,0x65,0x72,
    0x74,0x65,0x78,0x34,0x3b,0x0a,0x6f,0x75,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,
    0x63,0x6c,0x69,0x70,0x76,0x65,0x72,0x74,0x65,0x78,0x35,0x3b,0x0a,0x6f,0x75,0x74,
    0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x70,0x6f,0x73,0x3b,0x0a,0x6f,0x75,0x74,0x20,
    0x76,0x65,0x63,0x33,0x20,0x76,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x6c,0x61,
    0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,
    0x31,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x34,0x20,0x6e,0x6f,0x72,0x6d,0x61,
    0x6c,0x3b,0x0a,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x34,0x20,0x76,0x65,0x79,0x65,
    0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,
    0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,
    0x20,0x5f,0x32,0x32,0x20,0x3d,0x20,0x6d,0x61,0x74,0x34,0x28,0x76,0x73,0x5f,0x70,
    0x61,0x72,0x61,0x6d,0x73,0x5b,0x38,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,
    0x61,0x6d,0x73,0x5b,0x39,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x5b,0x31,0x30,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,
    0x5b,0x31,0x31,0x5d,0x29,0x20,0x2a,0x20,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,
    0x6e,0x20,0x3d,0x20,0x6d,0x61,0x74,0x34,0x28,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,
    0x6d,0x73,0x5b,0x30,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,
    0x5b,0x31,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x32,
    0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x33,0x5d,0x29,
    0x20,0x2a,0x20,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x67,0x6c,0x5f,0x50,0x6f,0x69,0x6e,0x74,0x53,0x69,0x7a,0x65,0x20,0x3d,0x20,
    0x70,0x73,0x69,0x7a,0x65,0x3b,0x0a,0x20,0x20,0x20,0x20,0x75,0x76,0x20,0x3d,0x20,
    0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x73,0x3b,0x0a,0x20,0x20,0x20,0x20,0x63,
    0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x30,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x63,0x6c,0x69,0x70,0x76,0x65,0x72,0x74,0x65,0x78,0x30,0x20,0x3d,
    0x20,0x64,0x6f,0x74,0x28,0x5f,0x32,0x32,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,
    0x61,0x6d,0x73,0x5b,0x31,0x32,0x5d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x63,0x6c,
    0x69,0x70,0x76,0x65,0x72,0x74,0x65,0x78,0x31,0x20,0x3d,0x20,0x64,0x6f,0x74,0x28,
    0x5f,0x32,0x32,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,
    0x33,0x5d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x63,0x6c,0x69,0x70,0x76,0x65,0x72,
    0x74,0x65,0x78,0x32,0x20,0x3d,0x20,0x64,0x6f,0x74,0x28,0x5f,0x32,0x32,0x2c,0x20,
    0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x34,0x5d,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x63,0x6c,0x69,0x70,0x76,0x65,0x72,0x74,0x65,0x78,0x33,0x20,
    0x3d,0x20,0x64,0x6f,0x74,0x28,0x5f,0x32,0x32,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x73,0x5b,0x31,0x35,0x5d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x63,
    0x6c,0x69,0x70,0x76,0x65,0x72,0x74,0x65,0x78,0x34,0x20,0x3d,0x20,0x64,0x6f,0x74,
    0x28,0x5f,0x32,0x32,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,
    0x31,0x36,0x5d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x63,0x6c,0x69,0x70,0x76,0x65,
    0x72,0x74,0x65,0x78,0x35,0x20,0x3d,0x20,0x64,0x6f,0x74,0x28,0x5f,0x32,0x32,0x2c,
    0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x37,0x5d,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x76,0x70,0x6f,0x73,0x20,0x3d,0x20,0x5f,0x32,0x32,0x2e,
    0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x6e,0x6f,0x72,0x6d,0x61,0x6c,
    0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x6e,0x6f,0x72,
    0x6d,0x61,0x6c,0x2e,0x78,0x79,0x7a,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,
    0x79,0x65,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3d,0x20,0x6d,0x61,0x74,0x34,
    0x28,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x34,0x5d,0x2c,0x20,0x76,
    0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x35,0x5d,0x2c,0x20,0x76,0x73,0x5f,
    0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x36,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x73,0x5b,0x37,0x5d,0x29,0x20,0x2a,0x20,0x76,0x65,0x63,0x34,0x28,
    0x76,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x7d,
    0x0a,0x0a,0x00,
};
/*
    #version 300 es
    precision mediump float;
    precision highp int;

    struct state
    {
        int flags;
        highp float alpha_test;
        int clipplanes;
        int fog_mode;
        highp vec4 fog_color;
        highp float fog_density;
        highp float fog_start;
        highp float fog_end;
        highp float fog_scale;
    };

    uniform state _14;

    uniform highp sampler2D tex0_smp0;
    uniform highp sampler2D tex1_smp1;

    in highp float clipvertex0;
    in highp float clipvertex1;
    in highp float clipvertex2;
    in highp float clipvertex3;
    in highp float clipvertex4;
    in highp float clipvertex5;
    in highp vec4 uv;
    layout(location = 0) out highp vec4 frag_color;
    in highp vec4 color;
    in highp vec3 vpos;
    layout(location = 1) out highp vec4 frag_normal;
    in highp vec4 veye_normal;
    in highp vec3 vnormal;

    void main()
    {
        highp float c = 0.0;
        if ((_14.clipplanes & 1) == 1)
        {
            c += min(0.0, clipvertex0);
        }
        if ((_14.clipplanes & 2) == 2)
        {
            c += min(0.0, clipvertex1);
        }
        if ((_14.clipplanes & 4) == 4)
        {
            c += min(0.0, clipvertex2);
        }
        if ((_14.clipplanes & 8) == 8)
        {
            c += min(0.0, clipvertex3);
        }
        if ((_14.clipplanes & 16) == 16)
        {
            c += min(0.0, clipvertex4);
        }
        if ((_14.clipplanes & 32) == 32)
        {
            c += min(0.0, clipvertex5);
        }
        if (c < 0.0)
        {
            discard;
        }
        if ((_14.flags & 2) == 2)
        {
            frag_color = color;
            frag_color.w *= min(1.0 - smoothstep(1.0 - (3.0 / uv.z), 1.0, abs(uv.x / uv.z)), 1.0 - smoothstep(1.0 - (3.0 / uv.w), 1.0, abs(uv.y / uv.w)));
            return;
        }
        highp vec4 _176 = texture(tex0_smp0, uv.xy);
        bool _180 = _14.alpha_test != 0.0;
        bool _188;
        if (_180)
        {
            _188 = _176.w < _14.alpha_test;
        }
        else
        {
            _188 = _180;
        }
        if (_188)
        {
            discard;
        }
        highp vec4 fcolor = color;
        highp float fogf = 0.0;
        if (_14.fog_mode != 0)
        {
            highp float _206 = length(vpos);
            if (_14.fog_mode == 1)
            {
                fogf = clamp(smoothstep(_14.fog_start, _14.fog_end, _206), 0.0, 1.0);
            }
            else
            {
                fogf = 1.0 - clamp(exp2(((((-_14.fog_density) * _14.fog_density) * _206) * _206) * 1.44269502162933349609375), 0.0, 1.0);
            }
        }
        if ((_14.flags & 1) == 1)
        {
            fcolor = (fcolor * _176) * texture(tex1_smp1, uv.zw);
            if (fogf > 0.0)
            {
                fcolor = mix(fcolor, _14.fog_color, vec4(fogf));
            }
        }
        else
        {
            fcolor *= _176;
            if (fogf > 0.0)
            {
                highp vec4 _276 = fcolor;
                highp vec4 _281 = mix(_276, _14.fog_color, vec4(fogf));
                highp vec4 _305 = _276;
                _305.x = _281.x;
                _305.y = _281.y;
                _305.z = _281.z;
                fcolor = _305;
            }
        }
        frag_color = fcolor;
        frag_normal = vec4((veye_normal.xyz * 0.5) + vec3(0.5), 1.0);
    }

*/
static const uint8_t fs_source_glsl300es[2929] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x30,0x30,0x20,0x65,0x73,0x0a,
    0x70,0x72,0x65,0x63,0x69,0x73,0x69,0x6f,0x6e,0x20,0x6d,0x65,0x64,0x69,0x75,0x6d,
    0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x3b,0x0a,0x70,0x72,0x65,0x63,0x69,0x73,0x69,
    0x6f,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x69,0x6e,0x74,0x3b,0x0a,0x0a,0x73,
    0x74,0x72,0x75,0x63,0x74,0x20,0x73,0x74,0x61,0x74,0x65,0x0a,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x69,0x6e,0x74,0x20,0x66,0x6c,0x61,0x67,0x73,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x61,0x6c,0x70,
    0x68,0x61,0x5f,0x74,0x65,0x73,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,
    0x20,0x63,0x6c,0x69,0x70,0x70,0x6c,0x61,0x6e,0x65,0x73,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x69,0x6e,0x74,0x20,0x66,0x6f,0x67,0x5f,0x6d,0x6f,0x64,0x65,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x66,0x6f,
    0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,
    0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x66,0x6f,0x67,0x5f,0x64,0x65,0x6e,
    0x73,0x69,0x74,0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x66,0x6f,0x67,0x5f,0x73,0x74,0x61,0x72,0x74,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x66,0x6f,0x67,0x5f,0x65,0x6e,0x64,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,
    0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x66,0x6f,0x67,0x5f,0x73,0x63,
    0x61,0x6c,0x65,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,
    0x20,0x73,0x74,0x61,0x74,0x65,0x20,0x5f,0x31,0x34,0x3b,0x0a,0x0a,0x75,0x6e,0x69,
    0x66,0x6f,0x72,0x6d,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x73,0x61,0x6d,0x70,0x6c,
    0x65,0x72,0x32,0x44,0x20,0x74,0x65,0x78,0x30,0x5f,0x73,0x6d,0x70,0x30,0x3b,0x0a,
    0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x73,0x61,
    0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,0x20,0x74,0x65,0x78,0x31,0x5f,0x73,0x6d,0x70,
    0x31,0x3b,0x0a,0x0a,0x69,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x63,0x6c,0x69,0x70,0x76,0x65,0x72,0x74,0x65,0x78,0x30,0x3b,0x0a,
    0x69,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x63,
    0x6c,0x69,0x70,0x76,0x65,0x72,0x74,0x65,0x78,0x31,0x3b,0x0a,0x69,0x6e,0x20,0x68,
    0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x63,0x6c,0x69,0x70,0x76,
    0x65,0x72,0x74,0x65,0x78,0x32,0x3b,0x0a,0x69,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x63,0x6c,0x69,0x70,0x76,0x65,0x72,0x74,0x65,
    0x78,0x33,0x3b,0x0a,0x69,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x63,0x6c,0x69,0x70,0x76,0x65,0x72,0x74,0x65,0x78,0x34,0x3b,0x0a,
    0x69,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x63,
    0x6c,0x69,0x70,0x76,0x65,0x72,0x74,0x65,0x78,0x35,0x3b,0x0a,0x69,0x6e,0x20,0x68,
    0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x75,0x76,0x3b,0x0a,0x6c,0x61,
    0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,
    0x30,0x29,0x20,0x6f,0x75,0x74,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,
    0x34,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x69,0x6e,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x63,0x6f,0x6c,0x6f,
    0x72,0x3b,0x0a,0x69,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,
    0x20,0x76,0x70,0x6f,0x73,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,
    0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x31,0x29,0x20,0x6f,0x75,0x74,0x20,
    0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x66,0x72,0x61,0x67,0x5f,
    0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x69,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,
    0x20,0x76,0x65,0x63,0x34,0x20,0x76,0x65,0x79,0x65,0x5f,0x6e,0x6f,0x72,0x6d,0x61,
    0x6c,0x3b,0x0a,0x69,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,
    0x20,0x76,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,
    0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,
    0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x63,0x20,0x3d,0x20,0x30,0x2e,0x30,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x28,0x5f,0x31,0x34,0x2e,0x63,
    0x6c,0x69,0x70,0x70,0x6c,0x61,0x6e,0x65,0x73,0x20,0x26,0x20,0x31,0x29,0x20,0x3d,
    0x3d,0x20,0x31,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x63,0x20,0x2b,0x3d,0x20,0x6d,0x69,0x6e,0x28,0x30,0x2e,0x30,0x2c,
    0x20,0x63,0x6c,0x69,0x70,0x76,0x65,0x72,0x74,0x65,0x78,0x30,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x28,0x5f,0x31,
    0x34,0x2e,0x63,0x6c,0x69,0x70,0x70,0x6c,0x61,0x6e,0x65,0x73,0x20,0x26,0x20,0x32,
    0x29,0x20,0x3d,0x3d,0x20,0x32,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x63,0x20,0x2b,0x3d,0x20,0x6d,0x69,0x6e,0x28,0x30,
    0x2e,0x30,0x2c,0x20,0x63,0x6c,0x69,0x70,0x76,0x65,0x72,0x74,0x65,0x78,0x31,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,
    0x28,0x5f,0x31,0x34,0x2e,0x63,0x6c,0x69,0x70,0x70,0x6c,0x61,0x6e,0x65,0x73,0x20,
    0x26,0x20,0x34,0x29,0x20,0x3d,0x3d,0x20,0x34,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x63,0x20,0x2b,0x3d,0x20,0x6d,0x69,
    0x6e,0x28,0x30,0x2e,0x30,0x2c,0x20,0x63,0x6c,0x69,0x70,0x76,0x65,0x72,0x74,0x65,
    0x78,0x32,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x69,
    0x66,0x20,0x28,0x28,0x5f,0x31,0x34,0x2e,0x63,0x6c,0x69,0x70,0x70,0x6c,0x61,0x6e,
    0x65,0x73,0x20,0x26,0x20,0x38,0x29,0x20,0x3d,0x3d,0x20,0x38,0x29,0x0a,0x20,0x20,
    0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x63,0x20,0x2b,0x3d,
    0x20,0x6d,0x69,0x6e,0x28,0x30,0x2e,0x30,0x2c,0x20,0x63,0x6c,0x69,0x70,0x76,0x65,
    0x72,0x74,0x65,0x78,0x33,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,
    0x20,0x20,0x69,0x66,0x20,0x28,0x28,0x5f,0x31,0x34,0x2e,0x63,0x6c,0x69,0x70,0x70,
    0x6c,0x61,0x6e,0x65,0x73,0x20,0x26,0x20,0x31,0x36,0x29,0x20,0x3d,0x3d,0x20,0x31,
    0x36,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x63,0x20,0x2b,0x3d,0x20,0x6d,0x69,0x6e,0x28,0x30,0x2e,0x30,0x2c,0x20,0x63,
    0x6c,0x69,0x70,0x76,0x65,0x72,0x74,0x65,0x78,0x34,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x28,0x5f,0x31,0x34,0x2e,
    0x63,0x6c,0x69,0x70,0x70,0x6c,0x61,0x6e,0x65,0x73,0x20,0x26,0x20,0x33,0x32,0x29,
    0x20,0x3d,0x3d,0x20,0x33,0x32,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x63,0x20,0x2b,0x3d,0x20,0x6d,0x69,0x6e,0x28,0x30,
    0x2e,0x30,0x2c,0x20,0x63,0x6c,0x69,0x70,0x76,0x65,0x72,0x74,0x65,0x78,0x35,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,
    0x63,0x20,0x3c,0x20,0x30,0x2e,0x30,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x64,0x69,0x73,0x63,0x61,0x72,0x64,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x28,0x5f,
    0x31,0x34,0x2e,0x66,0x6c,0x61,0x67,0x73,0x20,0x26,0x20,0x32,0x29,0x20,0x3d,0x3d,
    0x20,0x32,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x63,
    0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x72,
    0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x2e,0x77,0x20,0x2a,0x3d,0x20,0x6d,0x69,
    0x6e,0x28,0x31,0x2e,0x30,0x20,0x2d,0x20,0x73,0x6d,0x6f,0x6f,0x74,0x68,0x73,0x74,
    0x65,0x70,0x28,0x31,0x2e,0x30,0x20,0x2d,0x20,0x28,0x33,0x2e,0x30,0x20,0x2f,0x20,
    0x75,0x76,0x2e,0x7a,0x29,0x2c,0x20,0x31,0x2e,0x30,0x2c,0x20,0x61,0x62,0x73,0x28,
    0x75,0x76,0x2e,0x78,0x20,0x2f,0x20,0x75,0x76,0x2e,0x7a,0x29,0x29,0x2c,0x20,0x31,
    0x2e,0x30,0x20,0x2d,0x20,0x73,0x6d,0x6f,0x6f,0x74,0x68,0x73,0x74,0x65,0x70,0x28,
    0x31,0x2e,0x30,0x20,0x2d,0x20,0x28,0x33,0x2e,0x30,0x20,0x2f,0x20,0x75,0x76,0x2e,
    0x77,0x29,0x2c,0x20,0x31,0x2e,0x30,0x2c,0x20,0x61,0x62,0x73,0x28,0x75,0x76,0x2e,
    0x79,0x20,0x2f,0x20,0x75,0x76,0x2e,0x77,0x29,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,
    0x34,0x20,0x5f,0x31,0x37,0x36,0x20,0x3d,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,
    0x28,0x74,0x65,0x78,0x30,0x5f,0x73,0x6d,0x70,0x30,0x2c,0x20,0x75,0x76,0x2e,0x78,
    0x79,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x62,0x6f,0x6f,0x6c,0x20,0x5f,0x31,0x38,
    0x30,0x20,0x3d,0x20,0x5f,0x31,0x34,0x2e,0x61,0x6c,0x70,0x68,0x61,0x5f,0x74,0x65,
    0x73,0x74,0x20,0x21,0x3d,0x20,0x30,0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x62,
    0x6f,0x6f,0x6c,0x20,0x5f,0x31,0x38,0x38,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,
    0x20,0x28,0x5f,0x31,0x38,0x30,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x31,0x38,0x38,0x20,0x3d,0x20,0x5f,0x31,0x37,
    0x36,0x2e,0x77,0x20,0x3c,0x20,0x5f,0x31,0x34,0x2e,0x61,0x6c,0x70,0x68,0x61,0x5f,
    0x74,0x65,0x73,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,
    0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x5f,0x31,0x38,0x38,0x20,0x3d,0x20,0x5f,0x31,0x38,0x30,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x31,
    0x38,0x38,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x64,0x69,0x73,0x63,0x61,0x72,0x64,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,
    0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,
    0x66,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,
    0x66,0x6f,0x67,0x66,0x20,0x3d,0x20,0x30,0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x69,0x66,0x20,0x28,0x5f,0x31,0x34,0x2e,0x66,0x6f,0x67,0x5f,0x6d,0x6f,0x64,0x65,
    0x20,0x21,0x3d,0x20,0x30,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x5f,0x32,0x30,0x36,0x20,0x3d,0x20,0x6c,0x65,0x6e,0x67,0x74,0x68,0x28,0x76,
    0x70,0x6f,0x73,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,
    0x20,0x28,0x5f,0x31,0x34,0x2e,0x66,0x6f,0x67,0x5f,0x6d,0x6f,0x64,0x65,0x20,0x3d,
    0x3d,0x20,0x31,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6f,0x67,0x66,0x20,
    0x3d,0x20,0x63,0x6c,0x61,0x6d,0x70,0x28,0x73,0x6d,0x6f,0x6f,0x74,0x68,0x73,0x74,
    0x65,0x70,0x28,0x5f,0x31,0x34,0x2e,0x66,0x6f,0x67,0x5f,0x73,0x74,0x61,0x72,0x74,
    0x2c,0x20,0x5f,0x31,0x34,0x2e,0x66,0x6f,0x67,0x5f,0x65,0x6e,0x64,0x2c,0x20,0x5f,
    0x32,0x30,0x36,0x29,0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6f,
    0x67,0x66,0x20,0x3d,0x20,0x31,0x2e,0x30,0x20,0x2d,0x20,0x63,0x6c,0x61,0x6d,0x70,
    0x28,0x65,0x78,0x70,0x32,0x28,0x28,0x28,0x28,0x28,0x2d,0x5f,0x31,0x34,0x2e,0x66,
    0x6f,0x67,0x5f,0x64,0x65,0x6e,0x73,0x69,0x74,0x79,0x29,0x20,0x2a,0x20,0x5f,0x31,
    0x34,0x2e,0x66,0x6f,0x67,0x5f,0x64,0x65,0x6e,0x73,0x69,0x74,0x79,0x29,0x20,0x2a,
    0x20,0x5f,0x32,0x30,0x36,0x29,0x20,0x2a,0x20,0x5f,0x32,0x30,0x36,0x29,0x20,0x2a,
    0x20,0x31,0x2e,0x34,0x34,0x32,0x36,0x39,0x35,0x30,0x32,0x31,0x36,0x32,0x39,0x33,
    0x33,0x33,0x34,0x39,0x36,0x30,0x39,0x33,0x37,0x35,0x29,0x2c,0x20,0x30,0x2e,0x30,
    0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x7d,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,
    0x28,0x5f,0x31,0x34,0x2e,0x66,0x6c,0x61,0x67,0x73,0x20,0x26,0x20,0x31,0x29,0x20,
    0x3d,0x3d,0x20,0x31,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x66,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x28,0x66,0x63,
    0x6f,0x6c,0x6f,0x72,0x20,0x2a,0x20,0x5f,0x31,0x37,0x36,0x29,0x20,0x2a,0x20,0x74,
    0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x74,0x65,0x78,0x31,0x5f,0x73,0x6d,0x70,0x31,
    0x2c,0x20,0x75,0x76,0x2e,0x7a,0x77,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x69,0x66,0x20,0x28,0x66,0x6f,0x67,0x66,0x20,0x3e,0x20,0x30,0x2e,0x30,
    0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,
    0x20,0x6d,0x69,0x78,0x28,0x66,0x63,0x6f,0x6c,0x6f,0x72,0x2c,0x20,0x5f,0x31,0x34,
    0x2e,0x66,0x6f,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x2c,0x20,0x76,0x65,0x63,0x34,
    0x28,0x66,0x6f,0x67,0x66,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,
    0x65,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x66,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x2a,0x3d,0x20,0x5f,0x31,0x37,0x36,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x66,0x6f,0x67,0x66,
    0x20,0x3e,0x20,0x30,0x2e,0x30,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,
    0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x32,0x37,0x36,0x20,0x3d,0x20,
    0x66,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,
    0x32,0x38,0x31,0x20,0x3d,0x20,0x6d,0x69,0x78,0x28,0x5f,0x32,0x37,0x36,0x2c,0x20,
    0x5f,0x31,0x34,0x2e,0x66,0x6f,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x2c,0x20,0x76,
    0x65,0x63,0x34,0x28,0x66,0x6f,0x67,0x66,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,
    0x63,0x34,0x20,0x5f,0x33,0x30,0x35,0x20,0x3d,0x20,0x5f,0x32,0x37,0x36,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x33,0x30,0x35,
    0x2e,0x78,0x20,0x3d,0x20,0x5f,0x32,0x38,0x31,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x33,0x30,0x35,0x2e,0x79,0x20,
    0x3d,0x20,0x5f,0x32,0x38,0x31,0x2e,0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x33,0x30,0x35,0x2e,0x7a,0x20,0x3d,0x20,0x5f,
    0x32,0x38,0x31,0x2e,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x66,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x5f,0x33,0x30,0x35,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,
    0x7d,0x0a,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,
    0x20,0x3d,0x20,0x66,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x72,0x61,0x67,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3d,0x20,0x76,0x65,0x63,
    0x34,0x28,0x28,0x76,0x65,0x79,0x65,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x2e,0x78,
    0x79,0x7a,0x20,0x2a,0x20,0x30,0x2e,0x35,0x29,0x20,0x2b,0x20,0x76,0x65,0x63,0x33,
    0x28,0x30,0x2e,0x35,0x29,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,
    0x00,
};
/*
    cbuffer vs_params : register(b0)
    {
        row_major float4x4 _13_mvp : packoffset(c0);
        row_major float4x4 _13_tm : packoffset(c4);
        row_major float4x4 _13_mv : packoffset(c8);
        float4 _13_clipplane0 : packoffset(c12);
        float4 _13_clipplane1 : packoffset(c13);
        float4 _13_clipplane2 : packoffset(c14);
        float4 _13_clipplane3 : packoffset(c15);
        float4 _13_clipplane4 : packoffset(c16);
        float4 _13_clipplane5 : packoffset(c17);
    };


    static float4 gl_Position;
    static float gl_PointSize;
    static float4 position;
    static float psize;
    static float4 uv;
    static float4 texcoords;
    static float4 color;
    static float4 color0;
    static float clipvertex0;
    static float clipvertex1;
    static float clipvertex2;
    static float clipvertex3;
    static float clipvertex4;
    static float clipvertex5;
    static float3 vpos;
    static float3 vnormal;
    static float4 normal;
    static float4 veye_normal;

    struct SPIRV_Cross_Input
    {
        float4 position : TEXCOORD0;
        float4 normal : TEXCOORD1;
        float4 texcoords : TEXCOORD2;
        float4 color0 : TEXCOORD3;
        float psize : TEXCOORD4;
    };

    struct SPIRV_Cross_Output
    {
        float4 uv : TEXCOORD0;
        float4 color : TEXCOORD1;
        float3 vpos : TEXCOORD2;
        float3 vnormal : TEXCOORD3;
        float4 veye_normal : TEXCOORD4;
        float clipvertex0 : TEXCOORD5;
        float clipvertex1 : TEXCOORD6;
        float clipvertex2 : TEXCOORD7;
        float clipvertex3 : TEXCOORD8;
        float clipvertex4 : TEXCOORD9;
        float clipvertex5 : TEXCOORD10;
        float4 gl_Position : SV_Position;
    };

    void vert_main()
    {
        float4 _22 = mul(position, _13_mv);
        gl_Position = mul(position, _13_mvp);
        gl_PointSize = psize;
        uv = texcoords;
        color = color0;
        clipvertex0 = dot(_22, _13_clipplane0);
        clipvertex1 = dot(_22, _13_clipplane1);
        clipvertex2 = dot(_22, _13_clipplane2);
        clipvertex3 = dot(_22, _13_clipplane3);
        clipvertex4 = dot(_22, _13_clipplane4);
        clipvertex5 = dot(_22, _13_clipplane5);
        vpos = _22.xyz;
        vnormal = normalize(normal.xyz);
        veye_normal = mul(float4(vnormal, 1.0f), _13_tm);
        gl_Position.z = (gl_Position.z + gl_Position.w) * 0.5;
    }

    SPIRV_Cross_Output main(SPIRV_Cross_Input stage_input)
    {
        position = stage_input.position;
        psize = stage_input.psize;
        texcoords = stage_input.texcoords;
        color0 = stage_input.color0;
        normal = stage_input.normal;
        vert_main();
        SPIRV_Cross_Output stage_output;
        stage_output.gl_Position = gl_Position;
        stage_output.uv = uv;
        stage_output.color = color;
        stage_output.clipvertex0 = clipvertex0;
        stage_output.clipvertex1 = clipvertex1;
        stage_output.clipvertex2 = clipvertex2;
        stage_output.clipvertex3 = clipvertex3;
        stage_output.clipvertex4 = clipvertex4;
        stage_output.clipvertex5 = clipvertex5;
        stage_output.vpos = vpos;
        stage_output.vnormal = vnormal;
        stage_output.veye_normal = veye_normal;
        return stage_output;
    }
*/
static const uint8_t vs_bytecode_hlsl4[2272] = {
    0x44,0x58,0x42,0x43,0x9b,0x9f,0x0c,0xf3,0x14,0xce,0xfa,0x50,0x54,0xe4,0x98,0x23,
    0xcd,0xf6,0x70,0x00,0x01,0x00,0x00,0x00,0xe0,0x08,0x00,0x00,0x05,0x00,0x00,0x00,
    0x34,0x00,0x00,0x00,0x30,0x02,0x00,0x00,0xc4,0x02,0x00,0x00,0x0c,0x04,0x00,0x00,
    0x64,0x08,0x00,0x00,0x52,0x44,0x45,0x46,0xf4,0x01,0x00,0x00,0x01,0x00,0x00,0x00,
    0x48,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x1c,0x00,0x00,0x00,0x00,0x04,0xfe,0xff,
    0x10,0x81,0x00,0x00,0xcb,0x01,0x00,0x00,0x3c,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x01,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x00,0xab,0xab,0x3c,0x00,0x00,0x00,0x09,0x00,0x00,0x00,0x60,0x00,0x00,0x00,
    0x20,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x38,0x01,0x00,0x00,
    0x00,0x00,0x00,0x00,0x40,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x40,0x01,0x00,0x00,
    0x00,0x00,0x00,0x00,0x50,0x01,0x00,0x00,0x40,0x00,0x00,0x00,0x40,0x00,0x00,0x00,
    0x02,0x00,0x00,0x00,0x40,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x57,0x01,0x00,0x00,
    0x80,0x00,0x00,0x00,0x40,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x40,0x01,0x00,0x00,
    0x00,0x00,0x00,0x00,0x5e,0x01,0x00,0x00,0xc0,0x00,0x00,0x00,0x10,0x00,0x00,0x00,
    0x02,0x00,0x00,0x00,0x70,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x01,0x00,0x00,
    0xd0,0x00,0x00,0x00,0x10,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x70,0x01,0x00,0x00,
    0x00,0x00,0x00,0x00,0x8f,0x01,0x00,0x00,0xe0,0x00,0x00,0x00,0x10,0x00,0x00,0x00,
    0x02,0x00,0x00,0x00,0x70,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x9e,0x01,0x00,0x00,
    0xf0,0x00,0x00,0x00,0x10,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x70,0x01,0x00,0x00,
    0x00,0x00,0x00,0x00,0xad,0x01,0x00,0x00,0x00,0x01,0x00,0x00,0x10,0x00,0x00,0x00,
    0x02,0x00,0x00,0x00,0x70,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0xbc,0x01,0x00,0x00,
    0x10,0x01,0x00,0x00,0x10,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x70,0x01,0x00,0x00,
    0x00,0x00,0x00,0x00,0x5f,0x31,0x33,0x5f,0x6d,0x76,0x70,0x00,0x02,0x00,0x03,0x00,
    0x04,0x00,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x5f,0x31,0x33,0x5f,
    0x74,0x6d,0x00,0x5f,0x31,0x33,0x5f,0x6d,0x76,0x00,0x5f,0x31,0x33,0x5f,0x63,0x6c,
    0x69,0x70,0x70,0x6c,0x61,0x6e,0x65,0x30,0x00,0xab,0xab,0xab,0x01,0x00,0x03,0x00,
    0x01,0x00,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x5f,0x31,0x33,0x5f,
    0x63,0x6c,0x69,0x70,0x70,0x6c,0x61,0x6e,0x65,0x31,0x00,0x5f,0x31,0x33,0x5f,0x63,
    0x6c,0x69,0x70,0x70,0x6c,0x61,0x6e,0x65,0x32,0x00,0x5f,0x31,0x33,0x5f,0x63,0x6c,
    0x69,0x70,0x70,0x6c,0x61,0x6e,0x65,0x33,0x00,0x5f,0x31,0x33,0x5f,0x63,0x6c,0x69,
    0x70,0x70,0x6c,0x61,0x6e,0x65,0x34,0x00,0x5f,0x31,0x33,0x5f,0x63,0x6c,0x69,0x70,
    0x70,0x6c,0x61,0x6e,0x65,0x35,0x00,0x4d,0x69,0x63,0x72,0x6f,0x73,0x6f,0x66,0x74,
    0x20,0x28,0x52,0x29,0x20,0x48,0x4c,0x53,0x4c,0x20,0x53,0x68,0x61,0x64,0x65,0x72,
    0x20,0x43,0x6f,0x6d,0x70,0x69,0x6c,0x65,0x72,0x20,0x31,0x30,0x2e,0x31,0x00,0xab,
    0x49,0x53,0x47,0x4e,0x8c,0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x08,0x00,0x00,0x00,
    0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x0f,0x0f,0x00,0x00,0x80,0x00,0x00,0x00,0x01,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x0f,0x07,0x00,0x00,
    0x80,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,
    0x02,0x00,0x00,0x00,0x0f,0x0f,0x00,0x00,0x80,0x00,0x00,0x00,0x03,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x0f,0x0f,0x00,0x00,
    0x80,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,
    0x04,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,
    0x00,0xab,0xab,0xab,0x4f,0x53,0x47,0x4e,0x40,0x01,0x00,0x00,0x0c,0x00,0x00,0x00,
    0x08,0x00,0x00,0x00,0x28,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0f,0x00,0x00,0x00,0x28,0x01,0x00,0x00,
    0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x01,0x00,0x00,0x00,
    0x0f,0x00,0x00,0x00,0x28,0x01,0x00,0x00,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x03,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x07,0x08,0x00,0x00,0x28,0x01,0x00,0x00,
    0x05,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x02,0x00,0x00,0x00,
    0x08,0x07,0x00,0x00,0x28,0x01,0x00,0x00,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x03,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x07,0x08,0x00,0x00,0x28,0x01,0x00,0x00,
    0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x03,0x00,0x00,0x00,
    0x08,0x07,0x00,0x00,0x28,0x01,0x00,0x00,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x03,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x0f,0x00,0x00,0x00,0x28,0x01,0x00,0x00,
    0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x05,0x00,0x00,0x00,
    0x01,0x0e,0x00,0x00,0x28,0x01,0x00,0x00,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x03,0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x02,0x0d,0x00,0x00,0x28,0x01,0x00,0x00,
    0x09,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x05,0x00,0x00,0x00,
    0x04,0x0b,0x00,0x00,0x28,0x01,0x00,0x00,0x0a,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x03,0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x08,0x07,0x00,0x00,0x31,0x01,0x00,0x00,
    0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x06,0x00,0x00,0x00,
    0x0f,0x00,0x00,0x00,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x00,0x53,0x56,0x5f,
    0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x00,0xab,0xab,0xab,0x53,0x48,0x44,0x52,
    0x50,0x04,0x00,0x00,0x40,0x00,0x01,0x00,0x14,0x01,0x00,0x00,0x59,0x00,0x00,0x04,
    0x46,0x8e,0x20,0x00,0x00,0x00,0x00,0x00,0x12,0x00,0x00,0x00,0x5f,0x00,0x00,0x03,
    0xf2,0x10,0x10,0x00,0x00,0x00,0x00,0x00,0x5f,0x00,0x00,0x03,0x72,0x10,0x10,0x00,
    0x01,0x00,0x00,0x00,0x5f,0x00,0x00,0x03,0xf2,0x10,0x10,0x00,0x02,0x00,0x00,0x00,
    0x5f,0x00,0x00,0x03,0xf2,0x10,0x10,0x00,0x03,0x00,0x00,0x00,0x65,0x00,0x00,0x03,
    0xf2,0x20,0x10,0x00,0x00,0x00,0x00,0x00,0x65,0x00,0x00,0x03,0xf2,0x20,0x10,0x00,
    0x01,0x00,0x00,0x00,0x65,0x00,0x00,0x03,0x72,0x20,0x10,0x00,0x02,0x00,0x00,0x00,
    0x65,0x00,0x00,0x03,0x82,0x20,0x10,0x00,0x02,0x00,0x00,0x00,0x65,0x00,0x00,0x03,
    0x72,0x20,0x10,0x00,0x03,0x00,0x00,0x00,0x65,0x00,0x00,0x03,0x82,0x20,0x10,0x00,
    0x03,0x00,0x00,0x00,0x65,0x00,0x00,0x03,0xf2,0x20,0x10,0x00,0x04,0x00,0x00,0x00,
    0x65,0x00,0x00,0x03,0x12,0x20,0x10,0x00,0x05,0x00,0x00,0x00,0x65,0x00,0x00,0x03,
    0x22,0x20,0x10,0x00,0x05,0x00,0x00,0x00,0x65,0x00,0x00,0x03,0x42,0x20,0x10,0x00,
    0x05,0x00,0x00,0x00,0x65,0x00,0x00,0x03,0x82,0x20,0x10,0x00,0x05,0x00,0x00,0x00,
    0x67,0x00,0x00,0x04,0xf2,0x20,0x10,0x00,0x06,0x00,0x00,0x00,0x01,0x00,0x00,0x00,
    0x68,0x00,0x00,0x02,0x03,0x00,0x00,0x00,0x36,0x00,0x00,0x05,0xf2,0x20,0x10,0x00,
    0x00,0x00,0x00,0x00,0x46,0x1e,0x10,0x00,0x02,0x00,0x00,0x00,0x36,0x00,0x00,0x05,
    0xf2,0x20,0x10,0x00,0x01,0x00,0x00,0x00,0x46,0x1e,0x10,0x00,0x03,0x00,0x00,0x00,
    0x38,0x00,0x00,0x08,0xf2,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x56,0x15,0x10,0x00,
    0x00,0x00,0x00,0x00,0x46,0x8e,0x20,0x00,0x00,0x00,0x00,0x00,0x09,0x00,0x00,0x00,
    0x32,0x00,0x00,0x0a,0xf2,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x06,0x10,0x10,0x00,
    0x00,0x00,0x00,0x00,0x46,0x8e,0x20,0x00,0x00,0x00,0x00,0x00,0x08,0x00,0x00,0x00,
    0x46,0x0e,0x10,0x00,0x00,0x00,0x00,0x00,0x32,0x00,0x00,0x0a,0xf2,0x00,0x10,0x00,
    0x00,0x00,0x00,0x00,0xa6,0x1a,0x10,0x00,0x00,0x00,0x00,0x00,0x46,0x8e,0x20,0x00,
    0x00,0x00,0x00,0x00,0x0a,0x00,0x00,0x00,0x46,0x0e,0x10,0x00,0x00,0x00,0x00,0x00,
    0x32,0x00,0x00,0x0a,0xf2,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0xf6,0x1f,0x10,0x00,
    0x00,0x00,0x00,0x00,0x46,0x8e,0x20,0x00,0x00,0x00,0x00,0x00,0x0b,0x00,0x00,0x00,
    0x46,0x0e,0x10,0x00,0x00,0x00,0x00,0x00,0x11,0x00,0x00,0x08,0x82,0x20,0x10,0x00,
    0x02,0x00,0x00,0x00,0x46,0x0e,0x10,0x00,0x00,0x00,0x00,0x00,0x46,0x8e,0x20,0x00,
    0x00,0x00,0x00,0x00,0x0c,0x00,0x00,0x00,0x36,0x00,0x00,0x05,0x72,0x20,0x10,0x00,
    0x02,0x00,0x00,0x00,0x46,0x02,0x10,0x00,0x00,0x00,0x00,0x00,0x11,0x00,0x00,0x08,
    0x82,0x20,0x10,0x00,0x03,0x00,0x00,0x00,0x46,0x0e,0x10,0x00,0x00,0x00,0x00,0x00,
    0x46,0x8e,0x20,0x00,0x00,0x00,0x00,0x00,0x0d,0x00,0x00,0x00,0x10,0x00,0x00,0x07,
    0x12,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x46,0x12,0x10,0x00,0x01,0x00,0x00,0x00,
    0x46,0x12,0x10,0x00,0x01,0x00,0x00,0x00,0x44,0x00,0x00,0x05,0x12,0x00,0x10,0x00,
    0x01,0x00,0x00,0x00,0x0a,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x38,0x00,0x00,0x07,
    0x72,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x06,0x00,0x10,0x00,0x01,0x00,0x00,0x00,
    0x46,0x12,0x10,0x00,0x01,0x00,0x00,0x00,0x36,0x00,0x00,0x05,0x72,0x20,0x10,0x00,
    0x03,0x00,0x00,0x00,0x46,0x02,0x10,0x00,0x01,0x00,0x00,0x00,0x38,0x00,0x00,0x08,
    0xf2,0x00,0x10,0x00,0x02,0x00,0x00,0x00,0x56,0x05,0x10,0x00,0x01,0x00,0x00,0x00,
    0x46,0x8e,0x20,0x00,0x00,0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x32,0x00,0x00,0x0a,
    0xf2,0x00,0x10,0x00,0x02,0x00,0x00,0x00,0x06,0x00,0x10,0x00,0x01,0x00,0x00,0x00,
    0x46,0x8e,0x20,0x00,0x00,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x46,0x0e,0x10,0x00,
    0x02,0x00,0x00,0x00,0x32,0x00,0x00,0x0a,0xf2,0x00,0x10,0x00,0x01,0x00,0x00,0x00,
    0xa6,0x0a,0x10,0x00,0x01,0x00,0x00,0x00,0x46,0x8e,0x20,0x00,0x00,0x00,0x00,0x00,
    0x06,0x00,0x00,0x00,0x46,0x0e,0x10,0x00,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x08,
    0xf2,0x20,0x10,0x00,0x04,0x00,0x00,0x00,0x46,0x0e,0x10,0x00,0x01,0x00,0x00,0x00,
    0x46,0x8e,0x20,0x00,0x00,0x00,0x00,0x00,0x07,0x00,0x00,0x00,0x11,0x00,0x00,0x08,
    0x12,0x20,0x10,0x00,0x05,0x00,0x00,0x00,0x46,0x0e,0x10,0x00,0x00,0x00,0x00,0x00,
    0x46,0x8e,0x20,0x00,0x00,0x00,0x00,0x00,0x0e,0x00,0x00,0x00,0x11,0x00,0x00,0x08,
    0x22,0x20,0x10,0x00,0x05,0x00,0x00,0x00,0x46,0x0e,0x10,0x00,0x00,0x00,0x00,0x00,
    0x46,0x8e,0x20,0x00,0x00,0x00,0x00,0x00,0x0f,0x00,0x00,0x00,0x11,0x00,0x00,0x08,
    0x42,0x20,0x10,0x00,0x05,0x00,0x00,0x00,0x46,0x0e,0x10,0x00,0x00,0x00,0x00,0x00,
    0x46,0x8e,0x20,0x00,0x00,0x00,0x00,0x00,0x10,0x00,0x00,0x00,0x11,0x00,0x00,0x08,
    0x82,0x20,0x10,0x00,0x05,0x00,0x00,0x00,0x46,0x0e,0x10,0x00,0x00,0x00,0x00,0x00,
    0x46,0x8e,0x20,0x00,0x00,0x00,0x00,0x00,0x11,0x00,0x00,0x00,0x38,0x00,0x00,0x08,
    0xf2,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x56,0x15,0x10,0x00,0x00,0x00,0x00,0x00,
    0x46,0x8e,0x20,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x32,0x00,0x00,0x0a,
    0xf2,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x06,0x10,0x10,0x00,0x00,0x00,0x00,0x00,
    0x46,0x8e,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x46,0x0e,0x10,0x00,
    0x00,0x00,0x00,0x00,0x32,0x00,0x00,0x0a,0xf2,0x00,0x10,0x00,0x00,0x00,0x00,0x00,
    0xa6,0x1a,0x10,0x00,0x00,0x00,0x00,0x00,0x46,0x8e,0x20,0x00,0x00,0x00,0x00,0x00,
    0x02,0x00,0x00,0x00,0x46,0x0e,0x10,0x00,0x00,0x00,0x00,0x00,0x32,0x00,0x00,0x0a,
    0xf2,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0xf6,0x1f,0x10,0x00,0x00,0x00,0x00,0x00,
    0x46,0x8e,0x20,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x46,0x0e,0x10,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0x42,0x00,0x10,0x00,0x00,0x00,0x00,0x00,
    0x3a,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x2a,0x00,0x10,0x00,0x00,0x00,0x00,0x00,
    0x36,0x00,0x00,0x05,0xb2,0x20,0x10,0x00,0x06,0x00,0x00,0x00,0x46,0x0c,0x10,0x00,
    0x00,0x00,0x00,0x00,0x38,0x00,0x00,0x07,0x42,0x20,0x10,0x00,0x06,0x00,0x00,0x00,
    0x2a,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x01,0x40,0x00,0x00,0x00,0x00,0x00,0x3f,
    0x3e,0x00,0x00,0x01,0x53,0x54,0x41,0x54,0x74,0x00,0x00,0x00,0x1d,0x00,0x00,0x00,
    0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10,0x00,0x00,0x00,0x17,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,

};
/*
    cbuffer state : register(b0)
    {
        int _14_flags : packoffset(c0);
        float _14_alpha_test : packoffset(c0.y);
        int _14_clipplanes : packoffset(c0.z);
        int _14_fog_mode : packoffset(c0.w);
        float4 _14_fog_color : packoffset(c1);
        float _14_fog_density : packoffset(c2);
        float _14_fog_start : packoffset(c2.y);
        float _14_fog_end : packoffset(c2.z);
        float _14_fog_scale : packoffset(c2.w);
    };

    Texture2D<float4> tex0 : register(t0);
    SamplerState smp0 : register(s0);
    Texture2D<float4> tex1 : register(t1);
    SamplerState smp1 : register(s1);

    static float clipvertex0;
    static float clipvertex1;
    static float clipvertex2;
    static float clipvertex3;
    static float clipvertex4;
    static float clipvertex5;
    static float4 uv;
    static float4 frag_color;
    static float4 color;
    static float3 vpos;
    static float4 frag_normal;
    static float4 veye_normal;
    static float3 vnormal;

    struct SPIRV_Cross_Input
    {
        float4 uv : TEXCOORD0;
        float4 color : TEXCOORD1;
        float3 vpos : TEXCOORD2;
        float3 vnormal : TEXCOORD3;
        float4 veye_normal : TEXCOORD4;
        float clipvertex0 : TEXCOORD5;
        float clipvertex1 : TEXCOORD6;
        float clipvertex2 : TEXCOORD7;
        float clipvertex3 : TEXCOORD8;
        float clipvertex4 : TEXCOORD9;
        float clipvertex5 : TEXCOORD10;
    };

    struct SPIRV_Cross_Output
    {
        float4 frag_color : SV_Target0;
        float4 frag_normal : SV_Target1;
    };

    void frag_main()
    {
        float c = 0.0f;
        if ((_14_clipplanes & 1) == 1)
        {
            c += min(0.0f, clipvertex0);
        }
        if ((_14_clipplanes & 2) == 2)
        {
            c += min(0.0f, clipvertex1);
        }
        if ((_14_clipplanes & 4) == 4)
        {
            c += min(0.0f, clipvertex2);
        }
        if ((_14_clipplanes & 8) == 8)
        {
            c += min(0.0f, clipvertex3);
        }
        if ((_14_clipplanes & 16) == 16)
        {
            c += min(0.0f, clipvertex4);
        }
        if ((_14_clipplanes & 32) == 32)
        {
            c += min(0.0f, clipvertex5);
        }
        if (c < 0.0f)
        {
            discard;
        }
        if ((_14_flags & 2) == 2)
        {
            frag_color = color;
            frag_color.w *= min(1.0f - smoothstep(1.0f - (3.0f / uv.z), 1.0f, abs(uv.x / uv.z)), 1.0f - smoothstep(1.0f - (3.0f / uv.w), 1.0f, abs(uv.y / uv.w)));
            return;
        }
        float4 _176 = tex0.Sample(smp0, uv.xy);
        bool _180 = _14_alpha_test != 0.0f;
        bool _188;
        if (_180)
        {
            _188 = _176.w < _14_alpha_test;
        }
        else
        {
            _188 = _180;
        }
        if (_188)
        {
            discard;
        }
        float4 fcolor = color;
        float fogf = 0.0f;
        if (_14_fog_mode != 0)
        {
            float _206 = length(vpos);
            if (_14_fog_mode == 1)
            {
                fogf = clamp(smoothstep(_14_fog_start, _14_fog_end, _206), 0.0f, 1.0f);
            }
            else
            {
                fogf = 1.0f - clamp(exp2(((((-_14_fog_density) * _14_fog_density) * _206) * _206) * 1.44269502162933349609375f), 0.0f, 1.0f);
            }
        }
        if ((_14_flags & 1) == 1)
        {
            fcolor = (fcolor * _176) * tex1.Sample(smp1, uv.zw);
            if (fogf > 0.0f)
            {
                fcolor = lerp(fcolor, _14_fog_color, fogf.xxxx);
            }
        }
        else
        {
            fcolor *= _176;
            if (fogf > 0.0f)
            {
                float4 _276 = fcolor;
                float4 _281 = lerp(_276, _14_fog_color, fogf.xxxx);
                float4 _305 = _276;
                _305.x = _281.x;
                _305.y = _281.y;
                _305.z = _281.z;
                fcolor = _305;
            }
        }
        frag_color = fcolor;
        frag_normal = float4((veye_normal.xyz * 0.5f) + 0.5f.xxx, 1.0f);
    }

    SPIRV_Cross_Output main(SPIRV_Cross_Input stage_input)
    {
        clipvertex0 = stage_input.clipvertex0;
        clipvertex1 = stage_input.clipvertex1;
        clipvertex2 = stage_input.clipvertex2;
        clipvertex3 = stage_input.clipvertex3;
        clipvertex4 = stage_input.clipvertex4;
        clipvertex5 = stage_input.clipvertex5;
        uv = stage_input.uv;
        color = stage_input.color;
        vpos = stage_input.vpos;
        veye_normal = stage_input.veye_normal;
        vnormal = stage_input.vnormal;
        frag_main();
        SPIRV_Cross_Output stage_output;
        stage_output.frag_color = frag_color;
        stage_output.frag_normal = frag_normal;
        return stage_output;
    }
*/
static const uint8_t fs_bytecode_hlsl4[4004] = {
    0x44,0x58,0x42,0x43,0xaf,0x4f,0xce,0xff,0x99,0x83,0x7d,0x0e,0x26,0xc8,0x7d,0xb8,
    0xa7,0x4c,0x24,0xa0,0x01,0x00,0x00,0x00,0xa4,0x0f,0x00,0x00,0x05,0x00,0x00,0x00,
    0x34,0x00,0x00,0x00,0xdc,0x02,0x00,0x00,0x00,0x04,0x00,0x00,0x4c,0x04,0x00,0x00,
    0x28,0x0f,0x00,0x00,0x52,0x44,0x45,0x46,0xa0,0x02,0x00,0x00,0x01,0x00,0x00,0x00,
    0xd8,0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x1c,0x00,0x00,0x00,0x00,0x04,0xff,0xff,
    0x10,0x81,0x00,0x00,0x78,0x02,0x00,0x00,0xbc,0x00,0x00,0x00,0x03,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x01,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0xc1,0x00,0x00,0x00,0x03,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,
    0x01,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0xc6,0x00,0x00,0x00,0x02,0x00,0x00,0x00,
    0x05,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,
    0x01,0x00,0x00,0x00,0x0d,0x00,0x00,0x00,0xcb,0x00,0x00,0x00,0x02,0x00,0x00,0x00,
    0x05,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0x01,0x00,0x00,0x00,
    0x01,0x00,0x00,0x00,0x0d,0x00,0x00,0x00,0xd0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x01,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x73,0x6d,0x70,0x30,0x00,0x73,0x6d,0x70,
    0x31,0x00,0x74,0x65,0x78,0x30,0x00,0x74,0x65,0x78,0x31,0x00,0x73,0x74,0x61,0x74,
    0x65,0x00,0xab,0xab,0xd0,0x00,0x00,0x00,0x09,0x00,0x00,0x00,0xf0,0x00,0x00,0x00,
    0x30,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xc8,0x01,0x00,0x00,
    0x00,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0xd4,0x01,0x00,0x00,
    0x00,0x00,0x00,0x00,0xe4,0x01,0x00,0x00,0x04,0x00,0x00,0x00,0x04,0x00,0x00,0x00,
    0x02,0x00,0x00,0x00,0xf4,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x04,0x02,0x00,0x00,
    0x08,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0xd4,0x01,0x00,0x00,
    0x00,0x00,0x00,0x00,0x13,0x02,0x00,0x00,0x0c,0x00,0x00,0x00,0x04,0x00,0x00,0x00,
    0x02,0x00,0x00,0x00,0xd4,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x02,0x00,0x00,
    0x10,0x00,0x00,0x00,0x10,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x30,0x02,0x00,0x00,
    0x00,0x00,0x00,0x00,0x40,0x02,0x00,0x00,0x20,0x00,0x00,0x00,0x04,0x00,0x00,0x00,
    0x02,0x00,0x00,0x00,0xf4,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x50,0x02,0x00,0x00,
    0x24,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0xf4,0x01,0x00,0x00,
    0x00,0x00,0x00,0x00,0x5e,0x02,0x00,0x00,0x28,0x00,0x00,0x00,0x04,0x00,0x00,0x00,
    0x02,0x00,0x00,0x00,0xf4,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x6a,0x02,0x00,0x00,
    0x2c,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xf4,0x01,0x00,0x00,
    0x00,0x00,0x00,0x00,0x5f,0x31,0x34,0x5f,0x66,0x6c,0x61,0x67,0x73,0x00,0xab,0xab,
    0x00,0x00,0x02,0x00,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x5f,0x31,0x34,0x5f,0x61,0x6c,0x70,0x68,0x61,0x5f,0x74,0x65,0x73,0x74,0x00,0xab,
    0x00,0x00,0x03,0x00,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x5f,0x31,0x34,0x5f,0x63,0x6c,0x69,0x70,0x70,0x6c,0x61,0x6e,0x65,0x73,0x00,0x5f,
    0x31,0x34,0x5f,0x66,0x6f,0x67,0x5f,0x6d,0x6f,0x64,0x65,0x00,0x5f,0x31,0x34,0x5f,
    0x66,0x6f,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x00,0xab,0xab,0x01,0x00,0x03,0x00,
    0x01,0x00,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x5f,0x31,0x34,0x5f,
    0x66,0x6f,0x67,0x5f,0x64,0x65,0x6e,0x73,0x69,0x74,0x79,0x00,0x5f,0x31,0x34,0x5f,
    0x66,0x6f,0x67,0x5f,0x73,0x74,0x61,0x72,0x74,0x00,0x5f,0x31,0x34,0x5f,0x66,0x6f,
    0x67,0x5f,0x65,0x6e,0x64,0x00,0x5f,0x31,0x34,0x5f,0x66,0x6f,0x67,0x5f,0x73,0x63,
    0x61,0x6c,0x65,0x00,0x4d,0x69,0x63,0x72,0x6f,0x73,0x6f,0x66,0x74,0x20,0x28,0x52,
    0x29,0x20,0x48,0x4c,0x53,0x4c,0x20,0x53,0x68,0x61,0x64,0x65,0x72,0x20,0x43,0x6f,
    0x6d,0x70,0x69,0x6c,0x65,0x72,0x20,0x31,0x30,0x2e,0x31,0x00,0x49,0x53,0x47,0x4e,
    0x1c,0x01,0x00,0x00,0x0b,0x00,0x00,0x00,0x08,0x00,0x00,0x00,0x10,0x01,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x0f,0x0f,0x00,0x00,0x10,0x01,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x03,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x0f,0x0f,0x00,0x00,0x10,0x01,0x00,0x00,
    0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x02,0x00,0x00,0x00,
    0x07,0x07,0x00,0x00,0x10,0x01,0x00,0x00,0x05,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x03,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x08,0x08,0x00,0x00,0x10,0x01,0x00,0x00,
    0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x03,0x00,0x00,0x00,
    0x07,0x00,0x00,0x00,0x10,0x01,0x00,0x00,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x03,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x08,0x08,0x00,0x00,0x10,0x01,0x00,0x00,
    0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x04,0x00,0x00,0x00,
    0x0f,0x07,0x00,0x00,0x10,0x01,0x00,0x00,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x03,0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x01,0x01,0x00,0x00,0x10,0x01,0x00,0x00,
    0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x05,0x00,0x00,0x00,
    0x02,0x02,0x00,0x00,0x10,0x01,0x00,0x00,0x09,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x03,0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x04,0x04,0x00,0x00,0x10,0x01,0x00,0x00,
    0x0a,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x05,0x00,0x00,0x00,
    0x08,0x08,0x00,0x00,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x00,0xab,0xab,0xab,
    0x4f,0x53,0x47,0x4e,0x44,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x08,0x00,0x00,0x00,
    0x38,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x0f,0x00,0x00,0x00,0x38,0x00,0x00,0x00,0x01,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x0f,0x00,0x00,0x00,
    0x53,0x56,0x5f,0x54,0x61,0x72,0x67,0x65,0x74,0x00,0xab,0xab,0x53,0x48,0x44,0x52,
    0xd4,0x0a,0x00,0x00,0x40,0x00,0x00,0x00,0xb5,0x02,0x00,0x00,0x59,0x00,0x00,0x04,
    0x46,0x8e,0x20,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x5a,0x00,0x00,0x03,
    0x00,0x60,0x10,0x00,0x00,0x00,0x00,0x00,0x5a,0x00,0x00,0x03,0x00,0x60,0x10,0x00,
    0x01,0x00,0x00,0x00,0x58,0x18,0x00,0x04,0x00,0x70,0x10,0x00,0x00,0x00,0x00,0x00,
    0x55,0x55,0x00,0x00,0x58,0x18,0x00,0x04,0x00,0x70,0x10,0x00,0x01,0x00,0x00,0x00,
    0x55,0x55,0x00,0x00,0x62,0x10,0x00,0x03,0xf2,0x10,0x10,0x00,0x00,0x00,0x00,0x00,
    0x62,0x10,0x00,0x03,0xf2,0x10,0x10,0x00,0x01,0x00,0x00,0x00,0x62,0x10,0x00,0x03,
    0x72,0x10,0x10,0x00,0x02,0x00,0x00,0x00,0x62,0x10,0x00,0x03,0x82,0x10,0x10,0x00,
    0x02,0x00,0x00,0x00,0x62,0x10,0x00,0x03,0x82,0x10,0x10,0x00,0x03,0x00,0x00,0x00,
    0x62,0x10,0x00,0x03,0x72,0x10,0x10,0x00,0x04,0x00,0x00,0x00,0x62,0x10,0x00,0x03,
    0x12,0x10,0x10,0x00,0x05,0x00,0x00,0x00,0x62,0x10,0x00,0x03,0x22,0x10,0x10,0x00,
    0x05,0x00,0x00,0x00,0x62,0x10,0x00,0x03,0x42,0x10,0x10,0x00,0x05,0x00,0x00,0x00,
    0x62,0x10,0x00,0x03,0x82,0x10,0x10,0x00,0x05,0x00,0x00,0x00,0x65,0x00,0x00,0x03,
    0xf2,0x20,0x10,0x00,0x00,0x00,0x00,0x00,0x65,0x00,0x00,0x03,0xf2,0x20,0x10,0x00,
    0x01,0x00,0x00,0x00,0x68,0x00,0x00,0x02,0x05,0x00,0x00,0x00,0x01,0x00,0x00,0x0b,
    0xf2,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x02,0x40,0x00,0x00,0x01,0x00,0x00,0x00,
    0x02,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x08,0x00,0x00,0x00,0xa6,0x8a,0x20,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x00,0x00,0x0a,0xf2,0x00,0x10,0x00,
    0x00,0x00,0x00,0x00,0x46,0x0e,0x10,0x00,0x00,0x00,0x00,0x00,0x02,0x40,0x00,0x00,
    0x01,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x08,0x00,0x00,0x00,
    0x33,0x00,0x00,0x07,0x12,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x3a,0x10,0x10,0x00,
    0x02,0x00,0x00,0x00,0x01,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x07,
    0x12,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x0a,0x00,0x10,0x00,0x00,0x00,0x00,0x00,
    0x0a,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x33,0x00,0x00,0x07,0x12,0x00,0x10,0x00,
    0x01,0x00,0x00,0x00,0x3a,0x10,0x10,0x00,0x03,0x00,0x00,0x00,0x01,0x40,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0x12,0x00,0x10,0x00,0x01,0x00,0x00,0x00,
    0x0a,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x0a,0x00,0x10,0x00,0x01,0x00,0x00,0x00,
    0x37,0x00,0x00,0x09,0x12,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x1a,0x00,0x10,0x00,
    0x00,0x00,0x00,0x00,0x0a,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x0a,0x00,0x10,0x00,
    0x00,0x00,0x00,0x00,0x33,0x00,0x00,0x0a,0xf2,0x00,0x10,0x00,0x01,0x00,0x00,0x00,
    0x46,0x1e,0x10,0x00,0x05,0x00,0x00,0x00,0x02,0x40,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,
    0x22,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x0a,0x00,0x10,0x00,0x00,0x00,0x00,0x00,
    0x0a,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x37,0x00,0x00,0x09,0x12,0x00,0x10,0x00,
    0x00,0x00,0x00,0x00,0x2a,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x1a,0x00,0x10,0x00,
    0x00,0x00,0x00,0x00,0x0a,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,
    0x22,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x1a,0x00,0x10,0x00,0x01,0x00,0x00,0x00,
    0x0a,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x37,0x00,0x00,0x09,0x12,0x00,0x10,0x00,
    0x00,0x00,0x00,0x00,0x3a,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x1a,0x00,0x10,0x00,
    0x00,0x00,0x00,0x00,0x0a,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x0b,
    0x62,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x02,0x40,0x00,0x00,0x00,0x00,0x00,0x00,
    0x10,0x00,0x00,0x00,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xa6,0x8a,0x20,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x00,0x00,0x0a,0x62,0x00,0x10,0x00,
    0x00,0x00,0x00,0x00,0x56,0x06,0x10,0x00,0x00,0x00,0x00,0x00,0x02,0x40,0x00,0x00,
    0x00,0x00,0x00,0x00,0x10,0x00,0x00,0x00,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x07,0x82,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x2a,0x00,0x10,0x00,
    0x01,0x00,0x00,0x00,0x0a,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x37,0x00,0x00,0x09,
    0x12,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x1a,0x00,0x10,0x00,0x00,0x00,0x00,0x00,
    0x3a,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x0a,0x00,0x10,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x07,0x22,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x3a,0x00,0x10,0x00,
    0x01,0x00,0x00,0x00,0x0a,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x37,0x00,0x00,0x09,
    0x12,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x2a,0x00,0x10,0x00,0x00,0x00,0x00,0x00,
    0x1a,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x0a,0x00,0x10,0x00,0x00,0x00,0x00,0x00,
    0x31,0x00,0x00,0x07,0x12,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x0a,0x00,0x10,0x00,
    0x00,0x00,0x00,0x00,0x01,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x0d,0x00,0x04,0x03,
    0x0a,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x08,0x12,0x00,0x10,0x00,
    0x00,0x00,0x00,0x00,0x01,0x40,0x00,0x00,0x02,0x00,0x00,0x00,0x0a,0x80,0x20,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x27,0x00,0x00,0x07,0x12,0x00,0x10,0x00,
    0x00,0x00,0x00,0x00,0x0a,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x01,0x40,0x00,0x00,
    0x02,0x00,0x00,0x00,0x1f,0x00,0x04,0x03,0x0a,0x00,0x10,0x00,0x00,0x00,0x00,0x00,
    0x45,0x00,0x00,0x09,0xf2,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x46,0x10,0x10,0x00,
    0x00,0x00,0x00,0x00,0x46,0x7e,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x60,0x10,0x00,
    0x00,0x00,0x00,0x00,0x39,0x00,0x00,0x08,0x12,0x00,0x10,0x00,0x01,0x00,0x00,0x00,
    0x01,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x1a,0x80,0x20,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x31,0x00,0x00,0x08,0x22,0x00,0x10,0x00,0x01,0x00,0x00,0x00,
    0x3a,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x1a,0x80,0x20,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x07,0x12,0x00,0x10,0x00,0x01,0x00,0x00,0x00,
    0x1a,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x0a,0x00,0x10,0x00,0x01,0x00,0x00,0x00,
    0x0d,0x00,0x04,0x03,0x0a,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x10,0x00,0x00,0x07,
    0x12,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x46,0x12,0x10,0x00,0x02,0x00,0x00,0x00,
    0x46,0x12,0x10,0x00,0x02,0x00,0x00,0x00,0x4b,0x00,0x00,0x05,0x22,0x00,0x10,0x00,
    0x01,0x00,0x00,0x00,0x0a,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x20,0x00,0x00,0x08,
    0x42,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x01,0x40,0x00,0x00,0x01,0x00,0x00,0x00,
    0x3a,0x80,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0a,
    0x82,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x1a,0x80,0x20,0x80,0x41,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x2a,0x80,0x20,0x00,0x00,0x00,0x00,0x00,
    0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x09,0x22,0x00,0x10,0x00,0x01,0x00,0x00,0x00,
    0x1a,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x1a,0x80,0x20,0x80,0x41,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x0e,0x00,0x00,0x0a,0x82,0x00,0x10,0x00,
    0x01,0x00,0x00,0x00,0x02,0x40,0x00,0x00,0x00,0x00,0x80,0x3f,0x00,0x00,0x80,0x3f,
    0x00,0x00,0x80,0x3f,0x00,0x00,0x80,0x3f,0x3a,0x00,0x10,0x00,0x01,0x00,0x00,0x00,
    0x38,0x20,0x00,0x07,0x22,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x3a,0x00,0x10,0x00,
    0x01,0x00,0x00,0x00,0x1a,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x32,0x00,0x00,0x09,
    0x82,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x1a,0x00,0x10,0x00,0x01,0x00,0x00,0x00,
    0x01,0x40,0x00,0x00,0x00,0x00,0x00,0xc0,0x01,0x40,0x00,0x00,0x00,0x00,0x40,0x40,
    0x38,0x00,0x00,0x07,0x22,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x1a,0x00,0x10,0x00,
    0x01,0x00,0x00,0x00,0x1a,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x38,0x00,0x00,0x07,
    0x22,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x1a,0x00,0x10,0x00,0x01,0x00,0x00,0x00,
    0x3a,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x33,0x00,0x00,0x07,0x22,0x00,0x10,0x00,
    0x01,0x00,0x00,0x00,0x1a,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x01,0x40,0x00,0x00,
    0x00,0x00,0x80,0x3f,0x38,0x00,0x00,0x0a,0x82,0x00,0x10,0x00,0x01,0x00,0x00,0x00,
    0x0a,0x80,0x20,0x00,0x00,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x0a,0x80,0x20,0x80,
    0x41,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x38,0x00,0x00,0x07,
    0x12,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x3a,0x00,0x10,0x00,0x01,0x00,0x00,0x00,
    0x0a,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x38,0x00,0x00,0x07,0x12,0x00,0x10,0x00,
    0x01,0x00,0x00,0x00,0x0a,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x01,0x40,0x00,0x00,
    0x3b,0xaa,0xb8,0x3f,0x19,0x00,0x00,0x05,0x12,0x00,0x10,0x00,0x01,0x00,0x00,0x00,
    0x0a,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x08,0x12,0x00,0x10,0x00,
    0x01,0x00,0x00,0x00,0x0a,0x00,0x10,0x80,0x41,0x00,0x00,0x00,0x01,0x00,0x00,0x00,
    0x01,0x40,0x00,0x00,0x00,0x00,0x80,0x3f,0x37,0x00,0x00,0x09,0x12,0x00,0x10,0x00,
    0x01,0x00,0x00,0x00,0x2a,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x1a,0x00,0x10,0x00,
    0x01,0x00,0x00,0x00,0x0a,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x37,0x00,0x00,0x0a,
    0x12,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x3a,0x80,0x20,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x0a,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x01,0x40,0x00,0x00,
    0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x08,0x22,0x00,0x10,0x00,0x01,0x00,0x00,0x00,
    0x01,0x40,0x00,0x00,0x01,0x00,0x00,0x00,0x0a,0x80,0x20,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x20,0x00,0x00,0x07,0x22,0x00,0x10,0x00,0x01,0x00,0x00,0x00,
    0x1a,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x01,0x40,0x00,0x00,0x01,0x00,0x00,0x00,
    0x1f,0x00,0x04,0x03,0x1a,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x38,0x00,0x00,0x07,
    0xf2,0x00,0x10,0x00,0x02,0x00,0x00,0x00,0x46,0x0e,0x10,0x00,0x00,0x00,0x00,0x00,
    0x46,0x1e,0x10,0x00,0x01,0x00,0x00,0x00,0x45,0x00,0x00,0x09,0xf2,0x00,0x10,0x00,
    0x03,0x00,0x00,0x00,0xe6,0x1a,0x10,0x00,0x00,0x00,0x00,0x00,0x46,0x7e,0x10,0x00,
    0x01,0x00,0x00,0x00,0x00,0x60,0x10,0x00,0x01,0x00,0x00,0x00,0x38,0x00,0x00,0x07,
    0xf2,0x00,0x10,0x00,0x04,0x00,0x00,0x00,0x46,0x0e,0x10,0x00,0x02,0x00,0x00,0x00,
    0x46,0x0e,0x10,0x00,0x03,0x00,0x00,0x00,0x31,0x00,0x00,0x07,0x22,0x00,0x10,0x00,
    0x01,0x00,0x00,0x00,0x01,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x0a,0x00,0x10,0x00,
    0x01,0x00,0x00,0x00,0x32,0x00,0x00,0x0b,0xf2,0x00,0x10,0x00,0x02,0x00,0x00,0x00,
    0x46,0x0e,0x10,0x80,0x41,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x46,0x0e,0x10,0x00,
    0x03,0x00,0x00,0x00,0x46,0x8e,0x20,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,
    0x32,0x00,0x00,0x09,0xf2,0x00,0x10,0x00,0x02,0x00,0x00,0x00,0x06,0x00,0x10,0x00,
    0x01,0x00,0x00,0x00,0x46,0x0e,0x10,0x00,0x02,0x00,0x00,0x00,0x46,0x0e,0x10,0x00,
    0x04,0x00,0x00,0x00,0x37,0x00,0x00,0x09,0xf2,0x20,0x10,0x00,0x00,0x00,0x00,0x00,
    0x56,0x05,0x10,0x00,0x01,0x00,0x00,0x00,0x46,0x0e,0x10,0x00,0x02,0x00,0x00,0x00,
    0x46,0x0e,0x10,0x00,0x04,0x00,0x00,0x00,0x12,0x00,0x00,0x01,0x38,0x00,0x00,0x07,
    0xf2,0x00,0x10,0x00,0x02,0x00,0x00,0x00,0x46,0x0e,0x10,0x00,0x00,0x00,0x00,0x00,
    0x46,0x1e,0x10,0x00,0x01,0x00,0x00,0x00,0x31,0x00,0x00,0x07,0x82,0x00,0x10,0x00,
    0x00,0x00,0x00,0x00,0x01,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x0a,0x00,0x10,0x00,
    0x01,0x00,0x00,0x00,0x32,0x00,0x00,0x0b,0x72,0x00,0x10,0x00,0x00,0x00,0x00,0x00,
    0x46,0x12,0x10,0x80,0x41,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x46,0x02,0x10,0x00,
    0x00,0x00,0x00,0x00,0x46,0x82,0x20,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,
    0x32,0x00,0x00,0x09,0x72,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x06,0x00,0x10,0x00,
    0x01,0x00,0x00,0x00,0x46,0x02,0x10,0x00,0x00,0x00,0x00,0x00,0x46,0x02,0x10,0x00,
    0x02,0x00,0x00,0x00,0x37,0x00,0x00,0x09,0x72,0x20,0x10,0x00,0x00,0x00,0x00,0x00,
    0xf6,0x0f,0x10,0x00,0x00,0x00,0x00,0x00,0x46,0x02,0x10,0x00,0x00,0x00,0x00,0x00,
    0x46,0x02,0x10,0x00,0x02,0x00,0x00,0x00,0x36,0x00,0x00,0x05,0x82,0x20,0x10,0x00,
    0x00,0x00,0x00,0x00,0x3a,0x00,0x10,0x00,0x02,0x00,0x00,0x00,0x15,0x00,0x00,0x01,
    0x32,0x00,0x00,0x0f,0x72,0x20,0x10,0x00,0x01,0x00,0x00,0x00,0x46,0x12,0x10,0x00,
    0x04,0x00,0x00,0x00,0x02,0x40,0x00,0x00,0x00,0x00,0x00,0x3f,0x00,0x00,0x00,0x3f,
    0x00,0x00,0x00,0x3f,0x00,0x00,0x00,0x00,0x02,0x40,0x00,0x00,0x00,0x00,0x00,0x3f,
    0x00,0x00,0x00,0x3f,0x00,0x00,0x00,0x3f,0x00,0x00,0x00,0x00,0x36,0x00,0x00,0x05,
    0x82,0x20,0x10,0x00,0x01,0x00,0x00,0x00,0x01,0x40,0x00,0x00,0x00,0x00,0x80,0x3f,
    0x12,0x00,0x00,0x01,0x0e,0x00,0x00,0x0a,0x32,0x00,0x10,0x00,0x00,0x00,0x00,0x00,
    0x02,0x40,0x00,0x00,0x00,0x00,0x40,0x40,0x00,0x00,0x40,0x40,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0xe6,0x1a,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0b,
    0x32,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x46,0x00,0x10,0x80,0x41,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x02,0x40,0x00,0x00,0x00,0x00,0x80,0x3f,0x00,0x00,0x80,0x3f,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0e,0x00,0x00,0x07,0xc2,0x00,0x10,0x00,
    0x00,0x00,0x00,0x00,0x06,0x14,0x10,0x00,0x00,0x00,0x00,0x00,0xa6,0x1e,0x10,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0b,0x32,0x00,0x10,0x00,0x01,0x00,0x00,0x00,
    0x46,0x00,0x10,0x80,0x41,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x40,0x00,0x00,
    0x00,0x00,0x80,0x3f,0x00,0x00,0x80,0x3f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x09,0x32,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x46,0x00,0x10,0x80,
    0x41,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xe6,0x0a,0x10,0x80,0x81,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x0e,0x00,0x00,0x0a,0xc2,0x00,0x10,0x00,0x00,0x00,0x00,0x00,
    0x02,0x40,0x00,0x00,0x00,0x00,0x80,0x3f,0x00,0x00,0x80,0x3f,0x00,0x00,0x80,0x3f,
    0x00,0x00,0x80,0x3f,0x06,0x04,0x10,0x00,0x01,0x00,0x00,0x00,0x38,0x20,0x00,0x07,
    0x32,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0xe6,0x0a,0x10,0x00,0x00,0x00,0x00,0x00,
    0x46,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x32,0x00,0x00,0x0f,0xc2,0x00,0x10,0x00,
    0x00,0x00,0x00,0x00,0x06,0x04,0x10,0x00,0x00,0x00,0x00,0x00,0x02,0x40,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xc0,0x00,0x00,0x00,0xc0,
    0x02,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x40,0x40,
    0x00,0x00,0x40,0x40,0x38,0x00,0x00,0x07,0x32,0x00,0x10,0x00,0x00,0x00,0x00,0x00,
    0x46,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x46,0x00,0x10,0x00,0x00,0x00,0x00,0x00,
    0x32,0x00,0x00,0x0d,0x32,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0xe6,0x0a,0x10,0x80,
    0x41,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x46,0x00,0x10,0x00,0x00,0x00,0x00,0x00,
    0x02,0x40,0x00,0x00,0x00,0x00,0x80,0x3f,0x00,0x00,0x80,0x3f,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x33,0x00,0x00,0x07,0x12,0x00,0x10,0x00,0x00,0x00,0x00,0x00,
    0x1a,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x0a,0x00,0x10,0x00,0x00,0x00,0x00,0x00,
    0x38,0x00,0x00,0x07,0x82,0x20,0x10,0x00,0x00,0x00,0x00,0x00,0x0a,0x00,0x10,0x00,
    0x00,0x00,0x00,0x00,0x3a,0x10,0x10,0x00,0x01,0x00,0x00,0x00,0x36,0x00,0x00,0x05,
    0x72,0x20,0x10,0x00,0x00,0x00,0x00,0x00,0x46,0x12,0x10,0x00,0x01,0x00,0x00,0x00,
    0x36,0x00,0x00,0x08,0xf2,0x20,0x10,0x00,0x01,0x00,0x00,0x00,0x02,0x40,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x15,0x00,0x00,0x01,0x3e,0x00,0x00,0x01,0x53,0x54,0x41,0x54,0x74,0x00,0x00,0x00,
    0x53,0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0c,0x00,0x00,0x00,
    0x30,0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x06,0x00,0x00,0x00,0x03,0x00,0x00,0x00,
    0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04,0x00,0x00,0x00,
    0x09,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,
};
static inline const sg_shader_desc* sgl_shader_desc(sg_backend backend) {
    if (backend == SG_BACKEND_GLCORE) {
        static sg_shader_desc desc;
        static bool valid;
        if (!valid) {
            valid = true;
            desc.vertex_func.source = (const char*)vs_source_glsl410;
            desc.vertex_func.entry = "main";
            desc.fragment_func.source = (const char*)fs_source_glsl410;
            desc.fragment_func.entry = "main";
            desc.attrs[0].glsl_name = "position";
            desc.attrs[1].glsl_name = "normal";
            desc.attrs[2].glsl_name = "texcoords";
            desc.attrs[3].glsl_name = "color0";
            desc.attrs[4].glsl_name = "psize";
            desc.uniform_blocks[0].stage = SG_SHADERSTAGE_VERTEX;
            desc.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
            desc.uniform_blocks[0].size = 288;
            desc.uniform_blocks[0].glsl_uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
            desc.uniform_blocks[0].glsl_uniforms[0].array_count = 18;
            desc.uniform_blocks[0].glsl_uniforms[0].glsl_name = "vs_params";
            desc.uniform_blocks[1].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.uniform_blocks[1].layout = SG_UNIFORMLAYOUT_STD140;
            desc.uniform_blocks[1].size = 48;
            desc.uniform_blocks[1].glsl_uniforms[0].type = SG_UNIFORMTYPE_INT;
            desc.uniform_blocks[1].glsl_uniforms[0].array_count = 0;
            desc.uniform_blocks[1].glsl_uniforms[0].glsl_name = "_14.flags";
            desc.uniform_blocks[1].glsl_uniforms[1].type = SG_UNIFORMTYPE_FLOAT;
            desc.uniform_blocks[1].glsl_uniforms[1].array_count = 0;
            desc.uniform_blocks[1].glsl_uniforms[1].glsl_name = "_14.alpha_test";
            desc.uniform_blocks[1].glsl_uniforms[2].type = SG_UNIFORMTYPE_INT;
            desc.uniform_blocks[1].glsl_uniforms[2].array_count = 0;
            desc.uniform_blocks[1].glsl_uniforms[2].glsl_name = "_14.clipplanes";
            desc.uniform_blocks[1].glsl_uniforms[3].type = SG_UNIFORMTYPE_INT;
            desc.uniform_blocks[1].glsl_uniforms[3].array_count = 0;
            desc.uniform_blocks[1].glsl_uniforms[3].glsl_name = "_14.fog_mode";
            desc.uniform_blocks[1].glsl_uniforms[4].type = SG_UNIFORMTYPE_FLOAT4;
            desc.uniform_blocks[1].glsl_uniforms[4].array_count = 0;
            desc.uniform_blocks[1].glsl_uniforms[4].glsl_name = "_14.fog_color";
            desc.uniform_blocks[1].glsl_uniforms[5].type = SG_UNIFORMTYPE_FLOAT;
            desc.uniform_blocks[1].glsl_uniforms[5].array_count = 0;
            desc.uniform_blocks[1].glsl_uniforms[5].glsl_name = "_14.fog_density";
            desc.uniform_blocks[1].glsl_uniforms[6].type = SG_UNIFORMTYPE_FLOAT;
            desc.uniform_blocks[1].glsl_uniforms[6].array_count = 0;
            desc.uniform_blocks[1].glsl_uniforms[6].glsl_name = "_14.fog_start";
            desc.uniform_blocks[1].glsl_uniforms[7].type = SG_UNIFORMTYPE_FLOAT;
            desc.uniform_blocks[1].glsl_uniforms[7].array_count = 0;
            desc.uniform_blocks[1].glsl_uniforms[7].glsl_name = "_14.fog_end";
            desc.uniform_blocks[1].glsl_uniforms[8].type = SG_UNIFORMTYPE_FLOAT;
            desc.uniform_blocks[1].glsl_uniforms[8].array_count = 0;
            desc.uniform_blocks[1].glsl_uniforms[8].glsl_name = "_14.fog_scale";
            desc.images[0].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.images[0].image_type = SG_IMAGETYPE_2D;
            desc.images[0].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.images[0].multisampled = false;
            desc.images[1].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.images[1].image_type = SG_IMAGETYPE_2D;
            desc.images[1].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.images[1].multisampled = false;
            desc.samplers[0].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.samplers[0].sampler_type = SG_SAMPLERTYPE_FILTERING;
            desc.samplers[1].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.samplers[1].sampler_type = SG_SAMPLERTYPE_FILTERING;
            desc.image_sampler_pairs[0].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.image_sampler_pairs[0].image_slot = 0;
            desc.image_sampler_pairs[0].sampler_slot = 0;
            desc.image_sampler_pairs[0].glsl_name = "tex0_smp0";
            desc.image_sampler_pairs[1].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.image_sampler_pairs[1].image_slot = 1;
            desc.image_sampler_pairs[1].sampler_slot = 1;
            desc.image_sampler_pairs[1].glsl_name = "tex1_smp1";
            desc.label = "sgl_shader";
        }
        return &desc;
    }
    if (backend == SG_BACKEND_GLES3) {
        static sg_shader_desc desc;
        static bool valid;
        if (!valid) {
            valid = true;
            desc.vertex_func.source = (const char*)vs_source_glsl300es;
            desc.vertex_func.entry = "main";
            desc.fragment_func.source = (const char*)fs_source_glsl300es;
            desc.fragment_func.entry = "main";
            desc.attrs[0].glsl_name = "position";
            desc.attrs[1].glsl_name = "normal";
            desc.attrs[2].glsl_name = "texcoords";
            desc.attrs[3].glsl_name = "color0";
            desc.attrs[4].glsl_name = "psize";
            desc.uniform_blocks[0].stage = SG_SHADERSTAGE_VERTEX;
            desc.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
            desc.uniform_blocks[0].size = 288;
            desc.uniform_blocks[0].glsl_uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
            desc.uniform_blocks[0].glsl_uniforms[0].array_count = 18;
            desc.uniform_blocks[0].glsl_uniforms[0].glsl_name = "vs_params";
            desc.uniform_blocks[1].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.uniform_blocks[1].layout = SG_UNIFORMLAYOUT_STD140;
            desc.uniform_blocks[1].size = 48;
            desc.uniform_blocks[1].glsl_uniforms[0].type = SG_UNIFORMTYPE_INT;
            desc.uniform_blocks[1].glsl_uniforms[0].array_count = 0;
            desc.uniform_blocks[1].glsl_uniforms[0].glsl_name = "_14.flags";
            desc.uniform_blocks[1].glsl_uniforms[1].type = SG_UNIFORMTYPE_FLOAT;
            desc.uniform_blocks[1].glsl_uniforms[1].array_count = 0;
            desc.uniform_blocks[1].glsl_uniforms[1].glsl_name = "_14.alpha_test";
            desc.uniform_blocks[1].glsl_uniforms[2].type = SG_UNIFORMTYPE_INT;
            desc.uniform_blocks[1].glsl_uniforms[2].array_count = 0;
            desc.uniform_blocks[1].glsl_uniforms[2].glsl_name = "_14.clipplanes";
            desc.uniform_blocks[1].glsl_uniforms[3].type = SG_UNIFORMTYPE_INT;
            desc.uniform_blocks[1].glsl_uniforms[3].array_count = 0;
            desc.uniform_blocks[1].glsl_uniforms[3].glsl_name = "_14.fog_mode";
            desc.uniform_blocks[1].glsl_uniforms[4].type = SG_UNIFORMTYPE_FLOAT4;
            desc.uniform_blocks[1].glsl_uniforms[4].array_count = 0;
            desc.uniform_blocks[1].glsl_uniforms[4].glsl_name = "_14.fog_color";
            desc.uniform_blocks[1].glsl_uniforms[5].type = SG_UNIFORMTYPE_FLOAT;
            desc.uniform_blocks[1].glsl_uniforms[5].array_count = 0;
            desc.uniform_blocks[1].glsl_uniforms[5].glsl_name = "_14.fog_density";
            desc.uniform_blocks[1].glsl_uniforms[6].type = SG_UNIFORMTYPE_FLOAT;
            desc.uniform_blocks[1].glsl_uniforms[6].array_count = 0;
            desc.uniform_blocks[1].glsl_uniforms[6].glsl_name = "_14.fog_start";
            desc.uniform_blocks[1].glsl_uniforms[7].type = SG_UNIFORMTYPE_FLOAT;
            desc.uniform_blocks[1].glsl_uniforms[7].array_count = 0;
            desc.uniform_blocks[1].glsl_uniforms[7].glsl_name = "_14.fog_end";
            desc.uniform_blocks[1].glsl_uniforms[8].type = SG_UNIFORMTYPE_FLOAT;
            desc.uniform_blocks[1].glsl_uniforms[8].array_count = 0;
            desc.uniform_blocks[1].glsl_uniforms[8].glsl_name = "_14.fog_scale";
            desc.images[0].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.images[0].image_type = SG_IMAGETYPE_2D;
            desc.images[0].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.images[0].multisampled = false;
            desc.images[1].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.images[1].image_type = SG_IMAGETYPE_2D;
            desc.images[1].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.images[1].multisampled = false;
            desc.samplers[0].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.samplers[0].sampler_type = SG_SAMPLERTYPE_FILTERING;
            desc.samplers[1].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.samplers[1].sampler_type = SG_SAMPLERTYPE_FILTERING;
            desc.image_sampler_pairs[0].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.image_sampler_pairs[0].image_slot = 0;
            desc.image_sampler_pairs[0].sampler_slot = 0;
            desc.image_sampler_pairs[0].glsl_name = "tex0_smp0";
            desc.image_sampler_pairs[1].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.image_sampler_pairs[1].image_slot = 1;
            desc.image_sampler_pairs[1].sampler_slot = 1;
            desc.image_sampler_pairs[1].glsl_name = "tex1_smp1";
            desc.label = "sgl_shader";
        }
        return &desc;
    }
    if (backend == SG_BACKEND_D3D11) {
        static sg_shader_desc desc;
        static bool valid;
        if (!valid) {
            valid = true;
            desc.vertex_func.bytecode.ptr = vs_bytecode_hlsl4;
            desc.vertex_func.bytecode.size = 2272;
            desc.vertex_func.entry = "main";
            desc.fragment_func.bytecode.ptr = fs_bytecode_hlsl4;
            desc.fragment_func.bytecode.size = 4004;
            desc.fragment_func.entry = "main";
            desc.attrs[0].hlsl_sem_name = "TEXCOORD";
            desc.attrs[0].hlsl_sem_index = 0;
            desc.attrs[1].hlsl_sem_name = "TEXCOORD";
            desc.attrs[1].hlsl_sem_index = 1;
            desc.attrs[2].hlsl_sem_name = "TEXCOORD";
            desc.attrs[2].hlsl_sem_index = 2;
            desc.attrs[3].hlsl_sem_name = "TEXCOORD";
            desc.attrs[3].hlsl_sem_index = 3;
            desc.attrs[4].hlsl_sem_name = "TEXCOORD";
            desc.attrs[4].hlsl_sem_index = 4;
            desc.uniform_blocks[0].stage = SG_SHADERSTAGE_VERTEX;
            desc.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
            desc.uniform_blocks[0].size = 288;
            desc.uniform_blocks[0].hlsl_register_b_n = 0;
            desc.uniform_blocks[1].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.uniform_blocks[1].layout = SG_UNIFORMLAYOUT_STD140;
            desc.uniform_blocks[1].size = 48;
            desc.uniform_blocks[1].hlsl_register_b_n = 0;
            desc.images[0].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.images[0].image_type = SG_IMAGETYPE_2D;
            desc.images[0].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.images[0].multisampled = false;
            desc.images[0].hlsl_register_t_n = 0;
            desc.images[1].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.images[1].image_type = SG_IMAGETYPE_2D;
            desc.images[1].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.images[1].multisampled = false;
            desc.images[1].hlsl_register_t_n = 1;
            desc.samplers[0].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.samplers[0].sampler_type = SG_SAMPLERTYPE_FILTERING;
            desc.samplers[0].hlsl_register_s_n = 0;
            desc.samplers[1].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.samplers[1].sampler_type = SG_SAMPLERTYPE_FILTERING;
            desc.samplers[1].hlsl_register_s_n = 1;
            desc.image_sampler_pairs[0].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.image_sampler_pairs[0].image_slot = 0;
            desc.image_sampler_pairs[0].sampler_slot = 0;
            desc.image_sampler_pairs[1].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.image_sampler_pairs[1].image_slot = 1;
            desc.image_sampler_pairs[1].sampler_slot = 1;
            desc.label = "sgl_shader";
        }
        return &desc;
    }
    return 0;
}
