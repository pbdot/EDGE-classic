#pragma once
/*
    #version:1# (machine generated, don't edit!)

    Generated by sokol-shdc (https://github.com/floooh/sokol-tools)

    Cmdline:
        sokol-shdc -i ssao.glsl -o shader_ssao.h -l glsl410:hlsl4:glsl300es -b

    Overview:
    =========
    Shader program: 'ssao':
        Get shader desc: ssao_shader_desc(sg_query_backend());
        Vertex Shader: ssao_vs
        Fragment Shader: ssao_fs
        Attributes:
            ATTR_ssao_v_position => 0
            ATTR_ssao_v_uv => 1
    Bindings:
        Uniform block 'ssao_params':
            C struct: ssao_params_t
            Bind slot: UB_ssao_params => 0
        Image 'DepthTexture':
            Image type: SG_IMAGETYPE_2D
            Sample type: SG_IMAGESAMPLETYPE_UNFILTERABLE_FLOAT
            Multisampled: false
            Bind slot: IMG_DepthTexture => 0
        Image 'NormalTexture':
            Image type: SG_IMAGETYPE_2D
            Sample type: SG_IMAGESAMPLETYPE_FLOAT
            Multisampled: false
            Bind slot: IMG_NormalTexture => 1
        Image 'RandomTexture':
            Image type: SG_IMAGETYPE_2D
            Sample type: SG_IMAGESAMPLETYPE_FLOAT
            Multisampled: false
            Bind slot: IMG_RandomTexture => 2
        Sampler 'DepthSampler':
            Type: SG_SAMPLERTYPE_NONFILTERING
            Bind slot: SMP_DepthSampler => 0
        Sampler 'NormalSampler':
            Type: SG_SAMPLERTYPE_FILTERING
            Bind slot: SMP_NormalSampler => 1
        Sampler 'RandomSampler':
            Type: SG_SAMPLERTYPE_FILTERING
            Bind slot: SMP_RandomSampler => 2
*/
#if !defined(SOKOL_GFX_INCLUDED)
#error "Please include sokol_gfx.h before shader_ssao.h"
#endif
#if !defined(SOKOL_SHDC_ALIGN)
#if defined(_MSC_VER)
#define SOKOL_SHDC_ALIGN(a) __declspec(align(a))
#else
#define SOKOL_SHDC_ALIGN(a) __attribute__((aligned(a)))
#endif
#endif
#define ATTR_ssao_v_position (0)
#define ATTR_ssao_v_uv (1)
#define UB_ssao_params (0)
#define IMG_DepthTexture (0)
#define IMG_NormalTexture (1)
#define IMG_RandomTexture (2)
#define SMP_DepthSampler (0)
#define SMP_NormalSampler (1)
#define SMP_RandomSampler (2)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct ssao_params_t {
    float UVToViewA[2];
    float UVToViewB[2];
    float InvFullResolution[2];
    float NDotVBias;
    float NegInvR2;
    float RadiusToScreen;
    float AOMultiplier;
    float AOStrength;
    int SampleIndex;
    float Padding0;
    float Padding1;
    float Scale[2];
    float Offset[2];
    uint8_t _pad_72[8];
} ssao_params_t;
#pragma pack(pop)
/*
    #version 410

    layout(location = 0) in vec4 v_position;
    layout(location = 0) out vec2 TexCoord;
    layout(location = 1) in vec2 v_uv;

    void main()
    {
        gl_Position = v_position;
        TexCoord = v_uv;
    }

*/
static const uint8_t ssao_vs_source_glsl410[200] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x34,0x31,0x30,0x0a,0x0a,0x6c,0x61,
    0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,
    0x30,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x34,0x20,0x76,0x5f,0x70,0x6f,0x73,
    0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,
    0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x6f,0x75,0x74,0x20,
    0x76,0x65,0x63,0x32,0x20,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x6c,
    0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,
    0x20,0x31,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x32,0x20,0x76,0x5f,0x75,0x76,
    0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,
    0x20,0x3d,0x20,0x76,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x20,0x3d,0x20,0x76,0x5f,
    0x75,0x76,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 410

    struct ssao_params
    {
        vec2 UVToViewA;
        vec2 UVToViewB;
        vec2 InvFullResolution;
        float NDotVBias;
        float NegInvR2;
        float RadiusToScreen;
        float AOMultiplier;
        float AOStrength;
        int SampleIndex;
        float Padding0;
        float Padding1;
        vec2 Scale;
        vec2 Offset;
    };

    uniform ssao_params _59;

    uniform sampler2D DepthTexture_DepthSampler;
    uniform sampler2D NormalTexture_NormalSampler;
    uniform sampler2D RandomTexture_RandomSampler;

    layout(location = 0) in vec2 TexCoord;
    layout(location = 0) out vec4 FragColor;

    vec3 FetchViewPos(vec2 uv)
    {
        vec4 _52 = textureLod(DepthTexture_DepthSampler, uv, 0.0);
        float _55 = _52.x;
        return vec3(fma(_59.UVToViewA, uv, _59.UVToViewB) * _55, _55);
    }

    vec3 FetchNormal(vec2 uv)
    {
        vec3 _94 = texture(NormalTexture_NormalSampler, fma(uv, _59.Scale, _59.Offset), 0.0).xyz;
        vec3 normal = _94;
        if (all(equal(_94, vec3(0.0))))
        {
            return normal;
        }
        vec3 _105 = normal;
        vec3 _110 = (_105 * 2.0) - vec3(1.0);
        normal = _110;
        if (length(_110) > 0.100000001490116119384765625)
        {
            vec3 _118 = normalize(normal);
            _118.z = -_118.z;
            normal = _118;
            return _118;
        }
        else
        {
            return vec3(0.0);
        }
    }

    vec4 GetJitter()
    {
        return texture(RandomTexture_RandomSampler, gl_FragCoord.xy * vec2(0.25), 0.0);
    }

    vec2 RotateDirection(vec2 dir, vec2 cossin)
    {
        return vec2(fma(dir.x, cossin.x, -(dir.y * cossin.y)), fma(dir.x, cossin.y, dir.y * cossin.x));
    }

    float ComputeSampleAO(vec3 kernelPos, vec3 normal, vec3 samplePos)
    {
        vec3 _173 = samplePos - kernelPos;
        float _177 = dot(_173, _173);
        return clamp(fma(dot(normal, _173), inversesqrt(_177), -_59.NDotVBias), 0.0, 1.0) * clamp(fma(_177, _59.NegInvR2, 1.0), 0.0, 1.0);
    }

    float ComputeAO(vec3 viewPosition, vec3 viewNormal)
    {
        vec4 _204 = GetJitter();
        float _211 = _59.RadiusToScreen / viewPosition.z;
        float _215 = _211 * 0.20000000298023223876953125;
        float ao = 0.0;
        for (float directionIndex = 0.0; directionIndex < 8.0; directionIndex += 1.0)
        {
            float _229 = 0.785398185253143310546875 * directionIndex;
            vec2 param = vec2(cos(_229), sin(_229));
            vec2 param_1 = _204.xy;
            vec2 _240 = RotateDirection(param, param_1);
            float rayPixels = fma(_204.z, _215, 1.0);
            for (float StepIndex = 0.0; StepIndex < 4.0; StepIndex += 1.0)
            {
                vec2 param_2 = fma(round(_240 * rayPixels), _59.InvFullResolution, TexCoord);
                vec3 param_3 = viewPosition;
                vec3 param_4 = viewNormal;
                vec3 param_5 = FetchViewPos(param_2);
                ao += ComputeSampleAO(param_3, param_4, param_5);
                rayPixels = fma(_211, 0.20000000298023223876953125, rayPixels);
            }
        }
        float _293 = ao;
        float _294 = _293 * (_59.AOMultiplier * 0.03125);
        ao = _294;
        return clamp(fma(-_294, 2.0, 1.0), 0.0, 1.0);
    }

    void main()
    {
        vec2 param = TexCoord;
        vec3 _304 = FetchViewPos(param);
        vec2 param_1 = TexCoord;
        vec3 _308 = FetchNormal(param_1);
        if (all(equal(_308, vec3(0.0))))
        {
            FragColor = vec4(1.0, _304.z, 0.0, 1.0);
            return;
        }
        float _324;
        if (any(notEqual(_308, vec3(0.0))))
        {
            vec3 param_2 = _304;
            vec3 param_3 = _308;
            _324 = fma(ComputeAO(param_2, param_3), _59.AOStrength, 1.0 - _59.AOStrength);
        }
        else
        {
            _324 = 1.0;
        }
        FragColor = vec4(_324, _304.z, 0.0, 1.0);
    }

*/
static const uint8_t ssao_fs_source_glsl410[3517] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x34,0x31,0x30,0x0a,0x0a,0x73,0x74,
    0x72,0x75,0x63,0x74,0x20,0x73,0x73,0x61,0x6f,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,
    0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x32,0x20,0x55,0x56,0x54,0x6f,
    0x56,0x69,0x65,0x77,0x41,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x32,0x20,
    0x55,0x56,0x54,0x6f,0x56,0x69,0x65,0x77,0x42,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,
    0x65,0x63,0x32,0x20,0x49,0x6e,0x76,0x46,0x75,0x6c,0x6c,0x52,0x65,0x73,0x6f,0x6c,
    0x75,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x4e,0x44,0x6f,0x74,0x56,0x42,0x69,0x61,0x73,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x4e,0x65,0x67,0x49,0x6e,0x76,0x52,0x32,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x52,0x61,0x64,0x69,0x75,0x73,
    0x54,0x6f,0x53,0x63,0x72,0x65,0x65,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x20,0x41,0x4f,0x4d,0x75,0x6c,0x74,0x69,0x70,0x6c,0x69,0x65,0x72,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x41,0x4f,0x53,0x74,
    0x72,0x65,0x6e,0x67,0x74,0x68,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,
    0x53,0x61,0x6d,0x70,0x6c,0x65,0x49,0x6e,0x64,0x65,0x78,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x50,0x61,0x64,0x64,0x69,0x6e,0x67,0x30,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x50,0x61,0x64,0x64,0x69,
    0x6e,0x67,0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x32,0x20,0x53,0x63,
    0x61,0x6c,0x65,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x32,0x20,0x4f,0x66,
    0x66,0x73,0x65,0x74,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,
    0x6d,0x20,0x73,0x73,0x61,0x6f,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x20,0x5f,0x35,
    0x39,0x3b,0x0a,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x73,0x61,0x6d,0x70,
    0x6c,0x65,0x72,0x32,0x44,0x20,0x44,0x65,0x70,0x74,0x68,0x54,0x65,0x78,0x74,0x75,
    0x72,0x65,0x5f,0x44,0x65,0x70,0x74,0x68,0x53,0x61,0x6d,0x70,0x6c,0x65,0x72,0x3b,
    0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,
    0x32,0x44,0x20,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x54,0x65,0x78,0x74,0x75,0x72,0x65,
    0x5f,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x53,0x61,0x6d,0x70,0x6c,0x65,0x72,0x3b,0x0a,
    0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x32,
    0x44,0x20,0x52,0x61,0x6e,0x64,0x6f,0x6d,0x54,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,
    0x52,0x61,0x6e,0x64,0x6f,0x6d,0x53,0x61,0x6d,0x70,0x6c,0x65,0x72,0x3b,0x0a,0x0a,
    0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,
    0x3d,0x20,0x30,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x32,0x20,0x54,0x65,0x78,
    0x43,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,
    0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x6f,0x75,0x74,0x20,
    0x76,0x65,0x63,0x34,0x20,0x46,0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,
    0x0a,0x76,0x65,0x63,0x33,0x20,0x46,0x65,0x74,0x63,0x68,0x56,0x69,0x65,0x77,0x50,
    0x6f,0x73,0x28,0x76,0x65,0x63,0x32,0x20,0x75,0x76,0x29,0x0a,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x35,0x32,0x20,0x3d,0x20,0x74,0x65,0x78,
    0x74,0x75,0x72,0x65,0x4c,0x6f,0x64,0x28,0x44,0x65,0x70,0x74,0x68,0x54,0x65,0x78,
    0x74,0x75,0x72,0x65,0x5f,0x44,0x65,0x70,0x74,0x68,0x53,0x61,0x6d,0x70,0x6c,0x65,
    0x72,0x2c,0x20,0x75,0x76,0x2c,0x20,0x30,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x35,0x35,0x20,0x3d,0x20,0x5f,0x35,0x32,
    0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x76,
    0x65,0x63,0x33,0x28,0x66,0x6d,0x61,0x28,0x5f,0x35,0x39,0x2e,0x55,0x56,0x54,0x6f,
    0x56,0x69,0x65,0x77,0x41,0x2c,0x20,0x75,0x76,0x2c,0x20,0x5f,0x35,0x39,0x2e,0x55,
    0x56,0x54,0x6f,0x56,0x69,0x65,0x77,0x42,0x29,0x20,0x2a,0x20,0x5f,0x35,0x35,0x2c,
    0x20,0x5f,0x35,0x35,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x76,0x65,0x63,0x33,0x20,0x46,
    0x65,0x74,0x63,0x68,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x28,0x76,0x65,0x63,0x32,0x20,
    0x75,0x76,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,
    0x39,0x34,0x20,0x3d,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x4e,0x6f,0x72,
    0x6d,0x61,0x6c,0x54,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x4e,0x6f,0x72,0x6d,0x61,
    0x6c,0x53,0x61,0x6d,0x70,0x6c,0x65,0x72,0x2c,0x20,0x66,0x6d,0x61,0x28,0x75,0x76,
    0x2c,0x20,0x5f,0x35,0x39,0x2e,0x53,0x63,0x61,0x6c,0x65,0x2c,0x20,0x5f,0x35,0x39,
    0x2e,0x4f,0x66,0x66,0x73,0x65,0x74,0x29,0x2c,0x20,0x30,0x2e,0x30,0x29,0x2e,0x78,
    0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x6e,0x6f,0x72,
    0x6d,0x61,0x6c,0x20,0x3d,0x20,0x5f,0x39,0x34,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,
    0x66,0x20,0x28,0x61,0x6c,0x6c,0x28,0x65,0x71,0x75,0x61,0x6c,0x28,0x5f,0x39,0x34,
    0x2c,0x20,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x30,0x29,0x29,0x29,0x29,0x0a,0x20,
    0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x74,
    0x75,0x72,0x6e,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x7d,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x31,0x30,0x35,0x20,
    0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,
    0x63,0x33,0x20,0x5f,0x31,0x31,0x30,0x20,0x3d,0x20,0x28,0x5f,0x31,0x30,0x35,0x20,
    0x2a,0x20,0x32,0x2e,0x30,0x29,0x20,0x2d,0x20,0x76,0x65,0x63,0x33,0x28,0x31,0x2e,
    0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3d,
    0x20,0x5f,0x31,0x31,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x6c,
    0x65,0x6e,0x67,0x74,0x68,0x28,0x5f,0x31,0x31,0x30,0x29,0x20,0x3e,0x20,0x30,0x2e,
    0x31,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x31,0x34,0x39,0x30,0x31,0x31,0x36,0x31,
    0x31,0x39,0x33,0x38,0x34,0x37,0x36,0x35,0x36,0x32,0x35,0x29,0x0a,0x20,0x20,0x20,
    0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,
    0x5f,0x31,0x31,0x38,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,
    0x28,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x5f,0x31,0x31,0x38,0x2e,0x7a,0x20,0x3d,0x20,0x2d,0x5f,0x31,0x31,0x38,
    0x2e,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x6e,0x6f,0x72,0x6d,
    0x61,0x6c,0x20,0x3d,0x20,0x5f,0x31,0x31,0x38,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x5f,0x31,0x31,0x38,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,
    0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x74,
    0x75,0x72,0x6e,0x20,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x30,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x7d,0x0a,0x7d,0x0a,0x0a,0x76,0x65,0x63,0x34,0x20,0x47,0x65,0x74,
    0x4a,0x69,0x74,0x74,0x65,0x72,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,
    0x65,0x74,0x75,0x72,0x6e,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x52,0x61,
    0x6e,0x64,0x6f,0x6d,0x54,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x52,0x61,0x6e,0x64,
    0x6f,0x6d,0x53,0x61,0x6d,0x70,0x6c,0x65,0x72,0x2c,0x20,0x67,0x6c,0x5f,0x46,0x72,
    0x61,0x67,0x43,0x6f,0x6f,0x72,0x64,0x2e,0x78,0x79,0x20,0x2a,0x20,0x76,0x65,0x63,
    0x32,0x28,0x30,0x2e,0x32,0x35,0x29,0x2c,0x20,0x30,0x2e,0x30,0x29,0x3b,0x0a,0x7d,
    0x0a,0x0a,0x76,0x65,0x63,0x32,0x20,0x52,0x6f,0x74,0x61,0x74,0x65,0x44,0x69,0x72,
    0x65,0x63,0x74,0x69,0x6f,0x6e,0x28,0x76,0x65,0x63,0x32,0x20,0x64,0x69,0x72,0x2c,
    0x20,0x76,0x65,0x63,0x32,0x20,0x63,0x6f,0x73,0x73,0x69,0x6e,0x29,0x0a,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x76,0x65,0x63,0x32,0x28,
    0x66,0x6d,0x61,0x28,0x64,0x69,0x72,0x2e,0x78,0x2c,0x20,0x63,0x6f,0x73,0x73,0x69,
    0x6e,0x2e,0x78,0x2c,0x20,0x2d,0x28,0x64,0x69,0x72,0x2e,0x79,0x20,0x2a,0x20,0x63,
    0x6f,0x73,0x73,0x69,0x6e,0x2e,0x79,0x29,0x29,0x2c,0x20,0x66,0x6d,0x61,0x28,0x64,
    0x69,0x72,0x2e,0x78,0x2c,0x20,0x63,0x6f,0x73,0x73,0x69,0x6e,0x2e,0x79,0x2c,0x20,
    0x64,0x69,0x72,0x2e,0x79,0x20,0x2a,0x20,0x63,0x6f,0x73,0x73,0x69,0x6e,0x2e,0x78,
    0x29,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x66,0x6c,0x6f,0x61,0x74,0x20,0x43,0x6f,0x6d,
    0x70,0x75,0x74,0x65,0x53,0x61,0x6d,0x70,0x6c,0x65,0x41,0x4f,0x28,0x76,0x65,0x63,
    0x33,0x20,0x6b,0x65,0x72,0x6e,0x65,0x6c,0x50,0x6f,0x73,0x2c,0x20,0x76,0x65,0x63,
    0x33,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,0x76,0x65,0x63,0x33,0x20,0x73,
    0x61,0x6d,0x70,0x6c,0x65,0x50,0x6f,0x73,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x76,0x65,0x63,0x33,0x20,0x5f,0x31,0x37,0x33,0x20,0x3d,0x20,0x73,0x61,0x6d,0x70,
    0x6c,0x65,0x50,0x6f,0x73,0x20,0x2d,0x20,0x6b,0x65,0x72,0x6e,0x65,0x6c,0x50,0x6f,
    0x73,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x37,
    0x37,0x20,0x3d,0x20,0x64,0x6f,0x74,0x28,0x5f,0x31,0x37,0x33,0x2c,0x20,0x5f,0x31,
    0x37,0x33,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,
    0x63,0x6c,0x61,0x6d,0x70,0x28,0x66,0x6d,0x61,0x28,0x64,0x6f,0x74,0x28,0x6e,0x6f,
    0x72,0x6d,0x61,0x6c,0x2c,0x20,0x5f,0x31,0x37,0x33,0x29,0x2c,0x20,0x69,0x6e,0x76,
    0x65,0x72,0x73,0x65,0x73,0x71,0x72,0x74,0x28,0x5f,0x31,0x37,0x37,0x29,0x2c,0x20,
    0x2d,0x5f,0x35,0x39,0x2e,0x4e,0x44,0x6f,0x74,0x56,0x42,0x69,0x61,0x73,0x29,0x2c,
    0x20,0x30,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x20,0x2a,0x20,0x63,0x6c,0x61,
    0x6d,0x70,0x28,0x66,0x6d,0x61,0x28,0x5f,0x31,0x37,0x37,0x2c,0x20,0x5f,0x35,0x39,
    0x2e,0x4e,0x65,0x67,0x49,0x6e,0x76,0x52,0x32,0x2c,0x20,0x31,0x2e,0x30,0x29,0x2c,
    0x20,0x30,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x66,
    0x6c,0x6f,0x61,0x74,0x20,0x43,0x6f,0x6d,0x70,0x75,0x74,0x65,0x41,0x4f,0x28,0x76,
    0x65,0x63,0x33,0x20,0x76,0x69,0x65,0x77,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,
    0x2c,0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x69,0x65,0x77,0x4e,0x6f,0x72,0x6d,0x61,
    0x6c,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x32,
    0x30,0x34,0x20,0x3d,0x20,0x47,0x65,0x74,0x4a,0x69,0x74,0x74,0x65,0x72,0x28,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x32,0x31,0x31,
    0x20,0x3d,0x20,0x5f,0x35,0x39,0x2e,0x52,0x61,0x64,0x69,0x75,0x73,0x54,0x6f,0x53,
    0x63,0x72,0x65,0x65,0x6e,0x20,0x2f,0x20,0x76,0x69,0x65,0x77,0x50,0x6f,0x73,0x69,
    0x74,0x69,0x6f,0x6e,0x2e,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x5f,0x32,0x31,0x35,0x20,0x3d,0x20,0x5f,0x32,0x31,0x31,0x20,0x2a,0x20,
    0x30,0x2e,0x32,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x32,0x39,0x38,0x30,0x32,0x33,
    0x32,0x32,0x33,0x38,0x37,0x36,0x39,0x35,0x33,0x31,0x32,0x35,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x61,0x6f,0x20,0x3d,0x20,0x30,0x2e,0x30,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6f,0x72,0x20,0x28,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x64,0x69,0x72,0x65,0x63,0x74,0x69,0x6f,0x6e,0x49,0x6e,0x64,0x65,0x78,0x20,
    0x3d,0x20,0x30,0x2e,0x30,0x3b,0x20,0x64,0x69,0x72,0x65,0x63,0x74,0x69,0x6f,0x6e,
    0x49,0x6e,0x64,0x65,0x78,0x20,0x3c,0x20,0x38,0x2e,0x30,0x3b,0x20,0x64,0x69,0x72,
    0x65,0x63,0x74,0x69,0x6f,0x6e,0x49,0x6e,0x64,0x65,0x78,0x20,0x2b,0x3d,0x20,0x31,
    0x2e,0x30,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x32,0x32,0x39,0x20,0x3d,0x20,0x30,
    0x2e,0x37,0x38,0x35,0x33,0x39,0x38,0x31,0x38,0x35,0x32,0x35,0x33,0x31,0x34,0x33,
    0x33,0x31,0x30,0x35,0x34,0x36,0x38,0x37,0x35,0x20,0x2a,0x20,0x64,0x69,0x72,0x65,
    0x63,0x74,0x69,0x6f,0x6e,0x49,0x6e,0x64,0x65,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x32,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,
    0x20,0x76,0x65,0x63,0x32,0x28,0x63,0x6f,0x73,0x28,0x5f,0x32,0x32,0x39,0x29,0x2c,
    0x20,0x73,0x69,0x6e,0x28,0x5f,0x32,0x32,0x39,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x32,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,
    0x31,0x20,0x3d,0x20,0x5f,0x32,0x30,0x34,0x2e,0x78,0x79,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x32,0x20,0x5f,0x32,0x34,0x30,0x20,0x3d,
    0x20,0x52,0x6f,0x74,0x61,0x74,0x65,0x44,0x69,0x72,0x65,0x63,0x74,0x69,0x6f,0x6e,
    0x28,0x70,0x61,0x72,0x61,0x6d,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,
    0x72,0x61,0x79,0x50,0x69,0x78,0x65,0x6c,0x73,0x20,0x3d,0x20,0x66,0x6d,0x61,0x28,
    0x5f,0x32,0x30,0x34,0x2e,0x7a,0x2c,0x20,0x5f,0x32,0x31,0x35,0x2c,0x20,0x31,0x2e,
    0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6f,0x72,0x20,
    0x28,0x66,0x6c,0x6f,0x61,0x74,0x20,0x53,0x74,0x65,0x70,0x49,0x6e,0x64,0x65,0x78,
    0x20,0x3d,0x20,0x30,0x2e,0x30,0x3b,0x20,0x53,0x74,0x65,0x70,0x49,0x6e,0x64,0x65,
    0x78,0x20,0x3c,0x20,0x34,0x2e,0x30,0x3b,0x20,0x53,0x74,0x65,0x70,0x49,0x6e,0x64,
    0x65,0x78,0x20,0x2b,0x3d,0x20,0x31,0x2e,0x30,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x76,0x65,0x63,0x32,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x20,0x3d,0x20,
    0x66,0x6d,0x61,0x28,0x72,0x6f,0x75,0x6e,0x64,0x28,0x5f,0x32,0x34,0x30,0x20,0x2a,
    0x20,0x72,0x61,0x79,0x50,0x69,0x78,0x65,0x6c,0x73,0x29,0x2c,0x20,0x5f,0x35,0x39,
    0x2e,0x49,0x6e,0x76,0x46,0x75,0x6c,0x6c,0x52,0x65,0x73,0x6f,0x6c,0x75,0x74,0x69,
    0x6f,0x6e,0x2c,0x20,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x20,0x3d,0x20,0x76,0x69,0x65,0x77,0x50,0x6f,
    0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x34,
    0x20,0x3d,0x20,0x76,0x69,0x65,0x77,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x35,0x20,0x3d,0x20,0x46,0x65,0x74,0x63,0x68,0x56,
    0x69,0x65,0x77,0x50,0x6f,0x73,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x61,0x6f,0x20,
    0x2b,0x3d,0x20,0x43,0x6f,0x6d,0x70,0x75,0x74,0x65,0x53,0x61,0x6d,0x70,0x6c,0x65,
    0x41,0x4f,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x2c,0x20,0x70,0x61,0x72,0x61,
    0x6d,0x5f,0x34,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x35,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x61,0x79,0x50,0x69,
    0x78,0x65,0x6c,0x73,0x20,0x3d,0x20,0x66,0x6d,0x61,0x28,0x5f,0x32,0x31,0x31,0x2c,
    0x20,0x30,0x2e,0x32,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x32,0x39,0x38,0x30,0x32,
    0x33,0x32,0x32,0x33,0x38,0x37,0x36,0x39,0x35,0x33,0x31,0x32,0x35,0x2c,0x20,0x72,
    0x61,0x79,0x50,0x69,0x78,0x65,0x6c,0x73,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x20,0x5f,0x32,0x39,0x33,0x20,0x3d,0x20,0x61,0x6f,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x32,0x39,0x34,0x20,0x3d,
    0x20,0x5f,0x32,0x39,0x33,0x20,0x2a,0x20,0x28,0x5f,0x35,0x39,0x2e,0x41,0x4f,0x4d,
    0x75,0x6c,0x74,0x69,0x70,0x6c,0x69,0x65,0x72,0x20,0x2a,0x20,0x30,0x2e,0x30,0x33,
    0x31,0x32,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x61,0x6f,0x20,0x3d,0x20,0x5f,
    0x32,0x39,0x34,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,
    0x63,0x6c,0x61,0x6d,0x70,0x28,0x66,0x6d,0x61,0x28,0x2d,0x5f,0x32,0x39,0x34,0x2c,
    0x20,0x32,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x2c,0x20,0x30,0x2e,0x30,0x2c,
    0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,
    0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x32,
    0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,
    0x64,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x33,0x30,0x34,
    0x20,0x3d,0x20,0x46,0x65,0x74,0x63,0x68,0x56,0x69,0x65,0x77,0x50,0x6f,0x73,0x28,
    0x70,0x61,0x72,0x61,0x6d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x32,
    0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x20,0x3d,0x20,0x54,0x65,0x78,0x43,0x6f,
    0x6f,0x72,0x64,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x33,
    0x30,0x38,0x20,0x3d,0x20,0x46,0x65,0x74,0x63,0x68,0x4e,0x6f,0x72,0x6d,0x61,0x6c,
    0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,
    0x66,0x20,0x28,0x61,0x6c,0x6c,0x28,0x65,0x71,0x75,0x61,0x6c,0x28,0x5f,0x33,0x30,
    0x38,0x2c,0x20,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x30,0x29,0x29,0x29,0x29,0x0a,
    0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x46,0x72,
    0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x31,
    0x2e,0x30,0x2c,0x20,0x5f,0x33,0x30,0x34,0x2e,0x7a,0x2c,0x20,0x30,0x2e,0x30,0x2c,
    0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,
    0x65,0x74,0x75,0x72,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x33,0x32,0x34,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x69,0x66,0x20,0x28,0x61,0x6e,0x79,0x28,0x6e,0x6f,0x74,0x45,0x71,0x75,0x61,
    0x6c,0x28,0x5f,0x33,0x30,0x38,0x2c,0x20,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x30,
    0x29,0x29,0x29,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x20,
    0x3d,0x20,0x5f,0x33,0x30,0x34,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x20,0x3d,0x20,0x5f,
    0x33,0x30,0x38,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x33,0x32,
    0x34,0x20,0x3d,0x20,0x66,0x6d,0x61,0x28,0x43,0x6f,0x6d,0x70,0x75,0x74,0x65,0x41,
    0x4f,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,
    0x5f,0x33,0x29,0x2c,0x20,0x5f,0x35,0x39,0x2e,0x41,0x4f,0x53,0x74,0x72,0x65,0x6e,
    0x67,0x74,0x68,0x2c,0x20,0x31,0x2e,0x30,0x20,0x2d,0x20,0x5f,0x35,0x39,0x2e,0x41,
    0x4f,0x53,0x74,0x72,0x65,0x6e,0x67,0x74,0x68,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x7d,0x0a,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x33,0x32,0x34,0x20,0x3d,0x20,
    0x31,0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x46,
    0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,
    0x5f,0x33,0x32,0x34,0x2c,0x20,0x5f,0x33,0x30,0x34,0x2e,0x7a,0x2c,0x20,0x30,0x2e,
    0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 300 es

    layout(location = 0) in vec4 v_position;
    out vec2 TexCoord;
    layout(location = 1) in vec2 v_uv;

    void main()
    {
        gl_Position = v_position;
        TexCoord = v_uv;
    }

*/
static const uint8_t ssao_vs_source_glsl300es[182] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x30,0x30,0x20,0x65,0x73,0x0a,
    0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,
    0x20,0x3d,0x20,0x30,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x34,0x20,0x76,0x5f,
    0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x6f,0x75,0x74,0x20,0x76,0x65,
    0x63,0x32,0x20,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x6c,0x61,0x79,
    0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x31,
    0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x32,0x20,0x76,0x5f,0x75,0x76,0x3b,0x0a,
    0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,
    0x20,0x76,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x20,0x3d,0x20,0x76,0x5f,0x75,0x76,
    0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 300 es
    precision mediump float;
    precision highp int;

    struct ssao_params
    {
        highp vec2 UVToViewA;
        highp vec2 UVToViewB;
        highp vec2 InvFullResolution;
        highp float NDotVBias;
        highp float NegInvR2;
        highp float RadiusToScreen;
        highp float AOMultiplier;
        highp float AOStrength;
        int SampleIndex;
        highp float Padding0;
        highp float Padding1;
        highp vec2 Scale;
        highp vec2 Offset;
    };

    uniform ssao_params _59;

    uniform highp sampler2D DepthTexture_DepthSampler;
    uniform highp sampler2D NormalTexture_NormalSampler;
    uniform highp sampler2D RandomTexture_RandomSampler;

    in highp vec2 TexCoord;
    layout(location = 0) out highp vec4 FragColor;

    highp vec3 FetchViewPos(highp vec2 uv)
    {
        highp vec4 _52 = textureLod(DepthTexture_DepthSampler, uv, 0.0);
        highp float _55 = _52.x;
        return vec3((_59.UVToViewA * uv + _59.UVToViewB) * _55, _55);
    }

    highp vec3 FetchNormal(highp vec2 uv)
    {
        highp vec3 _94 = texture(NormalTexture_NormalSampler, uv * _59.Scale + _59.Offset, 0.0).xyz;
        highp vec3 normal = _94;
        if (all(equal(_94, vec3(0.0))))
        {
            return normal;
        }
        highp vec3 _105 = normal;
        highp vec3 _110 = (_105 * 2.0) - vec3(1.0);
        normal = _110;
        if (length(_110) > 0.100000001490116119384765625)
        {
            highp vec3 _118 = normalize(normal);
            _118.z = -_118.z;
            normal = _118;
            return _118;
        }
        else
        {
            return vec3(0.0);
        }
    }

    highp vec4 GetJitter()
    {
        return texture(RandomTexture_RandomSampler, gl_FragCoord.xy * vec2(0.25), 0.0);
    }

    highp vec2 RotateDirection(highp vec2 dir, highp vec2 cossin)
    {
        return vec2(dir.x * cossin.x + (-(dir.y * cossin.y)), dir.x * cossin.y + (dir.y * cossin.x));
    }

    highp float ComputeSampleAO(highp vec3 kernelPos, highp vec3 normal, highp vec3 samplePos)
    {
        highp vec3 _173 = samplePos - kernelPos;
        highp float _177 = dot(_173, _173);
        return clamp(dot(normal, _173) * inversesqrt(_177) + (-_59.NDotVBias), 0.0, 1.0) * clamp(_177 * _59.NegInvR2 + 1.0, 0.0, 1.0);
    }

    highp float ComputeAO(highp vec3 viewPosition, highp vec3 viewNormal)
    {
        highp vec4 _204 = GetJitter();
        highp float _211 = _59.RadiusToScreen / viewPosition.z;
        highp float _215 = _211 * 0.20000000298023223876953125;
        highp float ao = 0.0;
        for (highp float directionIndex = 0.0; directionIndex < 8.0; directionIndex += 1.0)
        {
            highp float _229 = 0.785398185253143310546875 * directionIndex;
            highp vec2 param = vec2(cos(_229), sin(_229));
            highp vec2 param_1 = _204.xy;
            highp vec2 _240 = RotateDirection(param, param_1);
            highp float rayPixels = _204.z * _215 + 1.0;
            for (highp float StepIndex = 0.0; StepIndex < 4.0; StepIndex += 1.0)
            {
                highp vec2 param_2 = round(_240 * rayPixels) * _59.InvFullResolution + TexCoord;
                highp vec3 param_3 = viewPosition;
                highp vec3 param_4 = viewNormal;
                highp vec3 param_5 = FetchViewPos(param_2);
                ao += ComputeSampleAO(param_3, param_4, param_5);
                rayPixels = _211 * 0.20000000298023223876953125 + rayPixels;
            }
        }
        highp float _293 = ao;
        highp float _294 = _293 * (_59.AOMultiplier * 0.03125);
        ao = _294;
        return clamp((-_294) * 2.0 + 1.0, 0.0, 1.0);
    }

    void main()
    {
        highp vec2 param = TexCoord;
        highp vec3 _304 = FetchViewPos(param);
        highp vec2 param_1 = TexCoord;
        highp vec3 _308 = FetchNormal(param_1);
        if (all(equal(_308, vec3(0.0))))
        {
            FragColor = vec4(1.0, _304.z, 0.0, 1.0);
            return;
        }
        highp float _324;
        if (any(notEqual(_308, vec3(0.0))))
        {
            highp vec3 param_2 = _304;
            highp vec3 param_3 = _308;
            _324 = ComputeAO(param_2, param_3) * _59.AOStrength + (1.0 - _59.AOStrength);
        }
        else
        {
            _324 = 1.0;
        }
        FragColor = vec4(_324, _304.z, 0.0, 1.0);
    }

*/
static const uint8_t ssao_fs_source_glsl300es[3914] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x30,0x30,0x20,0x65,0x73,0x0a,
    0x70,0x72,0x65,0x63,0x69,0x73,0x69,0x6f,0x6e,0x20,0x6d,0x65,0x64,0x69,0x75,0x6d,
    0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x3b,0x0a,0x70,0x72,0x65,0x63,0x69,0x73,0x69,
    0x6f,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x69,0x6e,0x74,0x3b,0x0a,0x0a,0x73,
    0x74,0x72,0x75,0x63,0x74,0x20,0x73,0x73,0x61,0x6f,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,
    0x63,0x32,0x20,0x55,0x56,0x54,0x6f,0x56,0x69,0x65,0x77,0x41,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x32,0x20,0x55,0x56,0x54,
    0x6f,0x56,0x69,0x65,0x77,0x42,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,
    0x70,0x20,0x76,0x65,0x63,0x32,0x20,0x49,0x6e,0x76,0x46,0x75,0x6c,0x6c,0x52,0x65,
    0x73,0x6f,0x6c,0x75,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,
    0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x4e,0x44,0x6f,0x74,0x56,0x42,
    0x69,0x61,0x73,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x20,0x4e,0x65,0x67,0x49,0x6e,0x76,0x52,0x32,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x52,
    0x61,0x64,0x69,0x75,0x73,0x54,0x6f,0x53,0x63,0x72,0x65,0x65,0x6e,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x41,
    0x4f,0x4d,0x75,0x6c,0x74,0x69,0x70,0x6c,0x69,0x65,0x72,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x41,0x4f,0x53,
    0x74,0x72,0x65,0x6e,0x67,0x74,0x68,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,
    0x20,0x53,0x61,0x6d,0x70,0x6c,0x65,0x49,0x6e,0x64,0x65,0x78,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x50,0x61,
    0x64,0x64,0x69,0x6e,0x67,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,
    0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x50,0x61,0x64,0x64,0x69,0x6e,0x67,0x31,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x32,
    0x20,0x53,0x63,0x61,0x6c,0x65,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,
    0x70,0x20,0x76,0x65,0x63,0x32,0x20,0x4f,0x66,0x66,0x73,0x65,0x74,0x3b,0x0a,0x7d,
    0x3b,0x0a,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x73,0x73,0x61,0x6f,0x5f,
    0x70,0x61,0x72,0x61,0x6d,0x73,0x20,0x5f,0x35,0x39,0x3b,0x0a,0x0a,0x75,0x6e,0x69,
    0x66,0x6f,0x72,0x6d,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x73,0x61,0x6d,0x70,0x6c,
    0x65,0x72,0x32,0x44,0x20,0x44,0x65,0x70,0x74,0x68,0x54,0x65,0x78,0x74,0x75,0x72,
    0x65,0x5f,0x44,0x65,0x70,0x74,0x68,0x53,0x61,0x6d,0x70,0x6c,0x65,0x72,0x3b,0x0a,
    0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x73,0x61,
    0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,0x20,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x54,0x65,
    0x78,0x74,0x75,0x72,0x65,0x5f,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x53,0x61,0x6d,0x70,
    0x6c,0x65,0x72,0x3b,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x68,0x69,0x67,
    0x68,0x70,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,0x20,0x52,0x61,0x6e,
    0x64,0x6f,0x6d,0x54,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x52,0x61,0x6e,0x64,0x6f,
    0x6d,0x53,0x61,0x6d,0x70,0x6c,0x65,0x72,0x3b,0x0a,0x0a,0x69,0x6e,0x20,0x68,0x69,
    0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x32,0x20,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,
    0x64,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,
    0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x6f,0x75,0x74,0x20,0x68,0x69,0x67,0x68,
    0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x46,0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,
    0x3b,0x0a,0x0a,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x46,0x65,
    0x74,0x63,0x68,0x56,0x69,0x65,0x77,0x50,0x6f,0x73,0x28,0x68,0x69,0x67,0x68,0x70,
    0x20,0x76,0x65,0x63,0x32,0x20,0x75,0x76,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x35,0x32,0x20,0x3d,
    0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x4c,0x6f,0x64,0x28,0x44,0x65,0x70,0x74,
    0x68,0x54,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x44,0x65,0x70,0x74,0x68,0x53,0x61,
    0x6d,0x70,0x6c,0x65,0x72,0x2c,0x20,0x75,0x76,0x2c,0x20,0x30,0x2e,0x30,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x5f,0x35,0x35,0x20,0x3d,0x20,0x5f,0x35,0x32,0x2e,0x78,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x76,0x65,0x63,0x33,0x28,0x28,0x5f,
    0x35,0x39,0x2e,0x55,0x56,0x54,0x6f,0x56,0x69,0x65,0x77,0x41,0x20,0x2a,0x20,0x75,
    0x76,0x20,0x2b,0x20,0x5f,0x35,0x39,0x2e,0x55,0x56,0x54,0x6f,0x56,0x69,0x65,0x77,
    0x42,0x29,0x20,0x2a,0x20,0x5f,0x35,0x35,0x2c,0x20,0x5f,0x35,0x35,0x29,0x3b,0x0a,
    0x7d,0x0a,0x0a,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x46,0x65,
    0x74,0x63,0x68,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x28,0x68,0x69,0x67,0x68,0x70,0x20,
    0x76,0x65,0x63,0x32,0x20,0x75,0x76,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x68,
    0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x39,0x34,0x20,0x3d,0x20,
    0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x54,0x65,
    0x78,0x74,0x75,0x72,0x65,0x5f,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x53,0x61,0x6d,0x70,
    0x6c,0x65,0x72,0x2c,0x20,0x75,0x76,0x20,0x2a,0x20,0x5f,0x35,0x39,0x2e,0x53,0x63,
    0x61,0x6c,0x65,0x20,0x2b,0x20,0x5f,0x35,0x39,0x2e,0x4f,0x66,0x66,0x73,0x65,0x74,
    0x2c,0x20,0x30,0x2e,0x30,0x29,0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x6e,0x6f,0x72,0x6d,0x61,
    0x6c,0x20,0x3d,0x20,0x5f,0x39,0x34,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,
    0x28,0x61,0x6c,0x6c,0x28,0x65,0x71,0x75,0x61,0x6c,0x28,0x5f,0x39,0x34,0x2c,0x20,
    0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x30,0x29,0x29,0x29,0x29,0x0a,0x20,0x20,0x20,
    0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,
    0x6e,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,
    0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,
    0x31,0x30,0x35,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x31,0x31,
    0x30,0x20,0x3d,0x20,0x28,0x5f,0x31,0x30,0x35,0x20,0x2a,0x20,0x32,0x2e,0x30,0x29,
    0x20,0x2d,0x20,0x76,0x65,0x63,0x33,0x28,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3d,0x20,0x5f,0x31,0x31,0x30,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x6c,0x65,0x6e,0x67,0x74,0x68,0x28,
    0x5f,0x31,0x31,0x30,0x29,0x20,0x3e,0x20,0x30,0x2e,0x31,0x30,0x30,0x30,0x30,0x30,
    0x30,0x30,0x31,0x34,0x39,0x30,0x31,0x31,0x36,0x31,0x31,0x39,0x33,0x38,0x34,0x37,
    0x36,0x35,0x36,0x32,0x35,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,
    0x5f,0x31,0x31,0x38,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,
    0x28,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x5f,0x31,0x31,0x38,0x2e,0x7a,0x20,0x3d,0x20,0x2d,0x5f,0x31,0x31,0x38,
    0x2e,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x6e,0x6f,0x72,0x6d,
    0x61,0x6c,0x20,0x3d,0x20,0x5f,0x31,0x31,0x38,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x5f,0x31,0x31,0x38,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,
    0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x74,
    0x75,0x72,0x6e,0x20,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x30,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x7d,0x0a,0x7d,0x0a,0x0a,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,
    0x63,0x34,0x20,0x47,0x65,0x74,0x4a,0x69,0x74,0x74,0x65,0x72,0x28,0x29,0x0a,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x74,0x65,0x78,0x74,
    0x75,0x72,0x65,0x28,0x52,0x61,0x6e,0x64,0x6f,0x6d,0x54,0x65,0x78,0x74,0x75,0x72,
    0x65,0x5f,0x52,0x61,0x6e,0x64,0x6f,0x6d,0x53,0x61,0x6d,0x70,0x6c,0x65,0x72,0x2c,
    0x20,0x67,0x6c,0x5f,0x46,0x72,0x61,0x67,0x43,0x6f,0x6f,0x72,0x64,0x2e,0x78,0x79,
    0x20,0x2a,0x20,0x76,0x65,0x63,0x32,0x28,0x30,0x2e,0x32,0x35,0x29,0x2c,0x20,0x30,
    0x2e,0x30,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,
    0x63,0x32,0x20,0x52,0x6f,0x74,0x61,0x74,0x65,0x44,0x69,0x72,0x65,0x63,0x74,0x69,
    0x6f,0x6e,0x28,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x32,0x20,0x64,0x69,
    0x72,0x2c,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x32,0x20,0x63,0x6f,
    0x73,0x73,0x69,0x6e,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,
    0x72,0x6e,0x20,0x76,0x65,0x63,0x32,0x28,0x64,0x69,0x72,0x2e,0x78,0x20,0x2a,0x20,
    0x63,0x6f,0x73,0x73,0x69,0x6e,0x2e,0x78,0x20,0x2b,0x20,0x28,0x2d,0x28,0x64,0x69,
    0x72,0x2e,0x79,0x20,0x2a,0x20,0x63,0x6f,0x73,0x73,0x69,0x6e,0x2e,0x79,0x29,0x29,
    0x2c,0x20,0x64,0x69,0x72,0x2e,0x78,0x20,0x2a,0x20,0x63,0x6f,0x73,0x73,0x69,0x6e,
    0x2e,0x79,0x20,0x2b,0x20,0x28,0x64,0x69,0x72,0x2e,0x79,0x20,0x2a,0x20,0x63,0x6f,
    0x73,0x73,0x69,0x6e,0x2e,0x78,0x29,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x68,0x69,0x67,
    0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x43,0x6f,0x6d,0x70,0x75,0x74,0x65,
    0x53,0x61,0x6d,0x70,0x6c,0x65,0x41,0x4f,0x28,0x68,0x69,0x67,0x68,0x70,0x20,0x76,
    0x65,0x63,0x33,0x20,0x6b,0x65,0x72,0x6e,0x65,0x6c,0x50,0x6f,0x73,0x2c,0x20,0x68,
    0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,
    0x2c,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x73,0x61,0x6d,
    0x70,0x6c,0x65,0x50,0x6f,0x73,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,
    0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x31,0x37,0x33,0x20,0x3d,0x20,
    0x73,0x61,0x6d,0x70,0x6c,0x65,0x50,0x6f,0x73,0x20,0x2d,0x20,0x6b,0x65,0x72,0x6e,
    0x65,0x6c,0x50,0x6f,0x73,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x37,0x37,0x20,0x3d,0x20,0x64,0x6f,
    0x74,0x28,0x5f,0x31,0x37,0x33,0x2c,0x20,0x5f,0x31,0x37,0x33,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x63,0x6c,0x61,0x6d,0x70,0x28,
    0x64,0x6f,0x74,0x28,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,0x5f,0x31,0x37,0x33,
    0x29,0x20,0x2a,0x20,0x69,0x6e,0x76,0x65,0x72,0x73,0x65,0x73,0x71,0x72,0x74,0x28,
    0x5f,0x31,0x37,0x37,0x29,0x20,0x2b,0x20,0x28,0x2d,0x5f,0x35,0x39,0x2e,0x4e,0x44,
    0x6f,0x74,0x56,0x42,0x69,0x61,0x73,0x29,0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,0x31,
    0x2e,0x30,0x29,0x20,0x2a,0x20,0x63,0x6c,0x61,0x6d,0x70,0x28,0x5f,0x31,0x37,0x37,
    0x20,0x2a,0x20,0x5f,0x35,0x39,0x2e,0x4e,0x65,0x67,0x49,0x6e,0x76,0x52,0x32,0x20,
    0x2b,0x20,0x31,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,
    0x3b,0x0a,0x7d,0x0a,0x0a,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x43,0x6f,0x6d,0x70,0x75,0x74,0x65,0x41,0x4f,0x28,0x68,0x69,0x67,0x68,0x70,
    0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x69,0x65,0x77,0x50,0x6f,0x73,0x69,0x74,0x69,
    0x6f,0x6e,0x2c,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x76,
    0x69,0x65,0x77,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x32,0x30,0x34,
    0x20,0x3d,0x20,0x47,0x65,0x74,0x4a,0x69,0x74,0x74,0x65,0x72,0x28,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,
    0x5f,0x32,0x31,0x31,0x20,0x3d,0x20,0x5f,0x35,0x39,0x2e,0x52,0x61,0x64,0x69,0x75,
    0x73,0x54,0x6f,0x53,0x63,0x72,0x65,0x65,0x6e,0x20,0x2f,0x20,0x76,0x69,0x65,0x77,
    0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2e,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x32,0x31,0x35,
    0x20,0x3d,0x20,0x5f,0x32,0x31,0x31,0x20,0x2a,0x20,0x30,0x2e,0x32,0x30,0x30,0x30,
    0x30,0x30,0x30,0x30,0x32,0x39,0x38,0x30,0x32,0x33,0x32,0x32,0x33,0x38,0x37,0x36,
    0x39,0x35,0x33,0x31,0x32,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,
    0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x61,0x6f,0x20,0x3d,0x20,0x30,0x2e,0x30,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6f,0x72,0x20,0x28,0x68,0x69,0x67,0x68,0x70,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x64,0x69,0x72,0x65,0x63,0x74,0x69,0x6f,0x6e,
    0x49,0x6e,0x64,0x65,0x78,0x20,0x3d,0x20,0x30,0x2e,0x30,0x3b,0x20,0x64,0x69,0x72,
    0x65,0x63,0x74,0x69,0x6f,0x6e,0x49,0x6e,0x64,0x65,0x78,0x20,0x3c,0x20,0x38,0x2e,
    0x30,0x3b,0x20,0x64,0x69,0x72,0x65,0x63,0x74,0x69,0x6f,0x6e,0x49,0x6e,0x64,0x65,
    0x78,0x20,0x2b,0x3d,0x20,0x31,0x2e,0x30,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x20,0x5f,0x32,0x32,0x39,0x20,0x3d,0x20,0x30,0x2e,0x37,0x38,0x35,
    0x33,0x39,0x38,0x31,0x38,0x35,0x32,0x35,0x33,0x31,0x34,0x33,0x33,0x31,0x30,0x35,
    0x34,0x36,0x38,0x37,0x35,0x20,0x2a,0x20,0x64,0x69,0x72,0x65,0x63,0x74,0x69,0x6f,
    0x6e,0x49,0x6e,0x64,0x65,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x32,0x20,0x70,0x61,0x72,0x61,0x6d,
    0x20,0x3d,0x20,0x76,0x65,0x63,0x32,0x28,0x63,0x6f,0x73,0x28,0x5f,0x32,0x32,0x39,
    0x29,0x2c,0x20,0x73,0x69,0x6e,0x28,0x5f,0x32,0x32,0x39,0x29,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,
    0x32,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x20,0x3d,0x20,0x5f,0x32,0x30,0x34,
    0x2e,0x78,0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,
    0x68,0x70,0x20,0x76,0x65,0x63,0x32,0x20,0x5f,0x32,0x34,0x30,0x20,0x3d,0x20,0x52,
    0x6f,0x74,0x61,0x74,0x65,0x44,0x69,0x72,0x65,0x63,0x74,0x69,0x6f,0x6e,0x28,0x70,
    0x61,0x72,0x61,0x6d,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x20,0x72,0x61,0x79,0x50,0x69,0x78,0x65,0x6c,0x73,0x20,0x3d,0x20,
    0x5f,0x32,0x30,0x34,0x2e,0x7a,0x20,0x2a,0x20,0x5f,0x32,0x31,0x35,0x20,0x2b,0x20,
    0x31,0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6f,0x72,
    0x20,0x28,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x53,0x74,
    0x65,0x70,0x49,0x6e,0x64,0x65,0x78,0x20,0x3d,0x20,0x30,0x2e,0x30,0x3b,0x20,0x53,
    0x74,0x65,0x70,0x49,0x6e,0x64,0x65,0x78,0x20,0x3c,0x20,0x34,0x2e,0x30,0x3b,0x20,
    0x53,0x74,0x65,0x70,0x49,0x6e,0x64,0x65,0x78,0x20,0x2b,0x3d,0x20,0x31,0x2e,0x30,
    0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,
    0x63,0x32,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x20,0x3d,0x20,0x72,0x6f,0x75,
    0x6e,0x64,0x28,0x5f,0x32,0x34,0x30,0x20,0x2a,0x20,0x72,0x61,0x79,0x50,0x69,0x78,
    0x65,0x6c,0x73,0x29,0x20,0x2a,0x20,0x5f,0x35,0x39,0x2e,0x49,0x6e,0x76,0x46,0x75,
    0x6c,0x6c,0x52,0x65,0x73,0x6f,0x6c,0x75,0x74,0x69,0x6f,0x6e,0x20,0x2b,0x20,0x54,
    0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x20,0x3d,0x20,0x76,0x69,0x65,0x77,0x50,0x6f,
    0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x34,0x20,0x3d,0x20,0x76,0x69,0x65,0x77,0x4e,0x6f,0x72,
    0x6d,0x61,0x6c,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,
    0x6d,0x5f,0x35,0x20,0x3d,0x20,0x46,0x65,0x74,0x63,0x68,0x56,0x69,0x65,0x77,0x50,
    0x6f,0x73,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x61,0x6f,0x20,0x2b,0x3d,0x20,0x43,
    0x6f,0x6d,0x70,0x75,0x74,0x65,0x53,0x61,0x6d,0x70,0x6c,0x65,0x41,0x4f,0x28,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x33,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x34,0x2c,
    0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x61,0x79,0x50,0x69,0x78,0x65,0x6c,0x73,
    0x20,0x3d,0x20,0x5f,0x32,0x31,0x31,0x20,0x2a,0x20,0x30,0x2e,0x32,0x30,0x30,0x30,
    0x30,0x30,0x30,0x30,0x32,0x39,0x38,0x30,0x32,0x33,0x32,0x32,0x33,0x38,0x37,0x36,
    0x39,0x35,0x33,0x31,0x32,0x35,0x20,0x2b,0x20,0x72,0x61,0x79,0x50,0x69,0x78,0x65,
    0x6c,0x73,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,
    0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x20,0x5f,0x32,0x39,0x33,0x20,0x3d,0x20,0x61,0x6f,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,
    0x32,0x39,0x34,0x20,0x3d,0x20,0x5f,0x32,0x39,0x33,0x20,0x2a,0x20,0x28,0x5f,0x35,
    0x39,0x2e,0x41,0x4f,0x4d,0x75,0x6c,0x74,0x69,0x70,0x6c,0x69,0x65,0x72,0x20,0x2a,
    0x20,0x30,0x2e,0x30,0x33,0x31,0x32,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x61,
    0x6f,0x20,0x3d,0x20,0x5f,0x32,0x39,0x34,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,
    0x74,0x75,0x72,0x6e,0x20,0x63,0x6c,0x61,0x6d,0x70,0x28,0x28,0x2d,0x5f,0x32,0x39,
    0x34,0x29,0x20,0x2a,0x20,0x32,0x2e,0x30,0x20,0x2b,0x20,0x31,0x2e,0x30,0x2c,0x20,
    0x30,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x76,0x6f,
    0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x32,0x20,0x70,0x61,0x72,0x61,0x6d,
    0x20,0x3d,0x20,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x33,0x30,0x34,
    0x20,0x3d,0x20,0x46,0x65,0x74,0x63,0x68,0x56,0x69,0x65,0x77,0x50,0x6f,0x73,0x28,
    0x70,0x61,0x72,0x61,0x6d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,
    0x70,0x20,0x76,0x65,0x63,0x32,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x20,0x3d,
    0x20,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,
    0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x33,0x30,0x38,0x20,0x3d,
    0x20,0x46,0x65,0x74,0x63,0x68,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x28,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x31,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x61,
    0x6c,0x6c,0x28,0x65,0x71,0x75,0x61,0x6c,0x28,0x5f,0x33,0x30,0x38,0x2c,0x20,0x76,
    0x65,0x63,0x33,0x28,0x30,0x2e,0x30,0x29,0x29,0x29,0x29,0x0a,0x20,0x20,0x20,0x20,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x46,0x72,0x61,0x67,0x43,0x6f,
    0x6c,0x6f,0x72,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x31,0x2e,0x30,0x2c,0x20,
    0x5f,0x33,0x30,0x34,0x2e,0x7a,0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,
    0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,
    0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x33,0x32,0x34,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x61,0x6e,0x79,0x28,0x6e,0x6f,0x74,0x45,0x71,
    0x75,0x61,0x6c,0x28,0x5f,0x33,0x30,0x38,0x2c,0x20,0x76,0x65,0x63,0x33,0x28,0x30,
    0x2e,0x30,0x29,0x29,0x29,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x20,0x3d,0x20,0x5f,0x33,0x30,0x34,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,
    0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x20,0x3d,0x20,0x5f,0x33,0x30,
    0x38,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x33,0x32,0x34,0x20,
    0x3d,0x20,0x43,0x6f,0x6d,0x70,0x75,0x74,0x65,0x41,0x4f,0x28,0x70,0x61,0x72,0x61,
    0x6d,0x5f,0x32,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x29,0x20,0x2a,0x20,
    0x5f,0x35,0x39,0x2e,0x41,0x4f,0x53,0x74,0x72,0x65,0x6e,0x67,0x74,0x68,0x20,0x2b,
    0x20,0x28,0x31,0x2e,0x30,0x20,0x2d,0x20,0x5f,0x35,0x39,0x2e,0x41,0x4f,0x53,0x74,
    0x72,0x65,0x6e,0x67,0x74,0x68,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,
    0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x33,0x32,0x34,0x20,0x3d,0x20,0x31,0x2e,0x30,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x46,0x72,0x61,0x67,
    0x43,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x5f,0x33,0x32,
    0x34,0x2c,0x20,0x5f,0x33,0x30,0x34,0x2e,0x7a,0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,
    0x31,0x2e,0x30,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    static float4 gl_Position;
    static float4 v_position;
    static float2 TexCoord;
    static float2 v_uv;

    struct SPIRV_Cross_Input
    {
        float4 v_position : TEXCOORD0;
        float2 v_uv : TEXCOORD1;
    };

    struct SPIRV_Cross_Output
    {
        float2 TexCoord : TEXCOORD0;
        float4 gl_Position : SV_Position;
    };

    void vert_main()
    {
        gl_Position = v_position;
        TexCoord = v_uv;
        gl_Position.y = -gl_Position.y;
        gl_Position.z = (gl_Position.z + gl_Position.w) * 0.5;
    }

    SPIRV_Cross_Output main(SPIRV_Cross_Input stage_input)
    {
        v_position = stage_input.v_position;
        v_uv = stage_input.v_uv;
        vert_main();
        SPIRV_Cross_Output stage_output;
        stage_output.gl_Position = gl_Position;
        stage_output.TexCoord = TexCoord;
        return stage_output;
    }
*/
static const uint8_t ssao_vs_bytecode_hlsl4[612] = {
    0x44,0x58,0x42,0x43,0x75,0xc6,0x06,0x9c,0x32,0x0c,0xfb,0x9b,0x43,0xff,0xba,0x64,
    0x2d,0x0c,0x63,0x77,0x01,0x00,0x00,0x00,0x64,0x02,0x00,0x00,0x05,0x00,0x00,0x00,
    0x34,0x00,0x00,0x00,0x80,0x00,0x00,0x00,0xcc,0x00,0x00,0x00,0x24,0x01,0x00,0x00,
    0xe8,0x01,0x00,0x00,0x52,0x44,0x45,0x46,0x44,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1c,0x00,0x00,0x00,0x00,0x04,0xfe,0xff,
    0x10,0x81,0x00,0x00,0x1c,0x00,0x00,0x00,0x4d,0x69,0x63,0x72,0x6f,0x73,0x6f,0x66,
    0x74,0x20,0x28,0x52,0x29,0x20,0x48,0x4c,0x53,0x4c,0x20,0x53,0x68,0x61,0x64,0x65,
    0x72,0x20,0x43,0x6f,0x6d,0x70,0x69,0x6c,0x65,0x72,0x20,0x31,0x30,0x2e,0x31,0x00,
    0x49,0x53,0x47,0x4e,0x44,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x08,0x00,0x00,0x00,
    0x38,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x0f,0x0f,0x00,0x00,0x38,0x00,0x00,0x00,0x01,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x03,0x03,0x00,0x00,
    0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x00,0xab,0xab,0xab,0x4f,0x53,0x47,0x4e,
    0x50,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x08,0x00,0x00,0x00,0x38,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x03,0x0c,0x00,0x00,0x41,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,
    0x03,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x0f,0x00,0x00,0x00,0x54,0x45,0x58,0x43,
    0x4f,0x4f,0x52,0x44,0x00,0x53,0x56,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,
    0x00,0xab,0xab,0xab,0x53,0x48,0x44,0x52,0xbc,0x00,0x00,0x00,0x40,0x00,0x01,0x00,
    0x2f,0x00,0x00,0x00,0x5f,0x00,0x00,0x03,0xf2,0x10,0x10,0x00,0x00,0x00,0x00,0x00,
    0x5f,0x00,0x00,0x03,0x32,0x10,0x10,0x00,0x01,0x00,0x00,0x00,0x65,0x00,0x00,0x03,
    0x32,0x20,0x10,0x00,0x00,0x00,0x00,0x00,0x67,0x00,0x00,0x04,0xf2,0x20,0x10,0x00,
    0x01,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x68,0x00,0x00,0x02,0x01,0x00,0x00,0x00,
    0x36,0x00,0x00,0x05,0x32,0x20,0x10,0x00,0x00,0x00,0x00,0x00,0x46,0x10,0x10,0x00,
    0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0x12,0x00,0x10,0x00,0x00,0x00,0x00,0x00,
    0x3a,0x10,0x10,0x00,0x00,0x00,0x00,0x00,0x2a,0x10,0x10,0x00,0x00,0x00,0x00,0x00,
    0x38,0x00,0x00,0x07,0x42,0x20,0x10,0x00,0x01,0x00,0x00,0x00,0x0a,0x00,0x10,0x00,
    0x00,0x00,0x00,0x00,0x01,0x40,0x00,0x00,0x00,0x00,0x00,0x3f,0x38,0x00,0x00,0x0a,
    0xb2,0x20,0x10,0x00,0x01,0x00,0x00,0x00,0x46,0x1c,0x10,0x00,0x00,0x00,0x00,0x00,
    0x02,0x40,0x00,0x00,0x00,0x00,0x80,0x3f,0x00,0x00,0x80,0xbf,0x00,0x00,0x00,0x00,
    0x00,0x00,0x80,0x3f,0x3e,0x00,0x00,0x01,0x53,0x54,0x41,0x54,0x74,0x00,0x00,0x00,
    0x05,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04,0x00,0x00,0x00,
    0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,
};
/*
    cbuffer ssao_params : register(b0)
    {
        float2 _59_UVToViewA : packoffset(c0);
        float2 _59_UVToViewB : packoffset(c0.z);
        float2 _59_InvFullResolution : packoffset(c1);
        float _59_NDotVBias : packoffset(c1.z);
        float _59_NegInvR2 : packoffset(c1.w);
        float _59_RadiusToScreen : packoffset(c2);
        float _59_AOMultiplier : packoffset(c2.y);
        float _59_AOStrength : packoffset(c2.z);
        int _59_SampleIndex : packoffset(c2.w);
        float _59_Padding0 : packoffset(c3);
        float _59_Padding1 : packoffset(c3.y);
        float2 _59_Scale : packoffset(c3.z);
        float2 _59_Offset : packoffset(c4);
    };

    Texture2D<float4> DepthTexture : register(t0);
    SamplerState DepthSampler : register(s0);
    Texture2D<float4> NormalTexture : register(t1);
    SamplerState NormalSampler : register(s1);
    Texture2D<float4> RandomTexture : register(t2);
    SamplerState RandomSampler : register(s2);

    static float4 gl_FragCoord;
    static float2 TexCoord;
    static float4 FragColor;

    struct SPIRV_Cross_Input
    {
        float2 TexCoord : TEXCOORD0;
        float4 gl_FragCoord : SV_Position;
    };

    struct SPIRV_Cross_Output
    {
        float4 FragColor : SV_Target0;
    };

    float3 FetchViewPos(float2 uv)
    {
        float4 _52 = DepthTexture.SampleLevel(DepthSampler, uv, 0.0f);
        float _55 = _52.x;
        return float3(mad(_59_UVToViewA, uv, _59_UVToViewB) * _55, _55);
    }

    float3 FetchNormal(float2 uv)
    {
        float3 _94 = NormalTexture.SampleBias(NormalSampler, mad(uv, _59_Scale, _59_Offset), 0.0f).xyz;
        float3 normal = _94;
        if (all(bool3(_94.x == 0.0f.xxx.x, _94.y == 0.0f.xxx.y, _94.z == 0.0f.xxx.z)))
        {
            return normal;
        }
        float3 _105 = normal;
        float3 _110 = (_105 * 2.0f) - 1.0f.xxx;
        normal = _110;
        if (length(_110) > 0.100000001490116119384765625f)
        {
            float3 _118 = normalize(normal);
            _118.z = -_118.z;
            normal = _118;
            return _118;
        }
        else
        {
            return 0.0f.xxx;
        }
    }

    float4 GetJitter()
    {
        return RandomTexture.SampleBias(RandomSampler, gl_FragCoord.xy * 0.25f.xx, 0.0f);
    }

    float2 RotateDirection(float2 dir, float2 cossin)
    {
        return float2(mad(dir.x, cossin.x, -(dir.y * cossin.y)), mad(dir.x, cossin.y, dir.y * cossin.x));
    }

    float ComputeSampleAO(float3 kernelPos, float3 normal, float3 samplePos)
    {
        float3 _173 = samplePos - kernelPos;
        float _177 = dot(_173, _173);
        return clamp(mad(dot(normal, _173), rsqrt(_177), -_59_NDotVBias), 0.0f, 1.0f) * clamp(mad(_177, _59_NegInvR2, 1.0f), 0.0f, 1.0f);
    }

    float ComputeAO(float3 viewPosition, float3 viewNormal)
    {
        float4 _204 = GetJitter();
        float _211 = _59_RadiusToScreen / viewPosition.z;
        float _215 = _211 * 0.20000000298023223876953125f;
        float ao = 0.0f;
        for (float directionIndex = 0.0f; directionIndex < 8.0f; directionIndex += 1.0f)
        {
            float _229 = 0.785398185253143310546875f * directionIndex;
            float2 param = float2(cos(_229), sin(_229));
            float2 param_1 = _204.xy;
            float2 _240 = RotateDirection(param, param_1);
            float rayPixels = mad(_204.z, _215, 1.0f);
            for (float StepIndex = 0.0f; StepIndex < 4.0f; StepIndex += 1.0f)
            {
                float2 param_2 = mad(round(_240 * rayPixels), _59_InvFullResolution, TexCoord);
                float3 param_3 = viewPosition;
                float3 param_4 = viewNormal;
                float3 param_5 = FetchViewPos(param_2);
                ao += ComputeSampleAO(param_3, param_4, param_5);
                rayPixels = mad(_211, 0.20000000298023223876953125f, rayPixels);
            }
        }
        float _293 = ao;
        float _294 = _293 * (_59_AOMultiplier * 0.03125f);
        ao = _294;
        return clamp(mad(-_294, 2.0f, 1.0f), 0.0f, 1.0f);
    }

    void frag_main()
    {
        float2 param = TexCoord;
        float3 _304 = FetchViewPos(param);
        float2 param_1 = TexCoord;
        float3 _308 = FetchNormal(param_1);
        if (all(bool3(_308.x == 0.0f.xxx.x, _308.y == 0.0f.xxx.y, _308.z == 0.0f.xxx.z)))
        {
            FragColor = float4(1.0f, _304.z, 0.0f, 1.0f);
            return;
        }
        float _324;
        if (any(bool3(_308.x != 0.0f.xxx.x, _308.y != 0.0f.xxx.y, _308.z != 0.0f.xxx.z)))
        {
            float3 param_2 = _304;
            float3 param_3 = _308;
            _324 = mad(ComputeAO(param_2, param_3), _59_AOStrength, 1.0f - _59_AOStrength);
        }
        else
        {
            _324 = 1.0f;
        }
        FragColor = float4(_324, _304.z, 0.0f, 1.0f);
    }

    SPIRV_Cross_Output main(SPIRV_Cross_Input stage_input)
    {
        gl_FragCoord = stage_input.gl_FragCoord;
        gl_FragCoord.w = 1.0 / gl_FragCoord.w;
        TexCoord = stage_input.TexCoord;
        frag_main();
        SPIRV_Cross_Output stage_output;
        stage_output.FragColor = FragColor;
        return stage_output;
    }
*/
static const uint8_t ssao_fs_bytecode_hlsl4[3640] = {
    0x44,0x58,0x42,0x43,0x1a,0x36,0xb2,0xe4,0xf5,0x05,0x64,0xa7,0xf4,0x4f,0x73,0x36,
    0x54,0xfd,0xfe,0x36,0x01,0x00,0x00,0x00,0x38,0x0e,0x00,0x00,0x05,0x00,0x00,0x00,
    0x34,0x00,0x00,0x00,0x04,0x04,0x00,0x00,0x5c,0x04,0x00,0x00,0x90,0x04,0x00,0x00,
    0xbc,0x0d,0x00,0x00,0x52,0x44,0x45,0x46,0xc8,0x03,0x00,0x00,0x01,0x00,0x00,0x00,
    0x5c,0x01,0x00,0x00,0x07,0x00,0x00,0x00,0x1c,0x00,0x00,0x00,0x00,0x04,0xff,0xff,
    0x10,0x81,0x00,0x00,0x9f,0x03,0x00,0x00,0xfc,0x00,0x00,0x00,0x03,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x01,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x09,0x01,0x00,0x00,0x03,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,
    0x01,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x17,0x01,0x00,0x00,0x03,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x00,0x00,0x00,
    0x01,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x25,0x01,0x00,0x00,0x02,0x00,0x00,0x00,
    0x05,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,
    0x01,0x00,0x00,0x00,0x0d,0x00,0x00,0x00,0x32,0x01,0x00,0x00,0x02,0x00,0x00,0x00,
    0x05,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0x01,0x00,0x00,0x00,
    0x01,0x00,0x00,0x00,0x0d,0x00,0x00,0x00,0x40,0x01,0x00,0x00,0x02,0x00,0x00,0x00,
    0x05,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0x02,0x00,0x00,0x00,
    0x01,0x00,0x00,0x00,0x0d,0x00,0x00,0x00,0x4e,0x01,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x01,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x44,0x65,0x70,0x74,0x68,0x53,0x61,0x6d,
    0x70,0x6c,0x65,0x72,0x00,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x53,0x61,0x6d,0x70,0x6c,
    0x65,0x72,0x00,0x52,0x61,0x6e,0x64,0x6f,0x6d,0x53,0x61,0x6d,0x70,0x6c,0x65,0x72,
    0x00,0x44,0x65,0x70,0x74,0x68,0x54,0x65,0x78,0x74,0x75,0x72,0x65,0x00,0x4e,0x6f,
    0x72,0x6d,0x61,0x6c,0x54,0x65,0x78,0x74,0x75,0x72,0x65,0x00,0x52,0x61,0x6e,0x64,
    0x6f,0x6d,0x54,0x65,0x78,0x74,0x75,0x72,0x65,0x00,0x73,0x73,0x61,0x6f,0x5f,0x70,
    0x61,0x72,0x61,0x6d,0x73,0x00,0xab,0xab,0x4e,0x01,0x00,0x00,0x0d,0x00,0x00,0x00,
    0x74,0x01,0x00,0x00,0x50,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0xac,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x08,0x00,0x00,0x00,0x02,0x00,0x00,0x00,
    0xbc,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0xcc,0x02,0x00,0x00,0x08,0x00,0x00,0x00,
    0x08,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0xbc,0x02,0x00,0x00,0x00,0x00,0x00,0x00,
    0xda,0x02,0x00,0x00,0x10,0x00,0x00,0x00,0x08,0x00,0x00,0x00,0x02,0x00,0x00,0x00,
    0xbc,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0xf0,0x02,0x00,0x00,0x18,0x00,0x00,0x00,
    0x04,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x00,0x00,0x00,
    0x10,0x03,0x00,0x00,0x1c,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x02,0x00,0x00,0x00,
    0x00,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x1d,0x03,0x00,0x00,0x20,0x00,0x00,0x00,
    0x04,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x00,0x00,0x00,
    0x30,0x03,0x00,0x00,0x24,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x02,0x00,0x00,0x00,
    0x00,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x41,0x03,0x00,0x00,0x28,0x00,0x00,0x00,
    0x04,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x00,0x00,0x00,
    0x50,0x03,0x00,0x00,0x2c,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x60,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x70,0x03,0x00,0x00,0x30,0x00,0x00,0x00,
    0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x00,0x00,0x00,
    0x7d,0x03,0x00,0x00,0x34,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x8a,0x03,0x00,0x00,0x38,0x00,0x00,0x00,
    0x08,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0xbc,0x02,0x00,0x00,0x00,0x00,0x00,0x00,
    0x94,0x03,0x00,0x00,0x40,0x00,0x00,0x00,0x08,0x00,0x00,0x00,0x02,0x00,0x00,0x00,
    0xbc,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x5f,0x35,0x39,0x5f,0x55,0x56,0x54,0x6f,
    0x56,0x69,0x65,0x77,0x41,0x00,0xab,0xab,0x01,0x00,0x03,0x00,0x01,0x00,0x02,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x5f,0x35,0x39,0x5f,0x55,0x56,0x54,0x6f,
    0x56,0x69,0x65,0x77,0x42,0x00,0x5f,0x35,0x39,0x5f,0x49,0x6e,0x76,0x46,0x75,0x6c,
    0x6c,0x52,0x65,0x73,0x6f,0x6c,0x75,0x74,0x69,0x6f,0x6e,0x00,0x5f,0x35,0x39,0x5f,
    0x4e,0x44,0x6f,0x74,0x56,0x42,0x69,0x61,0x73,0x00,0xab,0xab,0x00,0x00,0x03,0x00,
    0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x5f,0x35,0x39,0x5f,
    0x4e,0x65,0x67,0x49,0x6e,0x76,0x52,0x32,0x00,0x5f,0x35,0x39,0x5f,0x52,0x61,0x64,
    0x69,0x75,0x73,0x54,0x6f,0x53,0x63,0x72,0x65,0x65,0x6e,0x00,0x5f,0x35,0x39,0x5f,
    0x41,0x4f,0x4d,0x75,0x6c,0x74,0x69,0x70,0x6c,0x69,0x65,0x72,0x00,0x5f,0x35,0x39,
    0x5f,0x41,0x4f,0x53,0x74,0x72,0x65,0x6e,0x67,0x74,0x68,0x00,0x5f,0x35,0x39,0x5f,
    0x53,0x61,0x6d,0x70,0x6c,0x65,0x49,0x6e,0x64,0x65,0x78,0x00,0x00,0x00,0x02,0x00,
    0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x5f,0x35,0x39,0x5f,
    0x50,0x61,0x64,0x64,0x69,0x6e,0x67,0x30,0x00,0x5f,0x35,0x39,0x5f,0x50,0x61,0x64,
    0x64,0x69,0x6e,0x67,0x31,0x00,0x5f,0x35,0x39,0x5f,0x53,0x63,0x61,0x6c,0x65,0x00,
    0x5f,0x35,0x39,0x5f,0x4f,0x66,0x66,0x73,0x65,0x74,0x00,0x4d,0x69,0x63,0x72,0x6f,
    0x73,0x6f,0x66,0x74,0x20,0x28,0x52,0x29,0x20,0x48,0x4c,0x53,0x4c,0x20,0x53,0x68,
    0x61,0x64,0x65,0x72,0x20,0x43,0x6f,0x6d,0x70,0x69,0x6c,0x65,0x72,0x20,0x31,0x30,
    0x2e,0x31,0x00,0xab,0x49,0x53,0x47,0x4e,0x50,0x00,0x00,0x00,0x02,0x00,0x00,0x00,
    0x08,0x00,0x00,0x00,0x38,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x03,0x00,0x00,0x41,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x01,0x00,0x00,0x00,
    0x0f,0x03,0x00,0x00,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x00,0x53,0x56,0x5f,
    0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x00,0xab,0xab,0xab,0x4f,0x53,0x47,0x4e,
    0x2c,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x08,0x00,0x00,0x00,0x20,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x0f,0x00,0x00,0x00,0x53,0x56,0x5f,0x54,0x61,0x72,0x67,0x65,0x74,0x00,0xab,0xab,
    0x53,0x48,0x44,0x52,0x24,0x09,0x00,0x00,0x40,0x00,0x00,0x00,0x49,0x02,0x00,0x00,
    0x59,0x00,0x00,0x04,0x46,0x8e,0x20,0x00,0x00,0x00,0x00,0x00,0x05,0x00,0x00,0x00,
    0x5a,0x00,0x00,0x03,0x00,0x60,0x10,0x00,0x00,0x00,0x00,0x00,0x5a,0x00,0x00,0x03,
    0x00,0x60,0x10,0x00,0x01,0x00,0x00,0x00,0x5a,0x00,0x00,0x03,0x00,0x60,0x10,0x00,
    0x02,0x00,0x00,0x00,0x58,0x18,0x00,0x04,0x00,0x70,0x10,0x00,0x00,0x00,0x00,0x00,
    0x55,0x55,0x00,0x00,0x58,0x18,0x00,0x04,0x00,0x70,0x10,0x00,0x01,0x00,0x00,0x00,
    0x55,0x55,0x00,0x00,0x58,0x18,0x00,0x04,0x00,0x70,0x10,0x00,0x02,0x00,0x00,0x00,
    0x55,0x55,0x00,0x00,0x62,0x10,0x00,0x03,0x32,0x10,0x10,0x00,0x00,0x00,0x00,0x00,
    0x64,0x20,0x00,0x04,0x32,0x10,0x10,0x00,0x01,0x00,0x00,0x00,0x01,0x00,0x00,0x00,
    0x65,0x00,0x00,0x03,0xf2,0x20,0x10,0x00,0x00,0x00,0x00,0x00,0x68,0x00,0x00,0x02,
    0x07,0x00,0x00,0x00,0x48,0x00,0x00,0x0b,0xf2,0x00,0x10,0x00,0x00,0x00,0x00,0x00,
    0x46,0x10,0x10,0x00,0x00,0x00,0x00,0x00,0x96,0x7c,0x10,0x00,0x00,0x00,0x00,0x00,
    0x00,0x60,0x10,0x00,0x00,0x00,0x00,0x00,0x01,0x40,0x00,0x00,0x00,0x00,0x00,0x00,
    0x32,0x00,0x00,0x0b,0x32,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x46,0x10,0x10,0x00,
    0x00,0x00,0x00,0x00,0xe6,0x8a,0x20,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,
    0x46,0x80,0x20,0x00,0x00,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x4a,0x00,0x00,0x0b,
    0xf2,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x46,0x00,0x10,0x00,0x01,0x00,0x00,0x00,
    0x46,0x7e,0x10,0x00,0x01,0x00,0x00,0x00,0x00,0x60,0x10,0x00,0x01,0x00,0x00,0x00,
    0x01,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x00,0x00,0x0a,0x72,0x00,0x10,0x00,
    0x02,0x00,0x00,0x00,0x46,0x02,0x10,0x00,0x01,0x00,0x00,0x00,0x02,0x40,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x01,0x00,0x00,0x07,0x82,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x1a,0x00,0x10,0x00,
    0x02,0x00,0x00,0x00,0x0a,0x00,0x10,0x00,0x02,0x00,0x00,0x00,0x01,0x00,0x00,0x07,
    0x82,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x2a,0x00,0x10,0x00,0x02,0x00,0x00,0x00,
    0x3a,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x32,0x00,0x00,0x0f,0x72,0x00,0x10,0x00,
    0x01,0x00,0x00,0x00,0x46,0x02,0x10,0x00,0x01,0x00,0x00,0x00,0x02,0x40,0x00,0x00,
    0x00,0x00,0x00,0x40,0x00,0x00,0x00,0x40,0x00,0x00,0x00,0x40,0x00,0x00,0x00,0x00,
    0x02,0x40,0x00,0x00,0x00,0x00,0x80,0xbf,0x00,0x00,0x80,0xbf,0x00,0x00,0x80,0xbf,
    0x00,0x00,0x00,0x00,0x10,0x00,0x00,0x07,0x82,0x00,0x10,0x00,0x01,0x00,0x00,0x00,
    0x46,0x02,0x10,0x00,0x01,0x00,0x00,0x00,0x46,0x02,0x10,0x00,0x01,0x00,0x00,0x00,
    0x4b,0x00,0x00,0x05,0x12,0x00,0x10,0x00,0x02,0x00,0x00,0x00,0x3a,0x00,0x10,0x00,
    0x01,0x00,0x00,0x00,0x31,0x00,0x00,0x07,0x12,0x00,0x10,0x00,0x02,0x00,0x00,0x00,
    0x01,0x40,0x00,0x00,0xcd,0xcc,0xcc,0x3d,0x0a,0x00,0x10,0x00,0x02,0x00,0x00,0x00,
    0x44,0x00,0x00,0x05,0x82,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x3a,0x00,0x10,0x00,
    0x01,0x00,0x00,0x00,0x38,0x00,0x00,0x07,0x72,0x00,0x10,0x00,0x01,0x00,0x00,0x00,
    0xf6,0x0f,0x10,0x00,0x01,0x00,0x00,0x00,0x46,0x02,0x10,0x00,0x01,0x00,0x00,0x00,
    0x36,0x00,0x00,0x06,0x82,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x2a,0x00,0x10,0x80,
    0x41,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x01,0x00,0x00,0x07,0x72,0x00,0x10,0x00,
    0x01,0x00,0x00,0x00,0x46,0x03,0x10,0x00,0x01,0x00,0x00,0x00,0x06,0x00,0x10,0x00,
    0x02,0x00,0x00,0x00,0x37,0x00,0x00,0x0c,0x72,0x00,0x10,0x00,0x01,0x00,0x00,0x00,
    0xf6,0x0f,0x10,0x00,0x00,0x00,0x00,0x00,0x02,0x40,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x46,0x02,0x10,0x00,
    0x01,0x00,0x00,0x00,0x18,0x00,0x00,0x0a,0x72,0x00,0x10,0x00,0x02,0x00,0x00,0x00,
    0x46,0x02,0x10,0x00,0x01,0x00,0x00,0x00,0x02,0x40,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x07,
    0x82,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x1a,0x00,0x10,0x00,0x02,0x00,0x00,0x00,
    0x0a,0x00,0x10,0x00,0x02,0x00,0x00,0x00,0x01,0x00,0x00,0x07,0x82,0x00,0x10,0x00,
    0x00,0x00,0x00,0x00,0x2a,0x00,0x10,0x00,0x02,0x00,0x00,0x00,0x3a,0x00,0x10,0x00,
    0x00,0x00,0x00,0x00,0x1f,0x00,0x00,0x03,0x3a,0x00,0x10,0x00,0x00,0x00,0x00,0x00,
    0x39,0x00,0x00,0x0a,0x72,0x00,0x10,0x00,0x02,0x00,0x00,0x00,0x46,0x02,0x10,0x00,
    0x01,0x00,0x00,0x00,0x02,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3c,0x00,0x00,0x07,0x82,0x00,0x10,0x00,
    0x01,0x00,0x00,0x00,0x1a,0x00,0x10,0x00,0x02,0x00,0x00,0x00,0x0a,0x00,0x10,0x00,
    0x02,0x00,0x00,0x00,0x3c,0x00,0x00,0x07,0x82,0x00,0x10,0x00,0x01,0x00,0x00,0x00,
    0x2a,0x00,0x10,0x00,0x02,0x00,0x00,0x00,0x3a,0x00,0x10,0x00,0x01,0x00,0x00,0x00,
    0x1f,0x00,0x04,0x03,0x3a,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x32,0x00,0x00,0x0b,
    0x32,0x00,0x10,0x00,0x02,0x00,0x00,0x00,0x46,0x80,0x20,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x46,0x10,0x10,0x00,0x00,0x00,0x00,0x00,0xe6,0x8a,0x20,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x38,0x00,0x00,0x07,0x32,0x00,0x10,0x00,
    0x00,0x00,0x00,0x00,0xa6,0x0a,0x10,0x00,0x00,0x00,0x00,0x00,0x46,0x00,0x10,0x00,
    0x02,0x00,0x00,0x00,0x38,0x00,0x00,0x0a,0x32,0x00,0x10,0x00,0x02,0x00,0x00,0x00,
    0x46,0x10,0x10,0x00,0x01,0x00,0x00,0x00,0x02,0x40,0x00,0x00,0x00,0x00,0x80,0x3e,
    0x00,0x00,0x80,0x3e,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x4a,0x00,0x00,0x0b,
    0xf2,0x00,0x10,0x00,0x02,0x00,0x00,0x00,0x46,0x00,0x10,0x00,0x02,0x00,0x00,0x00,
    0x46,0x7e,0x10,0x00,0x02,0x00,0x00,0x00,0x00,0x60,0x10,0x00,0x02,0x00,0x00,0x00,
    0x01,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x0e,0x00,0x00,0x08,0x82,0x00,0x10,0x00,
    0x01,0x00,0x00,0x00,0x0a,0x80,0x20,0x00,0x00,0x00,0x00,0x00,0x02,0x00,0x00,0x00,
    0x2a,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x38,0x00,0x00,0x07,0x82,0x00,0x10,0x00,
    0x02,0x00,0x00,0x00,0x3a,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x01,0x40,0x00,0x00,
    0xcd,0xcc,0x4c,0x3e,0x32,0x00,0x00,0x09,0x42,0x00,0x10,0x00,0x02,0x00,0x00,0x00,
    0x2a,0x00,0x10,0x00,0x02,0x00,0x00,0x00,0x3a,0x00,0x10,0x00,0x02,0x00,0x00,0x00,
    0x01,0x40,0x00,0x00,0x00,0x00,0x80,0x3f,0x36,0x00,0x00,0x05,0x82,0x00,0x10,0x00,
    0x02,0x00,0x00,0x00,0x01,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x36,0x00,0x00,0x05,
    0x12,0x00,0x10,0x00,0x03,0x00,0x00,0x00,0x01,0x40,0x00,0x00,0x00,0x00,0x00,0x00,
    0x30,0x00,0x00,0x01,0x1d,0x00,0x00,0x07,0x22,0x00,0x10,0x00,0x03,0x00,0x00,0x00,
    0x0a,0x00,0x10,0x00,0x03,0x00,0x00,0x00,0x01,0x40,0x00,0x00,0x00,0x00,0x00,0x41,
    0x03,0x00,0x04,0x03,0x1a,0x00,0x10,0x00,0x03,0x00,0x00,0x00,0x38,0x00,0x00,0x07,
    0x22,0x00,0x10,0x00,0x03,0x00,0x00,0x00,0x0a,0x00,0x10,0x00,0x03,0x00,0x00,0x00,
    0x01,0x40,0x00,0x00,0xdb,0x0f,0x49,0x3f,0x4d,0x00,0x00,0x07,0x12,0x00,0x10,0x00,
    0x04,0x00,0x00,0x00,0x12,0x00,0x10,0x00,0x05,0x00,0x00,0x00,0x1a,0x00,0x10,0x00,
    0x03,0x00,0x00,0x00,0x38,0x00,0x00,0x07,0x62,0x00,0x10,0x00,0x03,0x00,0x00,0x00,
    0x56,0x04,0x10,0x00,0x02,0x00,0x00,0x00,0x06,0x00,0x10,0x00,0x04,0x00,0x00,0x00,
    0x32,0x00,0x00,0x0a,0x12,0x00,0x10,0x00,0x04,0x00,0x00,0x00,0x0a,0x00,0x10,0x00,
    0x05,0x00,0x00,0x00,0x0a,0x00,0x10,0x00,0x02,0x00,0x00,0x00,0x1a,0x00,0x10,0x80,
    0x41,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x32,0x00,0x00,0x09,0x22,0x00,0x10,0x00,
    0x04,0x00,0x00,0x00,0x0a,0x00,0x10,0x00,0x05,0x00,0x00,0x00,0x1a,0x00,0x10,0x00,
    0x02,0x00,0x00,0x00,0x2a,0x00,0x10,0x00,0x03,0x00,0x00,0x00,0x36,0x00,0x00,0x05,
    0x12,0x00,0x10,0x00,0x05,0x00,0x00,0x00,0x3a,0x00,0x10,0x00,0x02,0x00,0x00,0x00,
    0x36,0x00,0x00,0x05,0x22,0x00,0x10,0x00,0x05,0x00,0x00,0x00,0x2a,0x00,0x10,0x00,
    0x02,0x00,0x00,0x00,0x36,0x00,0x00,0x05,0x42,0x00,0x10,0x00,0x05,0x00,0x00,0x00,
    0x01,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x00,0x00,0x01,0x1d,0x00,0x00,0x07,
    0x22,0x00,0x10,0x00,0x03,0x00,0x00,0x00,0x2a,0x00,0x10,0x00,0x05,0x00,0x00,0x00,
    0x01,0x40,0x00,0x00,0x00,0x00,0x80,0x40,0x03,0x00,0x04,0x03,0x1a,0x00,0x10,0x00,
    0x03,0x00,0x00,0x00,0x38,0x00,0x00,0x07,0x62,0x00,0x10,0x00,0x03,0x00,0x00,0x00,
    0x06,0x01,0x10,0x00,0x04,0x00,0x00,0x00,0x56,0x05,0x10,0x00,0x05,0x00,0x00,0x00,
    0x40,0x00,0x00,0x05,0x62,0x00,0x10,0x00,0x03,0x00,0x00,0x00,0x56,0x06,0x10,0x00,
    0x03,0x00,0x00,0x00,0x32,0x00,0x00,0x0a,0x62,0x00,0x10,0x00,0x03,0x00,0x00,0x00,
    0x56,0x06,0x10,0x00,0x03,0x00,0x00,0x00,0x06,0x81,0x20,0x00,0x00,0x00,0x00,0x00,
    0x01,0x00,0x00,0x00,0x06,0x11,0x10,0x00,0x00,0x00,0x00,0x00,0x48,0x00,0x00,0x0b,
    0xf2,0x00,0x10,0x00,0x06,0x00,0x00,0x00,0x96,0x05,0x10,0x00,0x03,0x00,0x00,0x00,
    0x96,0x7c,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x60,0x10,0x00,0x00,0x00,0x00,0x00,
    0x01,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x32,0x00,0x00,0x0b,0x62,0x00,0x10,0x00,
    0x03,0x00,0x00,0x00,0x06,0x81,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x56,0x06,0x10,0x00,0x03,0x00,0x00,0x00,0xa6,0x8b,0x20,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x38,0x00,0x00,0x07,0x32,0x00,0x10,0x00,0x06,0x00,0x00,0x00,
    0xa6,0x0a,0x10,0x00,0x06,0x00,0x00,0x00,0x96,0x05,0x10,0x00,0x03,0x00,0x00,0x00,
    0x00,0x00,0x00,0x08,0xe2,0x00,0x10,0x00,0x03,0x00,0x00,0x00,0x06,0x09,0x10,0x80,
    0x41,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x06,0x09,0x10,0x00,0x06,0x00,0x00,0x00,
    0x10,0x00,0x00,0x07,0x42,0x00,0x10,0x00,0x04,0x00,0x00,0x00,0x96,0x07,0x10,0x00,
    0x03,0x00,0x00,0x00,0x96,0x07,0x10,0x00,0x03,0x00,0x00,0x00,0x10,0x00,0x00,0x07,
    0x22,0x00,0x10,0x00,0x03,0x00,0x00,0x00,0x46,0x02,0x10,0x00,0x01,0x00,0x00,0x00,
    0x96,0x07,0x10,0x00,0x03,0x00,0x00,0x00,0x44,0x00,0x00,0x05,0x42,0x00,0x10,0x00,
    0x03,0x00,0x00,0x00,0x2a,0x00,0x10,0x00,0x04,0x00,0x00,0x00,0x32,0x20,0x00,0x0b,
    0x22,0x00,0x10,0x00,0x03,0x00,0x00,0x00,0x1a,0x00,0x10,0x00,0x03,0x00,0x00,0x00,
    0x2a,0x00,0x10,0x00,0x03,0x00,0x00,0x00,0x2a,0x80,0x20,0x80,0x41,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x32,0x20,0x00,0x0a,0x42,0x00,0x10,0x00,
    0x03,0x00,0x00,0x00,0x2a,0x00,0x10,0x00,0x04,0x00,0x00,0x00,0x3a,0x80,0x20,0x00,
    0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x01,0x40,0x00,0x00,0x00,0x00,0x80,0x3f,
    0x32,0x00,0x00,0x09,0x12,0x00,0x10,0x00,0x05,0x00,0x00,0x00,0x1a,0x00,0x10,0x00,
    0x03,0x00,0x00,0x00,0x2a,0x00,0x10,0x00,0x03,0x00,0x00,0x00,0x0a,0x00,0x10,0x00,
    0x05,0x00,0x00,0x00,0x32,0x00,0x00,0x09,0x22,0x00,0x10,0x00,0x05,0x00,0x00,0x00,
    0x3a,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x01,0x40,0x00,0x00,0xcd,0xcc,0x4c,0x3e,
    0x1a,0x00,0x10,0x00,0x05,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0x42,0x00,0x10,0x00,
    0x05,0x00,0x00,0x00,0x2a,0x00,0x10,0x00,0x05,0x00,0x00,0x00,0x01,0x40,0x00,0x00,
    0x00,0x00,0x80,0x3f,0x16,0x00,0x00,0x01,0x36,0x00,0x00,0x05,0x82,0x00,0x10,0x00,
    0x02,0x00,0x00,0x00,0x0a,0x00,0x10,0x00,0x05,0x00,0x00,0x00,0x00,0x00,0x00,0x07,
    0x12,0x00,0x10,0x00,0x03,0x00,0x00,0x00,0x0a,0x00,0x10,0x00,0x03,0x00,0x00,0x00,
    0x01,0x40,0x00,0x00,0x00,0x00,0x80,0x3f,0x16,0x00,0x00,0x01,0x38,0x00,0x00,0x08,
    0x12,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x3a,0x00,0x10,0x00,0x02,0x00,0x00,0x00,
    0x1a,0x80,0x20,0x00,0x00,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x32,0x20,0x00,0x09,
    0x12,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x0a,0x00,0x10,0x00,0x01,0x00,0x00,0x00,
    0x01,0x40,0x00,0x00,0x00,0x00,0x80,0xbd,0x01,0x40,0x00,0x00,0x00,0x00,0x80,0x3f,
    0x00,0x00,0x00,0x09,0x22,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x01,0x40,0x00,0x00,
    0x00,0x00,0x80,0x3f,0x2a,0x80,0x20,0x80,0x41,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x02,0x00,0x00,0x00,0x32,0x00,0x00,0x0a,0x12,0x00,0x10,0x00,0x00,0x00,0x00,0x00,
    0x0a,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x2a,0x80,0x20,0x00,0x00,0x00,0x00,0x00,
    0x02,0x00,0x00,0x00,0x1a,0x00,0x10,0x00,0x01,0x00,0x00,0x00,0x12,0x00,0x00,0x01,
    0x36,0x00,0x00,0x05,0x12,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x01,0x40,0x00,0x00,
    0x00,0x00,0x80,0x3f,0x15,0x00,0x00,0x01,0x36,0x00,0x00,0x05,0x22,0x00,0x10,0x00,
    0x00,0x00,0x00,0x00,0x01,0x40,0x00,0x00,0x00,0x00,0x80,0x3f,0x12,0x00,0x00,0x01,
    0x36,0x00,0x00,0x08,0x32,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x02,0x40,0x00,0x00,
    0x00,0x00,0x80,0x3f,0x00,0x00,0x80,0x3f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x01,0x00,0x00,0x07,0x72,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x46,0x02,0x10,0x00,
    0x00,0x00,0x00,0x00,0xf6,0x0f,0x10,0x00,0x00,0x00,0x00,0x00,0x15,0x00,0x00,0x01,
    0x36,0x00,0x00,0x05,0xb2,0x20,0x10,0x00,0x00,0x00,0x00,0x00,0x86,0x04,0x10,0x00,
    0x00,0x00,0x00,0x00,0x36,0x00,0x00,0x05,0x42,0x20,0x10,0x00,0x00,0x00,0x00,0x00,
    0x01,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x3e,0x00,0x00,0x01,0x53,0x54,0x41,0x54,
    0x74,0x00,0x00,0x00,0x50,0x00,0x00,0x00,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x03,0x00,0x00,0x00,0x2a,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x08,0x00,0x00,0x00,
    0x03,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x0b,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
};
static inline const sg_shader_desc* ssao_shader_desc(sg_backend backend) {
    if (backend == SG_BACKEND_GLCORE) {
        static sg_shader_desc desc;
        static bool valid;
        if (!valid) {
            valid = true;
            desc.vertex_func.source = (const char*)ssao_vs_source_glsl410;
            desc.vertex_func.entry = "main";
            desc.fragment_func.source = (const char*)ssao_fs_source_glsl410;
            desc.fragment_func.entry = "main";
            desc.attrs[0].glsl_name = "v_position";
            desc.attrs[1].glsl_name = "v_uv";
            desc.uniform_blocks[0].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
            desc.uniform_blocks[0].size = 80;
            desc.uniform_blocks[0].glsl_uniforms[0].type = SG_UNIFORMTYPE_FLOAT2;
            desc.uniform_blocks[0].glsl_uniforms[0].array_count = 0;
            desc.uniform_blocks[0].glsl_uniforms[0].glsl_name = "_59.UVToViewA";
            desc.uniform_blocks[0].glsl_uniforms[1].type = SG_UNIFORMTYPE_FLOAT2;
            desc.uniform_blocks[0].glsl_uniforms[1].array_count = 0;
            desc.uniform_blocks[0].glsl_uniforms[1].glsl_name = "_59.UVToViewB";
            desc.uniform_blocks[0].glsl_uniforms[2].type = SG_UNIFORMTYPE_FLOAT2;
            desc.uniform_blocks[0].glsl_uniforms[2].array_count = 0;
            desc.uniform_blocks[0].glsl_uniforms[2].glsl_name = "_59.InvFullResolution";
            desc.uniform_blocks[0].glsl_uniforms[3].type = SG_UNIFORMTYPE_FLOAT;
            desc.uniform_blocks[0].glsl_uniforms[3].array_count = 0;
            desc.uniform_blocks[0].glsl_uniforms[3].glsl_name = "_59.NDotVBias";
            desc.uniform_blocks[0].glsl_uniforms[4].type = SG_UNIFORMTYPE_FLOAT;
            desc.uniform_blocks[0].glsl_uniforms[4].array_count = 0;
            desc.uniform_blocks[0].glsl_uniforms[4].glsl_name = "_59.NegInvR2";
            desc.uniform_blocks[0].glsl_uniforms[5].type = SG_UNIFORMTYPE_FLOAT;
            desc.uniform_blocks[0].glsl_uniforms[5].array_count = 0;
            desc.uniform_blocks[0].glsl_uniforms[5].glsl_name = "_59.RadiusToScreen";
            desc.uniform_blocks[0].glsl_uniforms[6].type = SG_UNIFORMTYPE_FLOAT;
            desc.uniform_blocks[0].glsl_uniforms[6].array_count = 0;
            desc.uniform_blocks[0].glsl_uniforms[6].glsl_name = "_59.AOMultiplier";
            desc.uniform_blocks[0].glsl_uniforms[7].type = SG_UNIFORMTYPE_FLOAT;
            desc.uniform_blocks[0].glsl_uniforms[7].array_count = 0;
            desc.uniform_blocks[0].glsl_uniforms[7].glsl_name = "_59.AOStrength";
            desc.uniform_blocks[0].glsl_uniforms[8].type = SG_UNIFORMTYPE_INT;
            desc.uniform_blocks[0].glsl_uniforms[8].array_count = 0;
            desc.uniform_blocks[0].glsl_uniforms[8].glsl_name = "_59.SampleIndex";
            desc.uniform_blocks[0].glsl_uniforms[9].type = SG_UNIFORMTYPE_FLOAT;
            desc.uniform_blocks[0].glsl_uniforms[9].array_count = 0;
            desc.uniform_blocks[0].glsl_uniforms[9].glsl_name = "_59.Padding0";
            desc.uniform_blocks[0].glsl_uniforms[10].type = SG_UNIFORMTYPE_FLOAT;
            desc.uniform_blocks[0].glsl_uniforms[10].array_count = 0;
            desc.uniform_blocks[0].glsl_uniforms[10].glsl_name = "_59.Padding1";
            desc.uniform_blocks[0].glsl_uniforms[11].type = SG_UNIFORMTYPE_FLOAT2;
            desc.uniform_blocks[0].glsl_uniforms[11].array_count = 0;
            desc.uniform_blocks[0].glsl_uniforms[11].glsl_name = "_59.Scale";
            desc.uniform_blocks[0].glsl_uniforms[12].type = SG_UNIFORMTYPE_FLOAT2;
            desc.uniform_blocks[0].glsl_uniforms[12].array_count = 0;
            desc.uniform_blocks[0].glsl_uniforms[12].glsl_name = "_59.Offset";
            desc.images[0].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.images[0].image_type = SG_IMAGETYPE_2D;
            desc.images[0].sample_type = SG_IMAGESAMPLETYPE_UNFILTERABLE_FLOAT;
            desc.images[0].multisampled = false;
            desc.images[1].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.images[1].image_type = SG_IMAGETYPE_2D;
            desc.images[1].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.images[1].multisampled = false;
            desc.images[2].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.images[2].image_type = SG_IMAGETYPE_2D;
            desc.images[2].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.images[2].multisampled = false;
            desc.samplers[0].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.samplers[0].sampler_type = SG_SAMPLERTYPE_NONFILTERING;
            desc.samplers[1].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.samplers[1].sampler_type = SG_SAMPLERTYPE_FILTERING;
            desc.samplers[2].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.samplers[2].sampler_type = SG_SAMPLERTYPE_FILTERING;
            desc.image_sampler_pairs[0].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.image_sampler_pairs[0].image_slot = 0;
            desc.image_sampler_pairs[0].sampler_slot = 0;
            desc.image_sampler_pairs[0].glsl_name = "DepthTexture_DepthSampler";
            desc.image_sampler_pairs[1].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.image_sampler_pairs[1].image_slot = 1;
            desc.image_sampler_pairs[1].sampler_slot = 1;
            desc.image_sampler_pairs[1].glsl_name = "NormalTexture_NormalSampler";
            desc.image_sampler_pairs[2].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.image_sampler_pairs[2].image_slot = 2;
            desc.image_sampler_pairs[2].sampler_slot = 2;
            desc.image_sampler_pairs[2].glsl_name = "RandomTexture_RandomSampler";
            desc.label = "ssao_shader";
        }
        return &desc;
    }
    if (backend == SG_BACKEND_GLES3) {
        static sg_shader_desc desc;
        static bool valid;
        if (!valid) {
            valid = true;
            desc.vertex_func.source = (const char*)ssao_vs_source_glsl300es;
            desc.vertex_func.entry = "main";
            desc.fragment_func.source = (const char*)ssao_fs_source_glsl300es;
            desc.fragment_func.entry = "main";
            desc.attrs[0].glsl_name = "v_position";
            desc.attrs[1].glsl_name = "v_uv";
            desc.uniform_blocks[0].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
            desc.uniform_blocks[0].size = 80;
            desc.uniform_blocks[0].glsl_uniforms[0].type = SG_UNIFORMTYPE_FLOAT2;
            desc.uniform_blocks[0].glsl_uniforms[0].array_count = 0;
            desc.uniform_blocks[0].glsl_uniforms[0].glsl_name = "_59.UVToViewA";
            desc.uniform_blocks[0].glsl_uniforms[1].type = SG_UNIFORMTYPE_FLOAT2;
            desc.uniform_blocks[0].glsl_uniforms[1].array_count = 0;
            desc.uniform_blocks[0].glsl_uniforms[1].glsl_name = "_59.UVToViewB";
            desc.uniform_blocks[0].glsl_uniforms[2].type = SG_UNIFORMTYPE_FLOAT2;
            desc.uniform_blocks[0].glsl_uniforms[2].array_count = 0;
            desc.uniform_blocks[0].glsl_uniforms[2].glsl_name = "_59.InvFullResolution";
            desc.uniform_blocks[0].glsl_uniforms[3].type = SG_UNIFORMTYPE_FLOAT;
            desc.uniform_blocks[0].glsl_uniforms[3].array_count = 0;
            desc.uniform_blocks[0].glsl_uniforms[3].glsl_name = "_59.NDotVBias";
            desc.uniform_blocks[0].glsl_uniforms[4].type = SG_UNIFORMTYPE_FLOAT;
            desc.uniform_blocks[0].glsl_uniforms[4].array_count = 0;
            desc.uniform_blocks[0].glsl_uniforms[4].glsl_name = "_59.NegInvR2";
            desc.uniform_blocks[0].glsl_uniforms[5].type = SG_UNIFORMTYPE_FLOAT;
            desc.uniform_blocks[0].glsl_uniforms[5].array_count = 0;
            desc.uniform_blocks[0].glsl_uniforms[5].glsl_name = "_59.RadiusToScreen";
            desc.uniform_blocks[0].glsl_uniforms[6].type = SG_UNIFORMTYPE_FLOAT;
            desc.uniform_blocks[0].glsl_uniforms[6].array_count = 0;
            desc.uniform_blocks[0].glsl_uniforms[6].glsl_name = "_59.AOMultiplier";
            desc.uniform_blocks[0].glsl_uniforms[7].type = SG_UNIFORMTYPE_FLOAT;
            desc.uniform_blocks[0].glsl_uniforms[7].array_count = 0;
            desc.uniform_blocks[0].glsl_uniforms[7].glsl_name = "_59.AOStrength";
            desc.uniform_blocks[0].glsl_uniforms[8].type = SG_UNIFORMTYPE_INT;
            desc.uniform_blocks[0].glsl_uniforms[8].array_count = 0;
            desc.uniform_blocks[0].glsl_uniforms[8].glsl_name = "_59.SampleIndex";
            desc.uniform_blocks[0].glsl_uniforms[9].type = SG_UNIFORMTYPE_FLOAT;
            desc.uniform_blocks[0].glsl_uniforms[9].array_count = 0;
            desc.uniform_blocks[0].glsl_uniforms[9].glsl_name = "_59.Padding0";
            desc.uniform_blocks[0].glsl_uniforms[10].type = SG_UNIFORMTYPE_FLOAT;
            desc.uniform_blocks[0].glsl_uniforms[10].array_count = 0;
            desc.uniform_blocks[0].glsl_uniforms[10].glsl_name = "_59.Padding1";
            desc.uniform_blocks[0].glsl_uniforms[11].type = SG_UNIFORMTYPE_FLOAT2;
            desc.uniform_blocks[0].glsl_uniforms[11].array_count = 0;
            desc.uniform_blocks[0].glsl_uniforms[11].glsl_name = "_59.Scale";
            desc.uniform_blocks[0].glsl_uniforms[12].type = SG_UNIFORMTYPE_FLOAT2;
            desc.uniform_blocks[0].glsl_uniforms[12].array_count = 0;
            desc.uniform_blocks[0].glsl_uniforms[12].glsl_name = "_59.Offset";
            desc.images[0].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.images[0].image_type = SG_IMAGETYPE_2D;
            desc.images[0].sample_type = SG_IMAGESAMPLETYPE_UNFILTERABLE_FLOAT;
            desc.images[0].multisampled = false;
            desc.images[1].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.images[1].image_type = SG_IMAGETYPE_2D;
            desc.images[1].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.images[1].multisampled = false;
            desc.images[2].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.images[2].image_type = SG_IMAGETYPE_2D;
            desc.images[2].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.images[2].multisampled = false;
            desc.samplers[0].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.samplers[0].sampler_type = SG_SAMPLERTYPE_NONFILTERING;
            desc.samplers[1].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.samplers[1].sampler_type = SG_SAMPLERTYPE_FILTERING;
            desc.samplers[2].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.samplers[2].sampler_type = SG_SAMPLERTYPE_FILTERING;
            desc.image_sampler_pairs[0].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.image_sampler_pairs[0].image_slot = 0;
            desc.image_sampler_pairs[0].sampler_slot = 0;
            desc.image_sampler_pairs[0].glsl_name = "DepthTexture_DepthSampler";
            desc.image_sampler_pairs[1].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.image_sampler_pairs[1].image_slot = 1;
            desc.image_sampler_pairs[1].sampler_slot = 1;
            desc.image_sampler_pairs[1].glsl_name = "NormalTexture_NormalSampler";
            desc.image_sampler_pairs[2].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.image_sampler_pairs[2].image_slot = 2;
            desc.image_sampler_pairs[2].sampler_slot = 2;
            desc.image_sampler_pairs[2].glsl_name = "RandomTexture_RandomSampler";
            desc.label = "ssao_shader";
        }
        return &desc;
    }
    if (backend == SG_BACKEND_D3D11) {
        static sg_shader_desc desc;
        static bool valid;
        if (!valid) {
            valid = true;
            desc.vertex_func.bytecode.ptr = ssao_vs_bytecode_hlsl4;
            desc.vertex_func.bytecode.size = 612;
            desc.vertex_func.entry = "main";
            desc.fragment_func.bytecode.ptr = ssao_fs_bytecode_hlsl4;
            desc.fragment_func.bytecode.size = 3640;
            desc.fragment_func.entry = "main";
            desc.attrs[0].hlsl_sem_name = "TEXCOORD";
            desc.attrs[0].hlsl_sem_index = 0;
            desc.attrs[1].hlsl_sem_name = "TEXCOORD";
            desc.attrs[1].hlsl_sem_index = 1;
            desc.uniform_blocks[0].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
            desc.uniform_blocks[0].size = 80;
            desc.uniform_blocks[0].hlsl_register_b_n = 0;
            desc.images[0].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.images[0].image_type = SG_IMAGETYPE_2D;
            desc.images[0].sample_type = SG_IMAGESAMPLETYPE_UNFILTERABLE_FLOAT;
            desc.images[0].multisampled = false;
            desc.images[0].hlsl_register_t_n = 0;
            desc.images[1].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.images[1].image_type = SG_IMAGETYPE_2D;
            desc.images[1].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.images[1].multisampled = false;
            desc.images[1].hlsl_register_t_n = 1;
            desc.images[2].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.images[2].image_type = SG_IMAGETYPE_2D;
            desc.images[2].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.images[2].multisampled = false;
            desc.images[2].hlsl_register_t_n = 2;
            desc.samplers[0].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.samplers[0].sampler_type = SG_SAMPLERTYPE_NONFILTERING;
            desc.samplers[0].hlsl_register_s_n = 0;
            desc.samplers[1].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.samplers[1].sampler_type = SG_SAMPLERTYPE_FILTERING;
            desc.samplers[1].hlsl_register_s_n = 1;
            desc.samplers[2].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.samplers[2].sampler_type = SG_SAMPLERTYPE_FILTERING;
            desc.samplers[2].hlsl_register_s_n = 2;
            desc.image_sampler_pairs[0].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.image_sampler_pairs[0].image_slot = 0;
            desc.image_sampler_pairs[0].sampler_slot = 0;
            desc.image_sampler_pairs[1].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.image_sampler_pairs[1].image_slot = 1;
            desc.image_sampler_pairs[1].sampler_slot = 1;
            desc.image_sampler_pairs[2].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.image_sampler_pairs[2].image_slot = 2;
            desc.image_sampler_pairs[2].sampler_slot = 2;
            desc.label = "ssao_shader";
        }
        return &desc;
    }
    return 0;
}
